{"version":3,"sources":["assets/images/endless-logo.png","constant/locale-ja.ts","components/common/header-component/header.js","constant/commonConstant.ts","constant/menu.js","data/customizer/config.js","components/common/sidebar-component/sidebar.js","components/common/footer.js","components/common/layout.js","pages/home.tsx","components/common/breadcrumb.js","components/common/formatter/formatter.ts","components/common/form-helper.tsx","api/base.ts","api/api.ts","utils/axios_utils.ts","utils/api_client.ts","components/common/datatable/spinner.tsx","components/common/datatable/custom-pagination.tsx","components/common/datatable/data-table.tsx","components/order-management/invoice-expand.tsx","components/order-management/estimate-expand.tsx","pages/s0010.tsx","components/common/document-uploader.tsx","components/client-process/set-client-employee.tsx","components/client-process/create-client.tsx","components/common/confirm-modal.tsx","pages/s0011.tsx","components/common/custom-sidebar.tsx","components/employee-process/create-employee.tsx","components/common/detail-form-common.tsx","pages/s0012.tsx","pages/s0013.tsx","pages/s0014.tsx","pages/s0015.tsx","reducers/customizer.reducer.js","reducers/index.jsx","constant/actionTypes.js","store/index.jsx","components/common/scroll-top-route.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","localeJa","mixed","default","required","oneOf","notOneOf","string","length","min","max","matches","email","url","trim","lowercase","uppercase","number","lessThan","moreThan","notEqual","positive","negative","integer","date","object","noUnknown","array","Yup","Header","useState","sidebar","setSidebar","headerbar","setHeaderbar","className","to","src","logo","alt","href","onClick","document","querySelector","classList","remove","add","id","type","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","ScreenUrl","ORDER_MANAGEMENT","SERVICE_CREATE","SERVICE_UPDATE","ESTIMATE_CREATE","ESTIMATE_UPDATE","ORDER_CREATE","ORDER_UPDATE","INVOICE_CREATE","INVOICE_UPDATE","WORK_REPORT","REMARKS_MAP","STATUS_MAP","Status","CREATING","ESTIMATED","ESTIMATE_CHANGED","ORDERED","ORDER_CHANGED","INVOICED","INVOICE_CHANGED","remarksOptions","value","label","Remark","DISCOUNT","NORMAL","TEXT","MEMBER","MENUITEMS","title","icon","Home","badgeType","active","children","path","ConfigDB","data","settings","layout_type","wrapper","bodyWrapper","sidebar_setting","sidebar_backround","color","layout_version","primary_color","secondary_color","mix_layout","router_animation","translate","props","margin","setMargin","setWidth","hideLeftArrowRTL","setHideLeftArrowRTL","hideRightArrowRTL","setHideRightArrowRTL","hideRightArrow","setHideRightArrow","hideLeftArrow","setHideLeftArrow","mainmenu","setMainMenu","configDB","layout","useSelector","content","Customizer","useEffect","window","addEventListener","handleResize","currentUrl","location","pathname","filter","items","setNavActive","subItems","subSubItems","setTimeout","getElementById","offsetWidth","innerWidth","item","menuItem","includes","submenuItems","toggletNavActive","forEach","a","b","c","style","map","i","key","sidebartitle","t","process","opacity","transition","childrenItem","index","childrenSubItem","temp","menuWidth","Footer","Layout","apiResponse","setApiResponse","callAPI","axios","get","res","Breadcrumb","breadcrumb","parent","bookmarkComponent","padId","String","padStart","formatPrice","price","addCurrency","ret","toLocaleString","formatDate","format","jsDate","Date","replace","getFullYear","getMonth","getDate","BootstrapField","as","onValueChange","name","addonBefore","addonAfter","other","useField","field","meta","classNames","touched","error","push","AddonBefore","AddonAfter","renderField","join","onChange","e","currentTarget","handleChange","Input","Textarea","CustomSelect","options","isClearable","isMulti","placeholder","isDisabled","menuPosition","customStyle","menu","provided","zIndex","helper","styles","option","indexOf","find","getValue","setTouched","setValue","onBlur","onInputChange","handleInputchange","onMenuOpen","noOptionsMessage","BASE_PATH","RequiredError","msg","Error","DefaultApiAxiosParamCreator","configuration","clientEmployeeGetByClientCode","clientCode","localVarPath","localVarUrlObj","URL","baseOptions","localVarRequestOptions","method","localVarHeaderParameter","localVarQueryParameter","undefined","queryParameters","URLSearchParams","search","set","query","toString","headersFromBaseOptions","headers","hash","clientGetAll","clientPost","client","needsSerialization","nonString","isJsonMime","JSON","stringify","createClientEmployee","clientEmployee","createEmployee","employee","createEstimateDocument","estimateDocument","createInvoiceDocument","invoiceDocument","createOrderDocument","orderDocument","createServiceDocument","serviceDocument","deleteEstimate","encodeURIComponent","deleteEstimateDocument","estimateId","deleteFile","deleteInvoice","deleteInvoiceDocument","deleteOrder","deleteOrderDocument","deleteService","deleteServiceDocument","downloadFile","employeeGetAll","employeeGetSales","estimateCheckCode","estimateCode","estimatePost","estimate","estimateUpdate","getClientByCode","getEstimateById","getEstimateDocuments","getInvoiceById","invoiceId","getInvoiceDocuments","getOrderById","orderId","getOrderDetailByOrderId","getOrderDocuments","getProjectAndService","getProjectByCode","projectCode","getServiceById","serviceId","getServiceCode","serviceCode","getServiceDocuments","getWorkReportById","workReportId","invoiceCheckCode","invoiceCode","invoicePost","invoice","invoiceUpdate","orderCheckCode","orderCode","orderManagementListGet","orderPost","order","orderUpdate","projectGetAll","projectPost","project","roleGetAll","rolePost","role","serviceCreate","service","serviceGetAll","serviceUpdate","updateInvDetailDelFlg","updateInvoiceFlag","flag","uploadFile","note","file","localVarFormParams","formDataCtor","FormData","append","workReportPost","workReport","workReportUpdate","DefaultApiFp","localVarAxiosArgs","globalAxios","basePath","axiosRequestArgs","request","defaults","common","withCredentials","interceptors","response","use","status","localStorage","setItem","code","alert","Promise","reject","api","then","Spinner","loading","defaultRowPerPage","CustomPagination","rowsPerPage","rowCount","onChangePage","onChangeRowsPerPage","currentPage","paginationPerPage","textPaging","total","currentRowRange","border","pageOptions","setPageOptions","defaultOptions","pageSet","Set","pages","Array","from","sort","numberOfPage","useMemo","Math","ceil","getNumberOfPages","totalPage","currentRow","getRangeRow","handleFirstPageButtonClick","useCallback","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Actions","lineHeight","ButtonGroup","Button","borderColor","disabled","borderStyle","defaultThemes","divider","selectStyles","container","base","paginationWidth","position","left","display","alignItems","menuShouldBlockScroll","defaultValue","Number","isSearchable","centerHeader","customStyles","header","minHeight","headRow","borderTopStyle","borderTopWidth","borderTopColor","headCells","borderRightStyle","borderRightWidth","borderRightColor","borderLeftStyle","borderLeftWidth","borderLeftColor","cells","DataTable","noRecordMessage","striped","pagination","noDataComponent","clonePagination","paginationProps","paginationComponent","columns","noHeader","responsive","noTableHead","subExpandInvoice","subChildren","expandableRows","expandableRowsHideExpander","expandableRowExpanded","row","expandableRowsComponent","expandInvoice","blankProjectService","projectName","Services","serviceName","OrderManagement","history","useHistory","useLocation","setLoading","projectMode","setProjectMode","projectOptions","setProjectOptions","clientOptions","setClientOptions","serviceOptions","setServiceOptions","message","savedAlert","setSavedAlert","projectService","setProjectService","projectOpen","serviceStartDate","serviceEndDate","dataList","initData","setInitData","projectList","clientList","clientName","serviceList","orderManagements","filterData","state","initIndex","pIndex","setPIndex","stringifySearchValues","values","searchValues","querystring","handleSearchSubmit","childColumns","formikProps","selector","sortable","paddingTop","paddingBottom","minWidth","cell","estimateFlg","orderFlg","invoiceFlg","Row","expandEstimate","setFieldValue","estimateStatus","paddingRight","Badge","variant","float","estimateTotalPrice","textAlign","padding","orderStatus","orderTotalPrice","parentIndex","findIndex","invoiceStatus","invoiceTotalPrice","p","slice","initialValues","onSubmit","enableReinitialize","Card","CardHeader","Alert","isOpen","CardBody","Col","justifyContent","maxWidth","open","fontSize","UncontrolledCollapse","toggler","DocumentUploader","documentId","filesInfo","onSelect","filesOptions","onUpload","onDelete","deleteDoc","documentName","filePath","update","prevDoc","setNoScroll","disableAdd","documentSaveName","setDocumentSaveName","files","setFiles","uploadSuccess","setUploadSuccess","initialData","handleFileUpload","size","handleFileDelete","event","handleDownloadFile","fileName","responseType","blob","Blob","createObjectURL","link","createElement","setAttribute","body","appendChild","click","revokeObjectURL","preventDefault","fileSelected","target","handleFileChange","htmlFor","data-browse","hidden","SetClientEmployee","dataProps","isOpened","setIsOpened","createFlg","setCreateFlg","iniData","clientEmployeeCode","clientEmployeeName","departmentName","phoneNumber","useReducer","action","checkedId","dispatch","CheckBox","checked","clientEmployeeColumns","Modal","toggle","createValue","handleSave","subHeaderAlign","CardFooter","CreateClient","initClientCode","initValues","address","toggleClient","catch","ConfirmModal","modalProps","setIsOpen","toggleConfirm","ModalHeader","modalTitle","ModalBody","ModalFooter","functionOnYes","yesTitle","noTitle","blankDocumentInfo","employeeCode","documents","description","SchemaValidation","shape","nullable","Service","modalProject","setModalProject","modalClient","setModalClient","modalConfirm","setModalConfirm","confirm","setConfirm","employeesOptions","setEmployeesOptions","clientEmployeeData","setClientEmployeeData","prevDocuments","setPrevDocuments","copiedAlert","setCopiedAlert","setCopyFlag","preDocId","setPreDocId","delDocId","createdServiceId","setInitialData","useParams","getPartOfName","startDate","endDate","jsStartDate","jsEndDate","fetchData","employeeList","employeeName","documentRes","documentData","prevArrDocId","doc","Boolean","oldServiceId","docs","toggleProject","referClientEmployee","handleSubmit","serviceValue","arrDocId","createDocId","val","serviceDocCreateValue","scroll","delId","handleService","apply","s","validationSchema","DropdownButton","Dropdown","Item","act","redirect","boxShadow","submitValue","handleCreateProject","backgroundColor","marginBottom","borderTopLeftRadius","borderTopRightRadius","arrayHelper","resDocId","resFilePath","resDocumentSaveName","insert","alignSelf","submitForm","CustomSidebar","openFlg","setOpenFlg","customSidebar","containClass","linkClass","aria-orientation","Nav","tabs","NavItem","NavLink","element","CreateEmployee","memberOptions","parentFormikProps","currentIndex","createRole","setCreateRole","roleOptions","setRoleOptions","postalCode","roleId","roleName","roleList","toggleRole","createRoleValue","createEmployeeValue","membersOptions","remarks","person","right","quantity","unit","unitPrice","tableData","blankDetail","newFlg","newDetail","initialDnDState","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","estimateDate","draftSchemaValidation","Estimate","setStatus","schema","setSchema","editFlag","setEditFlag","setMembersOptions","modalMember","setModalMember","deleteConfirm","setDeleteConfirm","createConfirm","setCreateConfirm","orderConfirm","setOrderConfirm","submit","setSubmit","noScroll","setCurrentIndex","setDocuments","disableFlag","setDisableFlag","copyFlag","dragAndDrop","setDragAndDrop","deleteDetails","setDeleteDetails","details","initFindData","setInitFindData","linkData","setLinkData","onDragLeave","detailFlg","setDetailFlg","memberList","member","invoices","Invoices","copyValue","oldEstimateId","submitDetails","estimateDocCreateValue","setInitMsg","setMessage","statusValue","estimateDetailId","abs","updateValue","deleteFlg","validate","Object","keys","errors","scrollTo","borderBottom","rowData","savedTemp","paddingLeft","data-position","draggable","onDragStart","initialPosition","dataset","onDragOver","newList","itemDragged","remainingItems","updateDetailIdData","n","onDrop","onRowClicked","persistTableHead","reduce","sum","textDetail","orderDate","Order","selectedDetailRows","setSelectDetailRows","invoiceConfirm","setInvoiceConfirm","savedTempAlert","setSavedTempAlert","listData","setListData","tempRow","handleRowSelected","selectedRows","purchaseOrderNumber","purchaseOrderName","orderDetails","invoiceFlag","savedTempValue","orderNumber","orderName","savedTempOrderId","submitOrderDetails","orderDocCreateValue","orderDetailId","updateOrderValue","createEstimateValue","createOrderValue","rows","selectableRows","selectableRowDisabled","selectableRowSelected","onSelectedRowsChange","paymentDate","invoiceDate","Invoice","prevState","resData","invoiceDetails","oldDetails","oldDetailUpdateId","o","savedTempInvoiceId","dataLink","actions","invoiceUpdateId","submitInvoiceDetails","invoiceDocCreateValue","invoiceDetailId","updateInvoiceValue","createInvoiceValue","arrInvoice","delOrderIds","invoiceDetail","members","workingTime","workInfo","relatedDocument","WorkReport","setMemberList","resInvoice","resInvoiceData","updateWorkReportValue","createWorkReportValue","print","initial_state","customizer","configData","sidebar_types","reducers","combineReducers","payload","layoutUpdate","sidebarTypeUpdate","settingsUpdate","colors","store","createStore","compose","applyMiddleware","thunkMiddleware","devToolsExtension","f","subscribe","serializedState","saveToLocalStorage","getState","ScrollToTop","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0f6f8a0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/endless-logo.ee8631c3.png\";","import * as Yup from 'yup';\n\nexport const localeJa = {\n  mixed: {\n    default: '不正な入力です',\n    required: 'この項目は入力必須です',\n    oneOf: `次の値から選択する必要があります: $\\{values}`,\n    notOneOf: `次の値以外を選択する必要があります: $\\{values}`,\n  },\n  string: {\n    length: `$\\{length}文字で入力してください`,\n    min: `$\\{min}文字以上で入力してください`,\n    max: `$\\{max}文字以下で入力してください`,\n    matches: `次の形式で入力してください: \"$\\{regex}\"`,\n    email: 'メールアドレスの形式が正しくありません',\n    url: 'URLの形式が正しくありません',\n    trim: '前後に空白を含めないでください',\n    lowercase: '小文字で入力してください',\n    uppercase: '大文字で入力してください',\n  },\n  number: {\n    min: `$\\{min}以上の数字を入力してください`,\n    max: `$\\{max}以下の数字を入力してください`,\n    lessThan: `$\\{less}より小さい数字を入力してください`,\n    moreThan: `$\\{more}より大きい数字を入力してください`,\n    notEqual: `$\\{notEqual}と等しくない数字を入力してください`,\n    positive: '正の数を入力してください',\n    negative: '負の数を入力してください',\n    integer: '整数を入力してください',\n  },\n  date: {\n    min: `$\\{min}以降の日付を入力してください`,\n    max: `$\\{max}以前の日付を入力してください`,\n  },\n  object: {\n    noUnknown: '予期せぬパラメータが含まれています',\n  },\n  array: {\n    min: `$\\{min}個以上選択してください`,\n    max: `$\\{max}個以下で選択してください`,\n  },\n};\n\nYup.setLocale(localeJa);\n\nexport const initYupLocale = () => undefined;\n\nexport default localeJa;\n","import React, { useState, Fragment } from 'react';\nimport logo from '../../../assets/images/endless-logo.png';\nimport { Link } from 'react-router-dom';\nimport { AlignLeft, MoreHorizontal } from 'react-feather';\n\nconst Header = () => {\n  const [sidebar, setSidebar] = useState(false);\n  const [rightSidebar, setRightSidebar] = useState(true);\n  const [headerbar, setHeaderbar] = useState(true);\n\n  const openCloseSidebar = () => {\n    if (sidebar) {\n      setSidebar(!sidebar);\n      document.querySelector('.page-main-header').classList.remove('open');\n      document.querySelector('.page-sidebar').classList.remove('open');\n      document.querySelector('.page-body').classList.remove('open');\n      document.querySelector('.footer').classList.remove('open');\n    } else {\n      setSidebar(!sidebar);\n      document.querySelector('.page-main-header').classList.add('open');\n      document.querySelector('.page-sidebar').classList.add('open');\n      document.querySelector('.page-body').classList.add('open');\n      document.querySelector('.footer').classList.add('open');\n    }\n  };\n\n  function showRightSidebar() {\n    if (rightSidebar) {\n      setRightSidebar(!rightSidebar);\n      document.querySelector('.right-sidebar').classList.add('show');\n    } else {\n      setRightSidebar(!rightSidebar);\n      document.querySelector('.right-sidebar').classList.remove('show');\n    }\n  }\n\n  //full screen function\n  function goFull() {\n    if (\n      (document.fullScreenElement && document.fullScreenElement !== null) ||\n      (!document.mozFullScreen && !document.webkitIsFullScreen)\n    ) {\n      if (document.documentElement.requestFullScreen) {\n        document.documentElement.requestFullScreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullScreen) {\n        document.documentElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className=\"page-main-header\">\n        <div className=\"main-header-right row\">\n          <div className=\"main-header-left d-lg-none\">\n            <div className=\"logo-wrapper\">\n              <Link to=\"/dashboard/default\">\n                <img className=\"img-fluid\" src={logo} alt=\"\" />\n              </Link>\n            </div>\n          </div>\n          <div className=\"mobile-sidebar d-block\">\n            <div className=\"media-body text-right switch-sm\">\n              <label className=\"switch\">\n                <a href=\"#javascript\" onClick={() => openCloseSidebar()}>\n                  <AlignLeft />\n                </a>\n              </label>\n            </div>\n          </div>\n          <div className=\"nav-right col p-0\">\n            <div className=\"d-lg-none mobile-toggle pull-right\" onClick={() => setHeaderbar(!headerbar)}>\n              <MoreHorizontal />\n            </div>\n          </div>\n          <script id=\"result-template\" type=\"text/x-handlebars-template\">\n            <div className=\"ProfileCard u-cf\">\n              <div className=\"ProfileCard-avatar\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-airplay m-0\"\n                >\n                  <path d=\"M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1\"></path>\n                  <polygon points=\"12 15 17 21 7 21 12 15\"></polygon>\n                </svg>\n              </div>\n              <div className=\"ProfileCard-details\">\n                <div className=\"ProfileCard-realName\"></div>\n              </div>\n            </div>\n          </script>\n          <script id=\"empty-template\" type=\"text/x-handlebars-template\">\n            <div className=\"EmptyMessage\">\n              Your search turned up 0 results. This most likely means the backend is down, yikes!\n            </div>\n          </script>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nexport default Header;\n","export class ScreenUrl {\n  static readonly ORDER_MANAGEMENT: string = '/ordering-system/s0010';\n\n  static readonly SERVICE_CREATE: string = '/ordering-system/s0011/create';\n\n  static readonly SERVICE_UPDATE: string = '/ordering-system/s0011/update/';\n\n  static readonly ESTIMATE_CREATE: string = '/ordering-system/s0012/create';\n\n  static readonly ESTIMATE_UPDATE: string = '/ordering-system/s0012/update/';\n\n  static readonly ORDER_CREATE: string = '/ordering-system/s0013/create';\n\n  static readonly ORDER_UPDATE: string = '/ordering-system/s0013/update/';\n\n  static readonly INVOICE_CREATE: string = '/ordering-system/s0014/create';\n\n  static readonly INVOICE_UPDATE: string = '/ordering-system/s0014/update/';\n\n  static readonly WORK_REPORT: string = '/ordering-system/s0015/';\n}\n\nexport const ZERO = 0;\n\nexport const REMARKS_MAP: { [value: string]: string } = {\n  '1': '割引',\n  '2': '通常',\n  '3': 'テキスト',\n  '4': 'メンバー',\n};\n\nexport const STATUS_MAP: { [value: string]: string } = {\n  '010': '作成中',\n  '020': '見積済',\n  '021': '(変更）見積済',\n  '030': '受注済',\n  '031': '(変更）受注済',\n  '040': '請求済',\n  '041': '(変更）請求済',\n};\n\nexport class Status {\n  static readonly CREATING: string = '010';\n\n  static readonly ESTIMATED: string = '020';\n\n  static readonly ESTIMATE_CHANGED: string = '021';\n\n  static readonly ORDERED: string = '030';\n\n  static readonly ORDER_CHANGED: string = '031';\n\n  static readonly INVOICED: string = '040';\n\n  static readonly INVOICE_CHANGED: string = '041';\n}\n\nexport const remarksOptions = [\n  { value: '1', label: '割引' },\n  { value: '2', label: '通常' },\n  { value: '3', label: 'テキスト' },\n  { value: '4', label: 'メンバー' },\n];\n\nexport class Remark {\n  static readonly DISCOUNT: string = '1';\n\n  static readonly NORMAL: string = '2';\n\n  static readonly TEXT: string = '3';\n\n  static readonly MEMBER: string = '4';\n}\n","import { Home } from 'react-feather';\nimport { ScreenUrl } from './commonConstant';\n\nexport const MENUITEMS = [\n  {\n    title: '受注システム',\n    icon: Home,\n    type: 'sub',\n    badgeType: 'primary',\n    active: false,\n    children: [{ path: `${ScreenUrl.ORDER_MANAGEMENT}`, title: '受注管理', type: 'link' }],\n  },\n];\n","export class ConfigDB {\n\tstatic data = {\n\t\tsettings: {\n\t\t\tlayout_type: 'ltr',\n\t\t\tsidebar: {\n\t\t\t\twrapper: 'default',\n\t\t\t\tbodyWrapper: 'default'\n\t\t\t},\n\t\t\tsidebar_setting: 'default-sidebar',\n\t\t\tsidebar_backround: 'dark-sidebar'\n\t\t},\n\t\tcolor: {\n\t\t\tlayout_version: 'light',\n\t\t\tcolor: 'light-1',\n\t\t\tprimary_color: '#4466f2',\n\t\t\tsecondary_color: '#1ea6ec',\n\t\t\tmix_layout: 'default'\n\t\t},\n\t\trouter_animation: 'fadeIn'\n\t}\n}\n\nexport default ConfigDB;","import React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { MENUITEMS } from '../../../constant/menu';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-switch-lang';\nimport configDB from '../../../data/customizer/config';\n\nconst Sidebar = (props) => {\n    const [margin, setMargin] = useState(0);\n    const [width, setWidth] = useState(0);\n    const [hideLeftArrowRTL, setHideLeftArrowRTL] = useState(true);\n    const [hideRightArrowRTL, setHideRightArrowRTL] = useState(true);\n    const [hideRightArrow, setHideRightArrow] = useState(true);\n    const [hideLeftArrow, setHideLeftArrow] = useState(true);\n    const [mainmenu, setMainMenu] = useState(MENUITEMS);\n    const wrapper = configDB.data.settings.sidebar.wrapper;\n    const layout = useSelector(content => content.Customizer.layout);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize)\n        handleResize();\n\n        var currentUrl = window.location.pathname;\n\n        // eslint-disable-next-line\n        mainmenu.filter(items => {\n            if (items.path === currentUrl)\n                setNavActive(items)\n            if (!items.children) return false\n            // eslint-disable-next-line\n            items.children.filter(subItems => {\n                if (subItems.path === currentUrl)\n                    setNavActive(subItems)\n                if (!subItems.children) return false\n                // eslint-disable-next-line\n                subItems.children.filter(subSubItems => {\n                    if (subSubItems.path === currentUrl)\n                        setNavActive(subSubItems)\n                })\n            })\n        })\n\n        setTimeout(() => {\n            const elmnt = document.getElementById(\"myDIV\");\n            const menuWidth = elmnt.offsetWidth;\n            // setMenuWidth(menuWidth)\n            if (menuWidth > window.innerWidth) {\n                setHideRightArrow(false);\n                setHideLeftArrowRTL(false);\n            } else {\n                setHideRightArrow(true);\n                setHideLeftArrowRTL(true);\n            }\n        }, 500)\n\n        return () => {\n            // eslint-disable-next-line\n            window.addEventListener('resize', handleResize)\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    const handleResize = () => {\n        setWidth(window.innerWidth - 310);\n    }\n\n    const setNavActive = (item) => {\n        // eslint-disable-next-line\n        MENUITEMS.filter(menuItem => {\n            // eslint-disable-next-line\n            if (menuItem != item)\n                menuItem.active = false\n            if (menuItem.children && menuItem.children.includes(item))\n                menuItem.active = true\n            if (menuItem.children) {\n                // eslint-disable-next-line\n                menuItem.children.filter(submenuItems => {\n                    if (submenuItems.children && submenuItems.children.includes(item)) {\n                        menuItem.active = true\n                        submenuItems.active = true\n                    }\n                })\n            }\n        })\n        item.active = !item.active\n        setMainMenu({ mainmenu: MENUITEMS })\n\n    }\n\n    // Click Toggle menu\n    const toggletNavActive = (item) => {\n        if (!item.active) {\n            MENUITEMS.forEach(a => {\n                if (MENUITEMS.includes(item))\n                    a.active = false\n                if (!a.children) return false\n                a.children.forEach(b => {\n                    if (a.children.includes(item)) {\n                        b.active = false\n                    }\n                    if (!b.children) return false\n                    b.children.forEach(c => {\n                        if (b.children.includes(item)) {\n                            c.active = false\n                        }\n                    })\n                })\n            });\n        }\n        item.active = !item.active\n        setMainMenu({ mainmenu: MENUITEMS })\n    }\n\n    const scrollToRight = () => {\n        const elmnt = document.getElementById(\"myDIV\");\n        const menuWidth = elmnt.offsetWidth;\n        const temp = menuWidth + margin;\n        if (temp < menuWidth) {\n            setMargin(-temp);\n            setHideRightArrow(true);\n        }\n        else {\n            setMargin(margin => margin += (-width));\n            setHideLeftArrow(false);\n        }\n    }\n\n    const scrollToLeft = () => {\n        // If Margin is reach between screen resolution\n        if (margin >= -width) {\n            setMargin(0)\n            setHideLeftArrow(true);\n        }\n        else {\n            setMargin(margin => margin += width);\n            setHideRightArrow(false);\n        }\n    }\n\n\n    const scrollToLeftRTL = () => {\n        if (margin <= -width) {\n            setMargin(margin => margin += -width);\n            setHideLeftArrowRTL(true);\n        }\n        else {\n            setMargin(margin => margin += -width);\n            setHideRightArrowRTL(false);\n        }\n    }\n\n    const scrollToRightRTL = () => {\n        const temp = width + margin\n        // Checking condition for remaing margin\n        if (temp === 0) {\n            setMargin(temp);\n            setHideRightArrowRTL(true);\n        }\n        else {\n            setMargin(margin => margin += width);\n            setHideRightArrowRTL(false);\n            setHideLeftArrowRTL(false);\n        }\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"page-sidebar\">\n                <div className=\"main-header-left d-none d-lg-block\">\n                    <div className=\"logo-wrapper compactLogo\">\n                    </div>\n                </div>\n                <div className=\"sidebar custom-scrollbar\">\n                    <ul\n                        className=\"sidebar-menu\"\n                        id=\"myDIV\"\n                        style={wrapper === 'horizontal_sidebar' ? layout === 'rtl' ?\n                            { 'marginRight': margin + 'px' } : { 'marginLeft': margin + 'px' } : { margin: '0px' }}\n                    >\n                        <li className={`left-arrow ${layout === 'rtl' ? hideLeftArrowRTL ? 'd-none' : '' : hideLeftArrow ? 'd-none' : ''}`}\n                            onClick={(wrapper === 'horizontal_sidebar' && layout === 'rtl') ? scrollToLeftRTL : scrollToLeft}><i className=\"fa fa-angle-left\"></i></li>\n                        {\n                            MENUITEMS.map((menuItem, i) =>\n                                <li className={`${menuItem.active ? 'active' : ''}`} key={i}>\n                                    {(menuItem.sidebartitle) ?\n                                        <div className=\"sidebar-title\">{menuItem.sidebartitle}</div>\n                                        : ''}\n                                    {(menuItem.type === 'sub') ?\n                                        <a className=\"sidebar-header\"  onClick={() => toggletNavActive(menuItem)}>\n                                            <menuItem.icon />\n                                            <span>{props.t(menuItem.title)}</span>\n                                            <i className=\"fa fa-angle-right pull-right\"></i>\n                                        </a>\n                                        : ''}\n                                    {(menuItem.type === 'link') ?\n                                        <Link\n                                            to={`${process.env.PUBLIC_URL}${menuItem.path}`}\n                                            className={`sidebar-header ${menuItem.active ? 'active' : ''}`}\n\n                                            onClick={() => toggletNavActive(menuItem)}\n                                        >\n                                            <menuItem.icon /><span>{props.t(menuItem.title)}</span>\n                                            {menuItem.children ?\n                                                <i className=\"fa fa-angle-right pull-right\"></i> : ''}\n                                        </Link>\n                                        : ''}\n                                    {(menuItem.type === 'exteral_link') ?\n                                        <a href={menuItem.path}  className={`sidebar-header ${menuItem.active ? 'active' : ''}`} ><menuItem.icon /><span>{menuItem.title}</span></a>\n                                        : ''}\n                                    {menuItem.children ?\n                                        <ul\n                                            className={`sidebar-submenu ${menuItem.active ? 'menu-open' : ''}`}\n                                            style={menuItem.active ? { opacity: 1, transition: 'opacity 500ms ease-in' } : {}}\n                                        >\n                                            {menuItem.children.map((childrenItem, index) =>\n                                                <li key={index} className={childrenItem.children ? childrenItem.active ? 'active' : '' : ''}>\n                                                    {(childrenItem.type === 'sub') ?\n                                                        <a href=\"#javascript\" onClick={() => toggletNavActive(childrenItem)} >\n                                                            <i className=\"fa fa-circle\"></i>{props.t(childrenItem.title)} <i className=\"fa fa-angle-right pull-right\"></i></a>\n                                                        : ''}\n\n                                                    {(childrenItem.type === 'link') ?\n                                                        <Link\n                                                            to={`${process.env.PUBLIC_URL}${childrenItem.path}`}\n                                                            className={childrenItem.active ? 'active' : ''}\n                                                            onClick={() => toggletNavActive(childrenItem)}\n                                                        >\n                                                            <i className=\"fa fa-circle\"></i>{props.t(childrenItem.title)} </Link>\n                                                        : ''}\n\n\n                                                    {childrenItem.children ?\n                                                        <ul className={`sidebar-submenu ${childrenItem.active ? 'menu-open' : 'active'}`}>\n                                                            {childrenItem.children.map((childrenSubItem, key) =>\n                                                                <li className={childrenSubItem.active ? 'active' : ''} key={key}>\n                                                                    {(childrenSubItem.type === 'link') ?\n                                                                        <Link\n                                                                            to={`${process.env.PUBLIC_URL}${childrenSubItem.path}`}\n                                                                            className={childrenSubItem.active ? 'active' : ''}\n                                                                            onClick={() => toggletNavActive(childrenSubItem)}\n                                                                        >\n                                                                            <i className=\"fa fa-circle\"></i>{props.t(childrenSubItem.title)}</Link>\n                                                                        : ''}\n                                                                </li>\n                                                            )}\n                                                        </ul>\n                                                        : ''}\n                                                </li>\n                                            )}\n                                        </ul>\n                                        : ''}\n                                </li>\n                            )\n                        }\n                        <li className={`right-arrow ${layout === 'rtl' ? hideRightArrowRTL ? 'd-none' : '' : hideRightArrow ? 'd-none' : ''}`}\n                            onClick={(wrapper === 'horizontal_sidebar' && layout === 'rtl') ? scrollToRightRTL : scrollToRight}><i className=\"fa fa-angle-right\"></i></li>\n                    </ul>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default translate(Sidebar);\n\n","import React from \"react\";\n\nconst Footer = props => {\n    return (\n    <footer className=\"footer\">\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-6 footer-copyright\">\n                    <p className=\"mb-0\"></p>\n                </div>\n            </div>\n        </div>\n</footer>\n)};\n\nexport default Footer;","import React from 'react';\nimport Header from './header-component/header';\nimport Sidebar from \"./sidebar-component/sidebar\";\nimport Footer from \"./footer\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Layout = ({children}) => {\n    return (\n        <div>\n            <div className=\"page-wrapper\">\n                <div className=\"page-body-wrapper\">\n                    <Header />\n                    <Sidebar />\n                    <div className=\"page-body\">\n                        {children}\n                    </div>\n                    <Footer />\n                </div>\n            </div>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default Layout;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AppLayout from '../components/common/layout';\n\nexport function Home(): JSX.Element {\n  const [apiResponse, setApiResponse] = useState<string>('');\n  const callAPI = async () => {\n    const res = await axios.get('/test');\n    return setApiResponse(res.data);\n  };\n\n  useEffect(() => {\n    callAPI();\n  }, []);\n\n  return (\n    <AppLayout>\n      <>\n        <div className=\"container-fluid\">\n          <div className=\"main-content\">\n            <h3>Home...</h3>\n            <p>{apiResponse}</p>\n          </div>\n        </div>\n      </>\n    </AppLayout>\n  );\n}\n\nexport default Home;\n","import React, { Fragment } from 'react';\nimport { Home } from 'react-feather';\nimport { Link } from 'react-router-dom';\n\nconst Breadcrumb = (props) => {\n  const breadcrumb = props;\n\n  return (\n    <Fragment>\n      <div className=\"container-fluid\">\n        <div className=\"page-header\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"page-header-left\">\n                <ol className=\"breadcrumb pull-right\">\n                  <li className=\"breadcrumb-item\">\n                    <Link to=\"/dashboard/default\">\n                      <Home />\n                    </Link>\n                  </li>\n                  <li className=\"breadcrumb-item\">{breadcrumb.parent}</li>\n                  <li className=\"breadcrumb-item active\">{breadcrumb.title}</li>\n                </ol>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">{breadcrumb.bookmarkComponent}</div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Breadcrumb;\n","/**\n * IDを表示形式にゼロ埋めする。\n *\n * @remarks\n * 例) 1 → \"00000001\"\n *\n * @param id - ゼロ埋め対象ID\n * @param length - ゼロ埋め数\n * @returns ゼロ埋めされたID\n */\nexport function padId(id?: string | number | null, length = 8): string {\n  if (id == null) {\n    return ''; // idがnullまたはundefinedなら空文字を返す\n  }\n  return String(id).padStart(length, '0');\n}\n\n/**\n * 金額を表示形式に整形する。\n *\n * @param price - 金額\n * @param addCurrency - 通貨を表示する場合true\n * @return 整形された金額\n */\nexport function formatPrice(price?: number | null, addCurrency = true): string {\n  if (price == null) {\n    return ''; // priceがnullまたはundefinedなら空文字を返す\n  }\n  const ret = price.toLocaleString();\n  if (addCurrency) {\n    return `\\xA5${ret}`;\n  }\n  return ret;\n}\n\n/**\n * 日付を表示形式に整形する（デフォルト: yyyy年MM月dd日形式）。\n *\n * @param date - 変換する日付（yyyy-MM-dd形式の文字列またはDateオブジェクト）\n * @param format - 変換後フォーマット\n * @returns 指定フォーマットに変換された日付\n */\nexport function formatDate(date?: Date | string | null, format = 'yyyy年MM月dd日'): string {\n  if (!date) {\n    return ''; // dateがfalsy(偽値)なら空文字を返す\n  }\n  const jsDate = new Date(date);\n  return format\n    .replace(/yyyy/g, String(jsDate.getFullYear()))\n    .replace(/MM/g, String(jsDate.getMonth() + 1).padStart(2, '0'))\n    .replace(/dd/g, String(jsDate.getDate()).padStart(2, '0'));\n}\n","import React, { PropsWithChildren, ReactNode } from 'react';\nimport Select, { OptionsType } from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport { useField, Field, FieldAttributes } from 'formik';\nimport { MenuPosition } from 'react-select/src/types';\n\ninterface FieldProps extends FieldAttributes<any> {\n  className?: string;\n  onValueChange?: (value: string | number) => void;\n  addonBefore?: string | React.ReactNode;\n  addonAfter?: string | React.ReactNode;\n  onClick?: () => void;\n}\n\nconst BootstrapField = (as: string, props: PropsWithChildren<FieldProps>) => {\n  const { className, onValueChange, children, name, addonBefore, addonAfter, ...other } = props;\n  const [field, meta] = useField(name);\n  const classNames = ['form-control'];\n  if (meta.touched && meta.error) {\n    classNames.push('is-invalid');\n  }\n  if (className) {\n    classNames.push(className);\n  }\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    field.onChange(e);\n    if (onValueChange) {\n      onValueChange(e.currentTarget.value);\n    }\n  };\n\n  const AddonBefore = (\n    <span className=\"input-group-prepend\">\n      <span className=\"input-group-text\">{addonBefore}</span>\n    </span>\n  );\n\n  const AddonAfter = (\n    <span className=\"input-group-append\">\n      <span className=\"input-group-text\">{addonAfter}</span>\n    </span>\n  );\n\n  const renderField = (\n    <Field\n      as={as}\n      className={classNames.join(' ')}\n      {...field} // eslint-disable-line react/jsx-props-no-spreading\n      {...other} // eslint-disable-line react/jsx-props-no-spreading\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleChange(e)}\n    >\n      {children}\n    </Field>\n  );\n\n  return (\n    <>\n      {addonBefore || addonAfter ? (\n        <>\n          <div className=\"input-group\">\n            {addonBefore && AddonBefore}\n            {renderField}\n            {addonAfter && AddonAfter}\n            {meta.touched && meta.error && <div className=\"invalid-feedback\">{meta.error}</div>}\n          </div>\n        </>\n      ) : (\n        <>\n          {renderField}\n          {meta.touched && meta.error && <div className=\"invalid-feedback\">{meta.error}</div>}\n        </>\n      )}\n    </>\n  );\n};\n\n/**\n * inputタグ+エラーメッセージ表示領域を生成するコンポーネント。\n * 例) <Input className='col-6' name='productName' onValueChange={(productName) => console.log(productName)} />\n */\nexport const Input: React.FC<FieldProps> = (props: FieldProps) => {\n  return BootstrapField('input', props);\n};\n\n/**\n * textareaタグ+エラーメッセージ表示領域を生成するコンポーネント。\n * 例) <Textarea\n *      className='col-6'\n *      name='description'\n *      onValueChange={(description) => console.log(description)} rows={5} />\n */\nexport const Textarea: React.FC<FieldProps> = (props: FieldProps) => {\n  return BootstrapField('textarea', props);\n};\n\n/**\n * 標準のselectタグ+エラーメッセージ表示領域を生成するコンポーネント。\n * 例) <DefaultSelect name='eastWestKbn'>\n *       <option/>\n *       <option value='1'>東日本</option>\n *       <option value='2'>西日本</option>\n *     </DefaultSelect>\n */\nexport const DefaultSelect: React.FC<FieldProps> = (props: PropsWithChildren<FieldProps>) => {\n  return BootstrapField('select', props);\n};\n\nexport type OptionType = {\n  label: string;\n  value: string | number;\n  isDisabled?: boolean;\n};\n\ninterface ReactSelectProps {\n  /**\n   * name属性\n   */\n  name: string;\n\n  /**\n   * オプション（labelとvalueを持つオブジェクトの配列）\n   */\n  options: OptionsType<OptionType>;\n\n  /**\n   * Blueイベントハンドラー\n   */\n  onBlur?: () => void;\n\n  /**\n   * 選択状態を解除可能な場合true\n   */\n  isClearable?: boolean;\n\n  /**\n   * プレースホルダー。デフォルトは「選択してください」\n   */\n  placeholder?: string;\n}\n\ninterface CustomSelectProps extends ReactSelectProps {\n  /**\n   * Changeイベントハンドラー\n   * @param value 選択された値\n   */\n  onChange?: (value: string | string[] | number | number[] | null) => void;\n  onInputChange?: (value: string | number | null) => void | undefined;\n  onMenuOpen?: () => void;\n  /**\n   * 複数選択可能な場合true\n   */\n  isMulti?: boolean;\n\n  /**\n   * 検索条件に該当するoptionが存在しない場合のメッセージ。\n   * デフォルトは「該当する選択肢がありません」\n   */\n  noOptionsMessage?: string;\n\n  isDisabled?: boolean;\n  menuPosition?: MenuPosition;\n}\n\n/**\n * react-selectを利用したドロップダウン。\n * マスターなど選択肢が多くて検索機能が必要な場合、あるいは複数選択が必要な場合に利用する。\n * 例) const warehouseOptions = [\n *       { value: '860', label: '東京テクノパーク' },\n *       { value: '974', label: '滋賀ロジステイックセンター' },\n *       ...\n *     ];\n * ...\n * <CustomSelect name='warehouseCode' options={warehouseOptions} />\n *\n * 以下リンクを参考に実装\n * https://gist.github.com/hubgit/e394e9be07d95cd5e774989178139ae8\n */\nexport const CustomSelect: React.FC<CustomSelectProps> = (props: CustomSelectProps) => {\n  const { name, options, isClearable, isMulti, placeholder, isDisabled, menuPosition } = props;\n  const customStyle = {\n    menu: (provided: any) => ({\n      ...provided,\n      zIndex: 2,\n    }),\n  };\n  const [field, meta, helper] = useField(name);\n  const classNames = [];\n  if (meta.touched && meta.error) {\n    classNames.push('is-invalid');\n  }\n  const handleChange = (option: {\n    map: (arg0: (item: OptionType) => string | number) => string | number | string[] | number[] | null;\n    value: string | number | string[] | number[] | null;\n  }) => {\n    let value: string | string[] | number | number[] | null;\n    if (option) {\n      value = props.isMulti ? option.map((item: OptionType) => item.value) : option.value;\n    } else {\n      value = props.isMulti ? [] : null;\n    }\n    helper.setTouched(true);\n    helper.setValue(value);\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n  const handleBlur = () => {\n    helper.setTouched(true);\n    if (props.onBlur) {\n      props.onBlur();\n    }\n  };\n  const getValue = () => {\n    if (props.options) {\n      const value = props.isMulti\n        ? props.options.filter((option) => field.value.indexOf(option.value) >= 0)\n        : props.options.find((option) => option.value === field.value);\n\n      return !props.isMulti && field.value === '' ? '' : value;\n    }\n    return props.isMulti ? [] : null;\n  };\n  const handleInputchange = (e: string | number | null) => {\n    if (props.onInputChange) {\n      props.onInputChange(e);\n    }\n  };\n  const onMenuOpen = () => {\n    if (props.onMenuOpen) {\n      props.onMenuOpen();\n    }\n  };\n\n  return (\n    <>\n      <Select\n        styles={customStyle}\n        name={field.name}\n        value={getValue() as []}\n        // @ts-ignore\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onInputChange={(e) => handleInputchange(e)}\n        onMenuOpen={() => onMenuOpen()}\n        options={options}\n        isClearable={isClearable}\n        isMulti={isMulti}\n        placeholder={placeholder || '選択してください'}\n        isDisabled={isDisabled}\n        noOptionsMessage={() => props.noOptionsMessage || '該当する選択肢がありません'}\n        className={classNames.join(' ')}\n        menuPosition={menuPosition}\n      />\n      {meta.touched && meta.error && <div className=\"invalid-feedback\">{meta.error}</div>}\n    </>\n  );\n};\n\ninterface StaticCreatableSelectProps extends ReactSelectProps {\n  /**\n   * Changeイベントハンドラー\n   * @param value 選択された値\n   */\n  onChange?: (value: string | string[] | number | number[] | null) => void;\n\n  /**\n   * 選択肢を生成する場合のラベルを描画する関数。\n   * デフォルトは「「${str}」で検索」\n   * @param str 現在テキストボックスに入力されている値\n   */\n  formatCreateLabel?: (str: string) => ReactNode;\n}\n\n/**\n * react-selectを利用したドロップダウン兼テキストボックス。\n * 基本はマスターの値を選択するが、自由入力も可能な検索条件に利用する。\n */\nexport const StaticCreatableSelect: React.FC<StaticCreatableSelectProps> = (props: StaticCreatableSelectProps) => {\n  const { name, options, isClearable, placeholder, formatCreateLabel } = props;\n  const [field, meta, helper] = useField(name);\n  const classNames = [];\n  if (meta.touched && meta.error) {\n    classNames.push('is-invalid');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleChange = (option: any) => {\n    let value: string | number | null;\n    if (option) {\n      value = option.value;\n    } else {\n      value = null;\n    }\n    helper.setValue(value);\n    helper.setTouched(true);\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n  const handleBlur = () => {\n    helper.setTouched(true);\n    if (props.onBlur) {\n      props.onBlur();\n    }\n  };\n  const getValue = () => {\n    if (options) {\n      return props.options.find((option) => option.value === field.value);\n    }\n    return null;\n  };\n\n  return (\n    <>\n      <CreatableSelect\n        name={field.name}\n        value={getValue() as OptionType}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        options={options}\n        isClearable={isClearable}\n        placeholder={placeholder || '入力してください'}\n        formatCreateLabel={formatCreateLabel || ((str: string) => `「${str}」で検索`)}\n        className={classNames.join(' ')}\n      />\n      {meta.touched && meta.error && <div className=\"invalid-feedback\">{meta.error}</div>}\n    </>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface CheckboxProps extends FieldAttributes<any> {\n  name: string;\n  label?: string;\n  id?: string; // 省略した場合、nameをidとする\n  onValueChange?: (checked: boolean) => void;\n}\n\n/**\n * チェックボックス。idを省略した場合、nameをidとして利用する。\n * （通常、チェックボックスにバリデーションをかけることはないため、エラーメッセージ領域は描画しない）\n * 例) <Checkbox name='inventoryManagementFlg' label='在庫管理対象' />\n */\nexport const Checkbox: React.FC<CheckboxProps> = (props: CheckboxProps) => {\n  const { name, label, id, onValueChange } = props;\n  const [field] = useField({ name, type: 'checkbox' });\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    field.onChange(e);\n    if (onValueChange) {\n      onValueChange(e.currentTarget.checked);\n    }\n  };\n  return (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        id={id || name}\n        checked={field.checked}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleChange(e)}\n      />\n      <label className=\"form-check-label ml-1\" htmlFor={id || name}>\n        {label}\n      </label>\n    </div>\n  );\n};\n\n/**\n * スイッチ形式のチェックボックスを生成するコンポーネント。idを省略した場合、nameをidとして利用する。\n * （通常、チェックボックスにバリデーションをかけることはないため、エラーメッセージ領域は描画しない）\n * 例) <Switch name='inventoryManagementFlg' label='在庫管理対象' />\n */\nexport const Switch: React.FC<CheckboxProps> = (props: CheckboxProps) => {\n  const { name, label, id, onValueChange } = props;\n  const [field] = useField({ name, type: 'checkbox' });\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    field.onChange(e);\n    if (onValueChange) {\n      onValueChange(e.currentTarget.checked);\n    }\n  };\n  return (\n    <div className=\"custom-control custom-switch\">\n      <input\n        type=\"checkbox\"\n        className=\"custom-control-input\"\n        id={id || name}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleChange(e)}\n      />\n      <label className=\"custom-control-label\" htmlFor={id || name}>\n        {label}\n      </label>\n    </div>\n  );\n};\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Swagger\n * Erb apis\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n\nexport const BASE_PATH = \"http://localhost:3001/api\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface RequestArgs\n */\nexport interface RequestArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration | undefined;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Swagger\n * Erb apis\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from './configuration';\nimport globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n// Some imports not used depending on template conditions\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n\n/**\n * \n * @export\n * @interface ClientAttributes\n */\nexport interface ClientAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof ClientAttributes\n     */\n    clientCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientAttributes\n     */\n    clientName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientAttributes\n     */\n    phoneNumber: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientAttributes\n     */\n    email: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientAttributes\n     */\n    address: string;\n}\n/**\n * \n * @export\n * @interface ClientEmployeeAttributes\n */\nexport interface ClientEmployeeAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof ClientEmployeeAttributes\n     */\n    clientEmployeeCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientEmployeeAttributes\n     */\n    clientEmployeeName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientEmployeeAttributes\n     */\n    clientCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientEmployeeAttributes\n     */\n    departmentName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientEmployeeAttributes\n     */\n    phoneNumber: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ClientEmployeeAttributes\n     */\n    email: string;\n}\n/**\n * \n * @export\n * @interface DocumentAttributes\n */\nexport interface DocumentAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof DocumentAttributes\n     */\n    documentId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof DocumentAttributes\n     */\n    documentName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DocumentAttributes\n     */\n    filePath: string;\n    /**\n     * \n     * @type {string}\n     * @memberof DocumentAttributes\n     */\n    documentSaveName: string;\n}\n/**\n * \n * @export\n * @interface EmployeeAttributes\n */\nexport interface EmployeeAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof EmployeeAttributes\n     */\n    employeeCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmployeeAttributes\n     */\n    employeeName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmployeeAttributes\n     */\n    departmentName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmployeeAttributes\n     */\n    email: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmployeeAttributes\n     */\n    postalCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EmployeeAttributes\n     */\n    phoneNumber: string;\n}\n/**\n * \n * @export\n * @interface EstimateCreateAttributes\n */\nexport interface EstimateCreateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateCreateAttributes\n     */\n    estimateCode: string;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateCreateAttributes\n     */\n    serviceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateCreateAttributes\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateCreateAttributes\n     */\n    estimateDate?: string;\n    /**\n     * \n     * @type {Array<EstimateDetailAttributes>}\n     * @memberof EstimateCreateAttributes\n     */\n    details?: Array<EstimateDetailAttributes>;\n}\n/**\n * \n * @export\n * @interface EstimateDetailAttributes\n */\nexport interface EstimateDetailAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailAttributes\n     */\n    index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailAttributes\n     */\n    estimateId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailAttributes\n     */\n    note: string;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailAttributes\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailAttributes\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailAttributes\n     */\n    unitPrice?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailAttributes\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailAttributes\n     */\n    remarks: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailAttributes\n     */\n    person?: string;\n}\n/**\n * \n * @export\n * @interface EstimateDetailUpdateAttributes\n */\nexport interface EstimateDetailUpdateAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    estimateDetailId: number;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    estimateId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    note: string;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    unitPrice?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    remarks: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateDetailUpdateAttributes\n     */\n    person?: string;\n}\n/**\n * \n * @export\n * @interface EstimateDocumentAttributes\n */\nexport interface EstimateDocumentAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateDocumentAttributes\n     */\n    estimateId: number;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof EstimateDocumentAttributes\n     */\n    documents: Array<number>;\n}\n/**\n * \n * @export\n * @interface EstimateUpdateAttributes\n */\nexport interface EstimateUpdateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateUpdateAttributes\n     */\n    estimateCode: string;\n    /**\n     * \n     * @type {number}\n     * @memberof EstimateUpdateAttributes\n     */\n    serviceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateUpdateAttributes\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof EstimateUpdateAttributes\n     */\n    estimateDate?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EstimateUpdateAttributes\n     */\n    orderFlg: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof EstimateUpdateAttributes\n     */\n    deleteFlg: boolean;\n    /**\n     * \n     * @type {Array<EstimateDetailUpdateAttributes>}\n     * @memberof EstimateUpdateAttributes\n     */\n    details?: Array<EstimateDetailUpdateAttributes>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof EstimateUpdateAttributes\n     */\n    deleteDetails?: Array<number>;\n}\n/**\n * \n * @export\n * @interface InvoiceCreateAttributes\n */\nexport interface InvoiceCreateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceCreateAttributes\n     */\n    invoiceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceCreateAttributes\n     */\n    invoiceDate?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceCreateAttributes\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceCreateAttributes\n     */\n    paymentDate?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceCreateAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {Array<InvoiceDetailAttributes>}\n     * @memberof InvoiceCreateAttributes\n     */\n    details?: Array<InvoiceDetailAttributes>;\n}\n/**\n * \n * @export\n * @interface InvoiceDetailAttributes\n */\nexport interface InvoiceDetailAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDetailAttributes\n     */\n    index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDetailAttributes\n     */\n    invoiceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceDetailAttributes\n     */\n    note: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDetailAttributes\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceDetailAttributes\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDetailAttributes\n     */\n    unitPrice?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDetailAttributes\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceDetailAttributes\n     */\n    remarks: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceDetailAttributes\n     */\n    person?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDetailAttributes\n     */\n    orderDetailId?: number;\n}\n/**\n * \n * @export\n * @interface InvoiceDocumentAttributes\n */\nexport interface InvoiceDocumentAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceDocumentAttributes\n     */\n    invoiceId: number;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof InvoiceDocumentAttributes\n     */\n    documents: Array<number>;\n}\n/**\n * \n * @export\n * @interface InvoiceUpdateAttributes\n */\nexport interface InvoiceUpdateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateAttributes\n     */\n    invoiceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateAttributes\n     */\n    invoiceDate?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateAttributes\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateAttributes\n     */\n    paymentDate?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {Array<InvoiceUpdateDetailAttributes>}\n     * @memberof InvoiceUpdateAttributes\n     */\n    details?: Array<InvoiceUpdateDetailAttributes>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof InvoiceUpdateAttributes\n     */\n    deleteDetails?: Array<number>;\n}\n/**\n * \n * @export\n * @interface InvoiceUpdateDetailAttributes\n */\nexport interface InvoiceUpdateDetailAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    invoiceDetailId: number;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    note: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    unitPrice?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    remarks: string;\n    /**\n     * \n     * @type {string}\n     * @memberof InvoiceUpdateDetailAttributes\n     */\n    person?: string;\n}\n/**\n * \n * @export\n * @interface ModelError\n */\nexport interface ModelError {\n    /**\n     * \n     * @type {string}\n     * @memberof ModelError\n     */\n    code: string;\n}\n/**\n * \n * @export\n * @interface OrderCreateAttributes\n */\nexport interface OrderCreateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof OrderCreateAttributes\n     */\n    orderCode: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderCreateAttributes\n     */\n    estimateId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderCreateAttributes\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderCreateAttributes\n     */\n    orderDate?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderCreateAttributes\n     */\n    orderNumber?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderCreateAttributes\n     */\n    orderName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderCreateAttributes\n     */\n    description?: string;\n    /**\n     * \n     * @type {Array<OrderDetailAttributes>}\n     * @memberof OrderCreateAttributes\n     */\n    details?: Array<OrderDetailAttributes>;\n}\n/**\n * \n * @export\n * @interface OrderDetailAttributes\n */\nexport interface OrderDetailAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof OrderDetailAttributes\n     */\n    index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderDetailAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderDetailAttributes\n     */\n    note: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderDetailAttributes\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderDetailAttributes\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderDetailAttributes\n     */\n    unitPrice?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderDetailAttributes\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderDetailAttributes\n     */\n    remarks: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderDetailAttributes\n     */\n    person?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderDetailAttributes\n     */\n    invoiceFlag: boolean;\n}\n/**\n * \n * @export\n * @interface OrderDocumentAttributes\n */\nexport interface OrderDocumentAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof OrderDocumentAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof OrderDocumentAttributes\n     */\n    documents: Array<number>;\n}\n/**\n * \n * @export\n * @interface OrderManagementListAttributes\n */\nexport interface OrderManagementListAttributes {\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderManagementListAttributes\n     */\n    estimateFlg?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderManagementListAttributes\n     */\n    expandEstimate?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderManagementListAttributes\n     */\n    orderFlg?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderManagementListAttributes\n     */\n    invoiceFlg?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderManagementListAttributes\n     */\n    expandInvoice?: boolean;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderManagementListAttributes\n     */\n    subExpandInvoice?: boolean;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    serviceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    serviceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    serviceName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    projectCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    clientCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    serviceStartDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    serviceEndDate: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    estimateId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    estimateCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    estimateDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    estimateStatus: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    estimateTotalPrice: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    orderCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    orderDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    orderStatus: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    orderTotalPrice: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    invoiceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    invoiceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    invoiceDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderManagementListAttributes\n     */\n    invoiceStatus: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderManagementListAttributes\n     */\n    invoiceTotalPrice: number;\n    /**\n     * \n     * @type {Array<OrderManagementListAttributes>}\n     * @memberof OrderManagementListAttributes\n     */\n    children?: Array<OrderManagementListAttributes>;\n    /**\n     * \n     * @type {Array<OrderManagementListAttributes>}\n     * @memberof OrderManagementListAttributes\n     */\n    subChildren?: Array<OrderManagementListAttributes>;\n}\n/**\n * \n * @export\n * @interface OrderUpdateAttributes\n */\nexport interface OrderUpdateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateAttributes\n     */\n    orderCode: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateAttributes\n     */\n    estimateId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateAttributes\n     */\n    status?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateAttributes\n     */\n    orderDate?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateAttributes\n     */\n    orderNumber?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateAttributes\n     */\n    orderName?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateAttributes\n     */\n    description?: string;\n    /**\n     * \n     * @type {Array<OrderUpdateDetailAttributes>}\n     * @memberof OrderUpdateAttributes\n     */\n    details?: Array<OrderUpdateDetailAttributes>;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof OrderUpdateAttributes\n     */\n    deleteDetails?: Array<number>;\n}\n/**\n * \n * @export\n * @interface OrderUpdateDetailAttributes\n */\nexport interface OrderUpdateDetailAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    orderDetailId: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    index: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    orderId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    note: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    quantity?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    unit?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    unitPrice?: number;\n    /**\n     * \n     * @type {number}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    price?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    remarks: string;\n    /**\n     * \n     * @type {string}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    person?: string;\n    /**\n     * \n     * @type {boolean}\n     * @memberof OrderUpdateDetailAttributes\n     */\n    invoiceFlag?: boolean;\n}\n/**\n * \n * @export\n * @interface ProjectAttributes\n */\nexport interface ProjectAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof ProjectAttributes\n     */\n    projectCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ProjectAttributes\n     */\n    projectName: string;\n}\n/**\n * \n * @export\n * @interface ProjectServiceAttributes\n */\nexport interface ProjectServiceAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof ProjectServiceAttributes\n     */\n    projectCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ProjectServiceAttributes\n     */\n    projectName: string;\n    /**\n     * \n     * @type {Array<ServiceInfoAttributes>}\n     * @memberof ProjectServiceAttributes\n     */\n    Services: Array<ServiceInfoAttributes>;\n}\n/**\n * \n * @export\n * @interface RoleAttributes\n */\nexport interface RoleAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof RoleAttributes\n     */\n    roleId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof RoleAttributes\n     */\n    roleName: string;\n}\n/**\n * \n * @export\n * @interface ServiceAttributes\n */\nexport interface ServiceAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    serviceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    serviceName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    projectCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    serviceStartDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    serviceEndDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    clientCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    employeeCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    clientEmployeeCode?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceAttributes\n     */\n    description?: string;\n}\n/**\n * \n * @export\n * @interface ServiceDocumentAttributes\n */\nexport interface ServiceDocumentAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceDocumentAttributes\n     */\n    serviceId: number;\n    /**\n     * \n     * @type {Array<number>}\n     * @memberof ServiceDocumentAttributes\n     */\n    documents: Array<number>;\n}\n/**\n * \n * @export\n * @interface ServiceFindAttributes\n */\nexport interface ServiceFindAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceFindAttributes\n     */\n    serviceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    serviceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    serviceName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    projectCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    projectName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    serviceStartDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    serviceEndDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    clientCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    clientName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    employeeCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    clientEmployeeCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    clientEmployeeName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    departmentName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    phoneNumber: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceFindAttributes\n     */\n    email: string;\n}\n/**\n * \n * @export\n * @interface ServiceInfoAttributes\n */\nexport interface ServiceInfoAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof ServiceInfoAttributes\n     */\n    serviceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceInfoAttributes\n     */\n    serviceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceInfoAttributes\n     */\n    serviceName: string;\n}\n/**\n * \n * @export\n * @interface ServiceUpdateAttributes\n */\nexport interface ServiceUpdateAttributes {\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    serviceCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    serviceName: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    projectCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    serviceStartDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    serviceEndDate: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    clientCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    employeeCode: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    clientEmployeeCode?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof ServiceUpdateAttributes\n     */\n    description?: string;\n}\n/**\n * \n * @export\n * @interface WorkReportCreateAttributes\n */\nexport interface WorkReportCreateAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof WorkReportCreateAttributes\n     */\n    workReportId: number;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkReportCreateAttributes\n     */\n    invoiceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReportCreateAttributes\n     */\n    title?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkReportCreateAttributes\n     */\n    workingTime: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReportCreateAttributes\n     */\n    workInfo?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReportCreateAttributes\n     */\n    relatedDocument?: string;\n}\n/**\n * \n * @export\n * @interface WorkReportUpdateAttributes\n */\nexport interface WorkReportUpdateAttributes {\n    /**\n     * \n     * @type {number}\n     * @memberof WorkReportUpdateAttributes\n     */\n    workReportId: number;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkReportUpdateAttributes\n     */\n    invoiceId: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReportUpdateAttributes\n     */\n    title?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof WorkReportUpdateAttributes\n     */\n    workingTime: number;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReportUpdateAttributes\n     */\n    workInfo?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof WorkReportUpdateAttributes\n     */\n    relatedDocument?: string;\n}\n\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexport const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [clientCode] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clientEmployeeGetByClientCode: async (clientCode?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/clientEmployee/getByClientCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (clientCode !== undefined) {\n                localVarQueryParameter['clientCode'] = clientCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clientGetAll: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/client`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {ClientAttributes} client the new client\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clientPost: async (client: ClientAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'client' is not null or undefined\n            if (client === null || client === undefined) {\n                throw new RequiredError('client','Required parameter client was null or undefined when calling clientPost.');\n            }\n            const localVarPath = `/client`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof client !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(client !== undefined ? client : {})\n                : (client || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {ClientEmployeeAttributes} clientEmployee the new clientEmployee\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createClientEmployee: async (clientEmployee: ClientEmployeeAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'clientEmployee' is not null or undefined\n            if (clientEmployee === null || clientEmployee === undefined) {\n                throw new RequiredError('clientEmployee','Required parameter clientEmployee was null or undefined when calling createClientEmployee.');\n            }\n            const localVarPath = `/clientEmployee/create`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof clientEmployee !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(clientEmployee !== undefined ? clientEmployee : {})\n                : (clientEmployee || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {EmployeeAttributes} employee the new employee\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmployee: async (employee: EmployeeAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'employee' is not null or undefined\n            if (employee === null || employee === undefined) {\n                throw new RequiredError('employee','Required parameter employee was null or undefined when calling createEmployee.');\n            }\n            const localVarPath = `/employee/create`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof employee !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(employee !== undefined ? employee : {})\n                : (employee || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {EstimateDocumentAttributes} estimateDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEstimateDocument: async (estimateDocument: EstimateDocumentAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'estimateDocument' is not null or undefined\n            if (estimateDocument === null || estimateDocument === undefined) {\n                throw new RequiredError('estimateDocument','Required parameter estimateDocument was null or undefined when calling createEstimateDocument.');\n            }\n            const localVarPath = `/estimateDocument`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof estimateDocument !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(estimateDocument !== undefined ? estimateDocument : {})\n                : (estimateDocument || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {InvoiceDocumentAttributes} invoiceDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createInvoiceDocument: async (invoiceDocument: InvoiceDocumentAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'invoiceDocument' is not null or undefined\n            if (invoiceDocument === null || invoiceDocument === undefined) {\n                throw new RequiredError('invoiceDocument','Required parameter invoiceDocument was null or undefined when calling createInvoiceDocument.');\n            }\n            const localVarPath = `/invoiceDocument`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof invoiceDocument !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(invoiceDocument !== undefined ? invoiceDocument : {})\n                : (invoiceDocument || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {OrderDocumentAttributes} orderDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderDocument: async (orderDocument: OrderDocumentAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'orderDocument' is not null or undefined\n            if (orderDocument === null || orderDocument === undefined) {\n                throw new RequiredError('orderDocument','Required parameter orderDocument was null or undefined when calling createOrderDocument.');\n            }\n            const localVarPath = `/orderDocument`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof orderDocument !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(orderDocument !== undefined ? orderDocument : {})\n                : (orderDocument || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {ServiceDocumentAttributes} serviceDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServiceDocument: async (serviceDocument: ServiceDocumentAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'serviceDocument' is not null or undefined\n            if (serviceDocument === null || serviceDocument === undefined) {\n                throw new RequiredError('serviceDocument','Required parameter serviceDocument was null or undefined when calling createServiceDocument.');\n            }\n            const localVarPath = `/serviceDocument`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof serviceDocument !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(serviceDocument !== undefined ? serviceDocument : {})\n                : (serviceDocument || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteEstimate: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteEstimate.');\n            }\n            const localVarPath = `/estimate/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {number} estimateId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteEstimateDocument: async (id: number, estimateId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteEstimateDocument.');\n            }\n            // verify required parameter 'estimateId' is not null or undefined\n            if (estimateId === null || estimateId === undefined) {\n                throw new RequiredError('estimateId','Required parameter estimateId was null or undefined when calling deleteEstimateDocument.');\n            }\n            const localVarPath = `/estimateDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (estimateId !== undefined) {\n                localVarQueryParameter['estimateId'] = estimateId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteFile.');\n            }\n            const localVarPath = `/upload/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteInvoice: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteInvoice.');\n            }\n            const localVarPath = `/invoice/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteInvoiceDocument: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteInvoiceDocument.');\n            }\n            const localVarPath = `/invoiceDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOrder: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteOrder.');\n            }\n            const localVarPath = `/order/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOrderDocument: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteOrderDocument.');\n            }\n            const localVarPath = `/orderDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteService: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteService.');\n            }\n            const localVarPath = `/service/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteServiceDocument: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteServiceDocument.');\n            }\n            const localVarPath = `/serviceDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling downloadFile.');\n            }\n            const localVarPath = `/upload/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        employeeGetAll: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/employee/getAll`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        employeeGetSales: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/employee/getSales`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} estimateCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        estimateCheckCode: async (estimateCode: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'estimateCode' is not null or undefined\n            if (estimateCode === null || estimateCode === undefined) {\n                throw new RequiredError('estimateCode','Required parameter estimateCode was null or undefined when calling estimateCheckCode.');\n            }\n            const localVarPath = `/estimate/estimateCheckCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (estimateCode !== undefined) {\n                localVarQueryParameter['estimateCode'] = estimateCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {EstimateCreateAttributes} estimate the new header estimate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        estimatePost: async (estimate: EstimateCreateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'estimate' is not null or undefined\n            if (estimate === null || estimate === undefined) {\n                throw new RequiredError('estimate','Required parameter estimate was null or undefined when calling estimatePost.');\n            }\n            const localVarPath = `/estimate`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof estimate !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(estimate !== undefined ? estimate : {})\n                : (estimate || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {EstimateUpdateAttributes} estimate the new estimate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        estimateUpdate: async (id: number, estimate: EstimateUpdateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling estimateUpdate.');\n            }\n            // verify required parameter 'estimate' is not null or undefined\n            if (estimate === null || estimate === undefined) {\n                throw new RequiredError('estimate','Required parameter estimate was null or undefined when calling estimateUpdate.');\n            }\n            const localVarPath = `/estimate/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof estimate !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(estimate !== undefined ? estimate : {})\n                : (estimate || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} clientCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getClientByCode: async (clientCode: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'clientCode' is not null or undefined\n            if (clientCode === null || clientCode === undefined) {\n                throw new RequiredError('clientCode','Required parameter clientCode was null or undefined when calling getClientByCode.');\n            }\n            const localVarPath = `/client/getClientByCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (clientCode !== undefined) {\n                localVarQueryParameter['clientCode'] = clientCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} estimateId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getEstimateById: async (estimateId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'estimateId' is not null or undefined\n            if (estimateId === null || estimateId === undefined) {\n                throw new RequiredError('estimateId','Required parameter estimateId was null or undefined when calling getEstimateById.');\n            }\n            const localVarPath = `/estimate/getEstimateById`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (estimateId !== undefined) {\n                localVarQueryParameter['estimateId'] = estimateId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getEstimateDocuments: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getEstimateDocuments.');\n            }\n            const localVarPath = `/estimateDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} invoiceId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInvoiceById: async (invoiceId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'invoiceId' is not null or undefined\n            if (invoiceId === null || invoiceId === undefined) {\n                throw new RequiredError('invoiceId','Required parameter invoiceId was null or undefined when calling getInvoiceById.');\n            }\n            const localVarPath = `/invoice/getInvoiceById`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (invoiceId !== undefined) {\n                localVarQueryParameter['invoiceId'] = invoiceId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInvoiceDocuments: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getInvoiceDocuments.');\n            }\n            const localVarPath = `/invoiceDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} orderId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderById: async (orderId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'orderId' is not null or undefined\n            if (orderId === null || orderId === undefined) {\n                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling getOrderById.');\n            }\n            const localVarPath = `/order/getOrderById`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (orderId !== undefined) {\n                localVarQueryParameter['orderId'] = orderId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} orderId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderDetailByOrderId: async (orderId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'orderId' is not null or undefined\n            if (orderId === null || orderId === undefined) {\n                throw new RequiredError('orderId','Required parameter orderId was null or undefined when calling getOrderDetailByOrderId.');\n            }\n            const localVarPath = `/orderDetail/getByOrderId`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (orderId !== undefined) {\n                localVarQueryParameter['orderId'] = orderId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderDocuments: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getOrderDocuments.');\n            }\n            const localVarPath = `/orderDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getProjectAndService: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/project/getProjectAndService`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} projectCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getProjectByCode: async (projectCode: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'projectCode' is not null or undefined\n            if (projectCode === null || projectCode === undefined) {\n                throw new RequiredError('projectCode','Required parameter projectCode was null or undefined when calling getProjectByCode.');\n            }\n            const localVarPath = `/project/getProjectByCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (projectCode !== undefined) {\n                localVarQueryParameter['projectCode'] = projectCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} serviceId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getServiceById: async (serviceId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'serviceId' is not null or undefined\n            if (serviceId === null || serviceId === undefined) {\n                throw new RequiredError('serviceId','Required parameter serviceId was null or undefined when calling getServiceById.');\n            }\n            const localVarPath = `/service/getServiceById`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (serviceId !== undefined) {\n                localVarQueryParameter['serviceId'] = serviceId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} [serviceCode] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getServiceCode: async (serviceCode?: string, options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/service/getServiceCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (serviceCode !== undefined) {\n                localVarQueryParameter['serviceCode'] = serviceCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getServiceDocuments: async (id: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling getServiceDocuments.');\n            }\n            const localVarPath = `/serviceDocument/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} workReportId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorkReportById: async (workReportId: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'workReportId' is not null or undefined\n            if (workReportId === null || workReportId === undefined) {\n                throw new RequiredError('workReportId','Required parameter workReportId was null or undefined when calling getWorkReportById.');\n            }\n            const localVarPath = `/workReport/getWorkReportById`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (workReportId !== undefined) {\n                localVarQueryParameter['workReportId'] = workReportId;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} invoiceCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        invoiceCheckCode: async (invoiceCode: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'invoiceCode' is not null or undefined\n            if (invoiceCode === null || invoiceCode === undefined) {\n                throw new RequiredError('invoiceCode','Required parameter invoiceCode was null or undefined when calling invoiceCheckCode.');\n            }\n            const localVarPath = `/invoice/invoiceCheckCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (invoiceCode !== undefined) {\n                localVarQueryParameter['invoiceCode'] = invoiceCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {InvoiceCreateAttributes} invoice the new header invoice\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        invoicePost: async (invoice: InvoiceCreateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'invoice' is not null or undefined\n            if (invoice === null || invoice === undefined) {\n                throw new RequiredError('invoice','Required parameter invoice was null or undefined when calling invoicePost.');\n            }\n            const localVarPath = `/invoice`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof invoice !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(invoice !== undefined ? invoice : {})\n                : (invoice || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {InvoiceUpdateAttributes} invoice the new invoice\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        invoiceUpdate: async (id: number, invoice: InvoiceUpdateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling invoiceUpdate.');\n            }\n            // verify required parameter 'invoice' is not null or undefined\n            if (invoice === null || invoice === undefined) {\n                throw new RequiredError('invoice','Required parameter invoice was null or undefined when calling invoiceUpdate.');\n            }\n            const localVarPath = `/invoice/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof invoice !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(invoice !== undefined ? invoice : {})\n                : (invoice || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} orderCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderCheckCode: async (orderCode: string, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'orderCode' is not null or undefined\n            if (orderCode === null || orderCode === undefined) {\n                throw new RequiredError('orderCode','Required parameter orderCode was null or undefined when calling orderCheckCode.');\n            }\n            const localVarPath = `/order/orderCheckCode`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (orderCode !== undefined) {\n                localVarQueryParameter['orderCode'] = orderCode;\n            }\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderManagementListGet: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/orderManagementList`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {OrderCreateAttributes} order the new header order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderPost: async (order: OrderCreateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'order' is not null or undefined\n            if (order === null || order === undefined) {\n                throw new RequiredError('order','Required parameter order was null or undefined when calling orderPost.');\n            }\n            const localVarPath = `/order`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof order !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(order !== undefined ? order : {})\n                : (order || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {OrderUpdateAttributes} order the new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderUpdate: async (id: number, order: OrderUpdateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling orderUpdate.');\n            }\n            // verify required parameter 'order' is not null or undefined\n            if (order === null || order === undefined) {\n                throw new RequiredError('order','Required parameter order was null or undefined when calling orderUpdate.');\n            }\n            const localVarPath = `/order/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof order !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(order !== undefined ? order : {})\n                : (order || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        projectGetAll: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/project`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {ProjectAttributes} project the new project\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        projectPost: async (project: ProjectAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'project' is not null or undefined\n            if (project === null || project === undefined) {\n                throw new RequiredError('project','Required parameter project was null or undefined when calling projectPost.');\n            }\n            const localVarPath = `/project`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof project !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(project !== undefined ? project : {})\n                : (project || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        roleGetAll: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/role`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {RoleAttributes} role the new role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        rolePost: async (role: RoleAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'role' is not null or undefined\n            if (role === null || role === undefined) {\n                throw new RequiredError('role','Required parameter role was null or undefined when calling rolePost.');\n            }\n            const localVarPath = `/role`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof role !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(role !== undefined ? role : {})\n                : (role || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {ServiceAttributes} service the new service\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        serviceCreate: async (service: ServiceAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'service' is not null or undefined\n            if (service === null || service === undefined) {\n                throw new RequiredError('service','Required parameter service was null or undefined when calling serviceCreate.');\n            }\n            const localVarPath = `/service`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof service !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(service !== undefined ? service : {})\n                : (service || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        serviceGetAll: async (options: any = {}): Promise<RequestArgs> => {\n            const localVarPath = `/service`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {ServiceUpdateAttributes} service the new service\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        serviceUpdate: async (id: number, service: ServiceUpdateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling serviceUpdate.');\n            }\n            // verify required parameter 'service' is not null or undefined\n            if (service === null || service === undefined) {\n                throw new RequiredError('service','Required parameter service was null or undefined when calling serviceUpdate.');\n            }\n            const localVarPath = `/service/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof service !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(service !== undefined ? service : {})\n                : (service || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInvDetailDelFlg: async (id: number, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling updateInvDetailDelFlg.');\n            }\n            const localVarPath = `/invoiceDetail/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {boolean} flag null\n         * @param {Array<number>} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInvoiceFlag: async (flag: boolean, id: Array<number>, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'flag' is not null or undefined\n            if (flag === null || flag === undefined) {\n                throw new RequiredError('flag','Required parameter flag was null or undefined when calling updateInvoiceFlag.');\n            }\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling updateInvoiceFlag.');\n            }\n            const localVarPath = `/orderDetail/updateInvoiceFlag`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (flag !== undefined) {\n                localVarQueryParameter['flag'] = flag;\n            }\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof id !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(id !== undefined ? id : {})\n                : (id || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {string} note null\n         * @param {any} [file] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        uploadFile: async (note: string, file?: any, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'note' is not null or undefined\n            if (note === null || note === undefined) {\n                throw new RequiredError('note','Required parameter note was null or undefined when calling uploadFile.');\n            }\n            const localVarPath = `/upload`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n\n\n            if (file !== undefined) { \n                localVarFormParams.append('file', file as any);\n            }\n    \n            if (note !== undefined) { \n                localVarFormParams.append('note', note as any);\n            }\n    \n    \n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n    \n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            localVarRequestOptions.data = localVarFormParams;\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {WorkReportCreateAttributes} workReport the new header workReport\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        workReportPost: async (workReport: WorkReportCreateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'workReport' is not null or undefined\n            if (workReport === null || workReport === undefined) {\n                throw new RequiredError('workReport','Required parameter workReport was null or undefined when calling workReportPost.');\n            }\n            const localVarPath = `/workReport`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof workReport !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(workReport !== undefined ? workReport : {})\n                : (workReport || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {WorkReportUpdateAttributes} workReport the new workReport\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        workReportUpdate: async (id: number, workReport: WorkReportUpdateAttributes, options: any = {}): Promise<RequestArgs> => {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id','Required parameter id was null or undefined when calling workReportUpdate.');\n            }\n            // verify required parameter 'workReport' is not null or undefined\n            if (workReport === null || workReport === undefined) {\n                throw new RequiredError('workReport','Required parameter workReport was null or undefined when calling workReportUpdate.');\n            }\n            const localVarPath = `/workReport/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, 'https://example.com');\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n\n            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};\n            const localVarHeaderParameter = {} as any;\n            const localVarQueryParameter = {} as any;\n\n\n    \n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            const queryParameters = new URLSearchParams(localVarUrlObj.search);\n            for (const key in localVarQueryParameter) {\n                queryParameters.set(key, localVarQueryParameter[key]);\n            }\n            for (const key in options.query) {\n                queryParameters.set(key, options.query[key]);\n            }\n            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};\n            const nonString = typeof workReport !== 'string';\n            const needsSerialization = nonString && configuration && configuration.isJsonMime\n                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])\n                : nonString;\n            localVarRequestOptions.data =  needsSerialization\n                ? JSON.stringify(workReport !== undefined ? workReport : {})\n                : (workReport || \"\");\n\n            return {\n                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexport const DefaultApiFp = function(configuration?: Configuration) {\n    return {\n        /**\n         * \n         * @param {string} [clientCode] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async clientEmployeeGetByClientCode(clientCode?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ClientEmployeeAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).clientEmployeeGetByClientCode(clientCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async clientGetAll(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ClientAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).clientGetAll(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {ClientAttributes} client the new client\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async clientPost(client: ClientAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).clientPost(client, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {ClientEmployeeAttributes} clientEmployee the new clientEmployee\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createClientEmployee(clientEmployee: ClientEmployeeAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).createClientEmployee(clientEmployee, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {EmployeeAttributes} employee the new employee\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createEmployee(employee: EmployeeAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).createEmployee(employee, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {EstimateDocumentAttributes} estimateDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createEstimateDocument(estimateDocument: EstimateDocumentAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).createEstimateDocument(estimateDocument, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {InvoiceDocumentAttributes} invoiceDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createInvoiceDocument(invoiceDocument: InvoiceDocumentAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).createInvoiceDocument(invoiceDocument, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {OrderDocumentAttributes} orderDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createOrderDocument(orderDocument: OrderDocumentAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).createOrderDocument(orderDocument, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {ServiceDocumentAttributes} serviceDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async createServiceDocument(serviceDocument: ServiceDocumentAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).createServiceDocument(serviceDocument, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteEstimate(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteEstimate(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {number} estimateId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteEstimateDocument(id: number, estimateId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteEstimateDocument(id, estimateId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteFile(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteFile(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteInvoice(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteInvoice(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteInvoiceDocument(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteInvoiceDocument(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteOrder(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteOrder(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteOrderDocument(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteOrderDocument(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteService(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteService(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async deleteServiceDocument(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).deleteServiceDocument(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async downloadFile(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).downloadFile(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async employeeGetAll(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EmployeeAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).employeeGetAll(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async employeeGetSales(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<EmployeeAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).employeeGetSales(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} estimateCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async estimateCheckCode(estimateCode: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).estimateCheckCode(estimateCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {EstimateCreateAttributes} estimate the new header estimate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async estimatePost(estimate: EstimateCreateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).estimatePost(estimate, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {EstimateUpdateAttributes} estimate the new estimate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async estimateUpdate(id: number, estimate: EstimateUpdateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).estimateUpdate(id, estimate, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} clientCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getClientByCode(clientCode: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ClientAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getClientByCode(clientCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} estimateId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getEstimateById(estimateId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getEstimateById(estimateId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getEstimateDocuments(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DocumentAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getEstimateDocuments(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} invoiceId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getInvoiceById(invoiceId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getInvoiceById(invoiceId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getInvoiceDocuments(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DocumentAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getInvoiceDocuments(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} orderId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getOrderById(orderId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getOrderById(orderId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} orderId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getOrderDetailByOrderId(orderId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<OrderDetailAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getOrderDetailByOrderId(orderId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getOrderDocuments(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DocumentAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getOrderDocuments(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getProjectAndService(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ProjectServiceAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getProjectAndService(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} projectCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getProjectByCode(projectCode: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ProjectAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getProjectByCode(projectCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} serviceId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getServiceById(serviceId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ServiceFindAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getServiceById(serviceId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} [serviceCode] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getServiceCode(serviceCode?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ServiceAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getServiceCode(serviceCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getServiceDocuments(id: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DocumentAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getServiceDocuments(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} workReportId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async getWorkReportById(workReportId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).getWorkReportById(workReportId, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} invoiceCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async invoiceCheckCode(invoiceCode: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).invoiceCheckCode(invoiceCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {InvoiceCreateAttributes} invoice the new header invoice\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async invoicePost(invoice: InvoiceCreateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).invoicePost(invoice, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {InvoiceUpdateAttributes} invoice the new invoice\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async invoiceUpdate(id: number, invoice: InvoiceUpdateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).invoiceUpdate(id, invoice, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} orderCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async orderCheckCode(orderCode: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).orderCheckCode(orderCode, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async orderManagementListGet(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<OrderManagementListAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).orderManagementListGet(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {OrderCreateAttributes} order the new header order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async orderPost(order: OrderCreateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).orderPost(order, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {OrderUpdateAttributes} order the new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async orderUpdate(id: number, order: OrderUpdateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).orderUpdate(id, order, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async projectGetAll(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ProjectAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).projectGetAll(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {ProjectAttributes} project the new project\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async projectPost(project: ProjectAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).projectPost(project, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async roleGetAll(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RoleAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).roleGetAll(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {RoleAttributes} role the new role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async rolePost(role: RoleAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).rolePost(role, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {ServiceAttributes} service the new service\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async serviceCreate(service: ServiceAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).serviceCreate(service, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async serviceGetAll(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ServiceAttributes>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).serviceGetAll(options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {ServiceUpdateAttributes} service the new service\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async serviceUpdate(id: number, service: ServiceUpdateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).serviceUpdate(id, service, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateInvDetailDelFlg(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).updateInvDetailDelFlg(id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {boolean} flag null\n         * @param {Array<number>} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async updateInvoiceFlag(flag: boolean, id: Array<number>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).updateInvoiceFlag(flag, id, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {string} note null\n         * @param {any} [file] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async uploadFile(note: string, file?: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).uploadFile(note, file, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {WorkReportCreateAttributes} workReport the new header workReport\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async workReportPost(workReport: WorkReportCreateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).workReportPost(workReport, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {WorkReportUpdateAttributes} workReport the new workReport\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        async workReportUpdate(id: number, workReport: WorkReportUpdateAttributes, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>> {\n            const localVarAxiosArgs = await DefaultApiAxiosParamCreator(configuration).workReportUpdate(id, workReport, options);\n            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};\n                return axios.request(axiosRequestArgs);\n            };\n        },\n    }\n};\n\n/**\n * DefaultApi - factory interface\n * @export\n */\nexport const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {\n    return {\n        /**\n         * \n         * @param {string} [clientCode] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clientEmployeeGetByClientCode(clientCode?: string, options?: any): AxiosPromise<Array<ClientEmployeeAttributes>> {\n            return DefaultApiFp(configuration).clientEmployeeGetByClientCode(clientCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clientGetAll(options?: any): AxiosPromise<Array<ClientAttributes>> {\n            return DefaultApiFp(configuration).clientGetAll(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {ClientAttributes} client the new client\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        clientPost(client: ClientAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).clientPost(client, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {ClientEmployeeAttributes} clientEmployee the new clientEmployee\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createClientEmployee(clientEmployee: ClientEmployeeAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).createClientEmployee(clientEmployee, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {EmployeeAttributes} employee the new employee\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmployee(employee: EmployeeAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).createEmployee(employee, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {EstimateDocumentAttributes} estimateDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEstimateDocument(estimateDocument: EstimateDocumentAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).createEstimateDocument(estimateDocument, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {InvoiceDocumentAttributes} invoiceDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createInvoiceDocument(invoiceDocument: InvoiceDocumentAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).createInvoiceDocument(invoiceDocument, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {OrderDocumentAttributes} orderDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createOrderDocument(orderDocument: OrderDocumentAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).createOrderDocument(orderDocument, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {ServiceDocumentAttributes} serviceDocument null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createServiceDocument(serviceDocument: ServiceDocumentAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).createServiceDocument(serviceDocument, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteEstimate(id: number, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).deleteEstimate(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {number} estimateId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteEstimateDocument(id: number, estimateId: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).deleteEstimateDocument(id, estimateId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile(id: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).deleteFile(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteInvoice(id: number, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).deleteInvoice(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteInvoiceDocument(id: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).deleteInvoiceDocument(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOrder(id: number, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).deleteOrder(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteOrderDocument(id: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).deleteOrderDocument(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteService(id: string, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).deleteService(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteServiceDocument(id: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).deleteServiceDocument(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile(id: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).downloadFile(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        employeeGetAll(options?: any): AxiosPromise<Array<EmployeeAttributes>> {\n            return DefaultApiFp(configuration).employeeGetAll(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        employeeGetSales(options?: any): AxiosPromise<Array<EmployeeAttributes>> {\n            return DefaultApiFp(configuration).employeeGetSales(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} estimateCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        estimateCheckCode(estimateCode: string, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).estimateCheckCode(estimateCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {EstimateCreateAttributes} estimate the new header estimate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        estimatePost(estimate: EstimateCreateAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).estimatePost(estimate, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {EstimateUpdateAttributes} estimate the new estimate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        estimateUpdate(id: number, estimate: EstimateUpdateAttributes, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).estimateUpdate(id, estimate, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} clientCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getClientByCode(clientCode: string, options?: any): AxiosPromise<Array<ClientAttributes>> {\n            return DefaultApiFp(configuration).getClientByCode(clientCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} estimateId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getEstimateById(estimateId: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).getEstimateById(estimateId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getEstimateDocuments(id: number, options?: any): AxiosPromise<Array<DocumentAttributes>> {\n            return DefaultApiFp(configuration).getEstimateDocuments(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} invoiceId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInvoiceById(invoiceId: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).getInvoiceById(invoiceId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getInvoiceDocuments(id: number, options?: any): AxiosPromise<Array<DocumentAttributes>> {\n            return DefaultApiFp(configuration).getInvoiceDocuments(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} orderId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderById(orderId: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).getOrderById(orderId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} orderId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderDetailByOrderId(orderId: number, options?: any): AxiosPromise<Array<OrderDetailAttributes>> {\n            return DefaultApiFp(configuration).getOrderDetailByOrderId(orderId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getOrderDocuments(id: number, options?: any): AxiosPromise<Array<DocumentAttributes>> {\n            return DefaultApiFp(configuration).getOrderDocuments(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getProjectAndService(options?: any): AxiosPromise<Array<ProjectServiceAttributes>> {\n            return DefaultApiFp(configuration).getProjectAndService(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} projectCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getProjectByCode(projectCode: string, options?: any): AxiosPromise<Array<ProjectAttributes>> {\n            return DefaultApiFp(configuration).getProjectByCode(projectCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} serviceId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getServiceById(serviceId: number, options?: any): AxiosPromise<Array<ServiceFindAttributes>> {\n            return DefaultApiFp(configuration).getServiceById(serviceId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} [serviceCode] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getServiceCode(serviceCode?: string, options?: any): AxiosPromise<Array<ServiceAttributes>> {\n            return DefaultApiFp(configuration).getServiceCode(serviceCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getServiceDocuments(id: string, options?: any): AxiosPromise<Array<DocumentAttributes>> {\n            return DefaultApiFp(configuration).getServiceDocuments(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} workReportId null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        getWorkReportById(workReportId: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).getWorkReportById(workReportId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} invoiceCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        invoiceCheckCode(invoiceCode: string, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).invoiceCheckCode(invoiceCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {InvoiceCreateAttributes} invoice the new header invoice\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        invoicePost(invoice: InvoiceCreateAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).invoicePost(invoice, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {InvoiceUpdateAttributes} invoice the new invoice\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        invoiceUpdate(id: number, invoice: InvoiceUpdateAttributes, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).invoiceUpdate(id, invoice, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} orderCode null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderCheckCode(orderCode: string, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).orderCheckCode(orderCode, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderManagementListGet(options?: any): AxiosPromise<Array<OrderManagementListAttributes>> {\n            return DefaultApiFp(configuration).orderManagementListGet(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {OrderCreateAttributes} order the new header order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderPost(order: OrderCreateAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).orderPost(order, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {OrderUpdateAttributes} order the new order\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        orderUpdate(id: number, order: OrderUpdateAttributes, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).orderUpdate(id, order, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        projectGetAll(options?: any): AxiosPromise<Array<ProjectAttributes>> {\n            return DefaultApiFp(configuration).projectGetAll(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {ProjectAttributes} project the new project\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        projectPost(project: ProjectAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).projectPost(project, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        roleGetAll(options?: any): AxiosPromise<Array<RoleAttributes>> {\n            return DefaultApiFp(configuration).roleGetAll(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {RoleAttributes} role the new role\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        rolePost(role: RoleAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).rolePost(role, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {ServiceAttributes} service the new service\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        serviceCreate(service: ServiceAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).serviceCreate(service, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        serviceGetAll(options?: any): AxiosPromise<Array<ServiceAttributes>> {\n            return DefaultApiFp(configuration).serviceGetAll(options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {ServiceUpdateAttributes} service the new service\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        serviceUpdate(id: number, service: ServiceUpdateAttributes, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).serviceUpdate(id, service, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInvDetailDelFlg(id: number, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).updateInvDetailDelFlg(id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {boolean} flag null\n         * @param {Array<number>} id null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        updateInvoiceFlag(flag: boolean, id: Array<number>, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).updateInvoiceFlag(flag, id, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {string} note null\n         * @param {any} [file] null\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        uploadFile(note: string, file?: any, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).uploadFile(note, file, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {WorkReportCreateAttributes} workReport the new header workReport\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        workReportPost(workReport: WorkReportCreateAttributes, options?: any): AxiosPromise<void> {\n            return DefaultApiFp(configuration).workReportPost(workReport, options).then((request) => request(axios, basePath));\n        },\n        /**\n         * \n         * @param {number} id null\n         * @param {WorkReportUpdateAttributes} workReport the new workReport\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        workReportUpdate(id: number, workReport: WorkReportUpdateAttributes, options?: any): AxiosPromise<Array<string>> {\n            return DefaultApiFp(configuration).workReportUpdate(id, workReport, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nexport class DefaultApi extends BaseAPI {\n    /**\n     * \n     * @param {string} [clientCode] null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public clientEmployeeGetByClientCode(clientCode?: string, options?: any) {\n        return DefaultApiFp(this.configuration).clientEmployeeGetByClientCode(clientCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public clientGetAll(options?: any) {\n        return DefaultApiFp(this.configuration).clientGetAll(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {ClientAttributes} client the new client\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public clientPost(client: ClientAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).clientPost(client, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {ClientEmployeeAttributes} clientEmployee the new clientEmployee\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public createClientEmployee(clientEmployee: ClientEmployeeAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).createClientEmployee(clientEmployee, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {EmployeeAttributes} employee the new employee\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public createEmployee(employee: EmployeeAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).createEmployee(employee, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {EstimateDocumentAttributes} estimateDocument null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public createEstimateDocument(estimateDocument: EstimateDocumentAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).createEstimateDocument(estimateDocument, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {InvoiceDocumentAttributes} invoiceDocument null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public createInvoiceDocument(invoiceDocument: InvoiceDocumentAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).createInvoiceDocument(invoiceDocument, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {OrderDocumentAttributes} orderDocument null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public createOrderDocument(orderDocument: OrderDocumentAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).createOrderDocument(orderDocument, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {ServiceDocumentAttributes} serviceDocument null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public createServiceDocument(serviceDocument: ServiceDocumentAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).createServiceDocument(serviceDocument, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteEstimate(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteEstimate(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {number} estimateId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteEstimateDocument(id: number, estimateId: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteEstimateDocument(id, estimateId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteFile(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteFile(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteInvoice(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteInvoice(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteInvoiceDocument(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteInvoiceDocument(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteOrder(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteOrder(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteOrderDocument(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteOrderDocument(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteService(id: string, options?: any) {\n        return DefaultApiFp(this.configuration).deleteService(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public deleteServiceDocument(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).deleteServiceDocument(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public downloadFile(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).downloadFile(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public employeeGetAll(options?: any) {\n        return DefaultApiFp(this.configuration).employeeGetAll(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public employeeGetSales(options?: any) {\n        return DefaultApiFp(this.configuration).employeeGetSales(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} estimateCode null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public estimateCheckCode(estimateCode: string, options?: any) {\n        return DefaultApiFp(this.configuration).estimateCheckCode(estimateCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {EstimateCreateAttributes} estimate the new header estimate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public estimatePost(estimate: EstimateCreateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).estimatePost(estimate, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {EstimateUpdateAttributes} estimate the new estimate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public estimateUpdate(id: number, estimate: EstimateUpdateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).estimateUpdate(id, estimate, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} clientCode null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getClientByCode(clientCode: string, options?: any) {\n        return DefaultApiFp(this.configuration).getClientByCode(clientCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} estimateId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getEstimateById(estimateId: number, options?: any) {\n        return DefaultApiFp(this.configuration).getEstimateById(estimateId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getEstimateDocuments(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).getEstimateDocuments(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} invoiceId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getInvoiceById(invoiceId: number, options?: any) {\n        return DefaultApiFp(this.configuration).getInvoiceById(invoiceId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getInvoiceDocuments(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).getInvoiceDocuments(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} orderId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getOrderById(orderId: number, options?: any) {\n        return DefaultApiFp(this.configuration).getOrderById(orderId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} orderId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getOrderDetailByOrderId(orderId: number, options?: any) {\n        return DefaultApiFp(this.configuration).getOrderDetailByOrderId(orderId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getOrderDocuments(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).getOrderDocuments(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getProjectAndService(options?: any) {\n        return DefaultApiFp(this.configuration).getProjectAndService(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} projectCode null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getProjectByCode(projectCode: string, options?: any) {\n        return DefaultApiFp(this.configuration).getProjectByCode(projectCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} serviceId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getServiceById(serviceId: number, options?: any) {\n        return DefaultApiFp(this.configuration).getServiceById(serviceId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} [serviceCode] null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getServiceCode(serviceCode?: string, options?: any) {\n        return DefaultApiFp(this.configuration).getServiceCode(serviceCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getServiceDocuments(id: string, options?: any) {\n        return DefaultApiFp(this.configuration).getServiceDocuments(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} workReportId null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public getWorkReportById(workReportId: number, options?: any) {\n        return DefaultApiFp(this.configuration).getWorkReportById(workReportId, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} invoiceCode null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public invoiceCheckCode(invoiceCode: string, options?: any) {\n        return DefaultApiFp(this.configuration).invoiceCheckCode(invoiceCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {InvoiceCreateAttributes} invoice the new header invoice\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public invoicePost(invoice: InvoiceCreateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).invoicePost(invoice, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {InvoiceUpdateAttributes} invoice the new invoice\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public invoiceUpdate(id: number, invoice: InvoiceUpdateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).invoiceUpdate(id, invoice, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} orderCode null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public orderCheckCode(orderCode: string, options?: any) {\n        return DefaultApiFp(this.configuration).orderCheckCode(orderCode, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public orderManagementListGet(options?: any) {\n        return DefaultApiFp(this.configuration).orderManagementListGet(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {OrderCreateAttributes} order the new header order\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public orderPost(order: OrderCreateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).orderPost(order, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {OrderUpdateAttributes} order the new order\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public orderUpdate(id: number, order: OrderUpdateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).orderUpdate(id, order, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public projectGetAll(options?: any) {\n        return DefaultApiFp(this.configuration).projectGetAll(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {ProjectAttributes} project the new project\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public projectPost(project: ProjectAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).projectPost(project, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public roleGetAll(options?: any) {\n        return DefaultApiFp(this.configuration).roleGetAll(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {RoleAttributes} role the new role\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public rolePost(role: RoleAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).rolePost(role, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {ServiceAttributes} service the new service\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public serviceCreate(service: ServiceAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).serviceCreate(service, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public serviceGetAll(options?: any) {\n        return DefaultApiFp(this.configuration).serviceGetAll(options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {ServiceUpdateAttributes} service the new service\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public serviceUpdate(id: number, service: ServiceUpdateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).serviceUpdate(id, service, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public updateInvDetailDelFlg(id: number, options?: any) {\n        return DefaultApiFp(this.configuration).updateInvDetailDelFlg(id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {boolean} flag null\n     * @param {Array<number>} id null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public updateInvoiceFlag(flag: boolean, id: Array<number>, options?: any) {\n        return DefaultApiFp(this.configuration).updateInvoiceFlag(flag, id, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {string} note null\n     * @param {any} [file] null\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public uploadFile(note: string, file?: any, options?: any) {\n        return DefaultApiFp(this.configuration).uploadFile(note, file, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {WorkReportCreateAttributes} workReport the new header workReport\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public workReportPost(workReport: WorkReportCreateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).workReportPost(workReport, options).then((request) => request(this.axios, this.basePath));\n    }\n\n    /**\n     * \n     * @param {number} id null\n     * @param {WorkReportUpdateAttributes} workReport the new workReport\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    public workReportUpdate(id: number, workReport: WorkReportUpdateAttributes, options?: any) {\n        return DefaultApiFp(this.configuration).workReportUpdate(id, workReport, options).then((request) => request(this.axios, this.basePath));\n    }\n}\n\n\n","import axios from 'axios';\n\n/**\n * axiosのインスタンスを取得するヘルパー\n * ここで共通設定を行うため、各コンポーネントは直接axiosをimportしないこと\n */\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.withCredentials = true;\n\n// ローカル環境では、リクエストをAPIサーバーに向ける\nif (process.env.NODE_ENV !== 'production') {\n  axios.defaults.baseURL = 'http://localhost:3000/api';\n}\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response) {\n      if (error.response.status === 401) {\n        // 認証エラーの場合はログイン画面へ遷移\n        const LOGIN_URL = process.env.NODE_ENV === 'production' ? '/login' : 'http://localhost:3000/login';\n        window.location.replace(LOGIN_URL);\n      } else if (error.response.status >= 500) {\n        if (process.env.NODE_ENV === 'production') {\n          localStorage.setItem('jhc.error', JSON.stringify(error.response.data));\n          window.location.href = '/ui/system_error';\n        } else {\n          // eslint-disable-next-line no-alert\n          window.alert(JSON.stringify(error.response.data, null, 2));\n        }\n      } else {\n        const title = `エラーコード: ${error.response.data.code}`;\n        window.alert(JSON.stringify(title, null, 2));\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n","import { Configuration, DefaultApiFactory } from '../api';\nimport axios from './axios_utils';\n\nconst basePath = process.env.NODE_ENV === 'production' ? '' : `http://localhost:3000/api`;\nconst api = DefaultApiFactory({} as Configuration, basePath, axios);\n\nexport default api;\n","import React, { FC } from 'react';\n\ninterface SpinnerProps {\n  loading: boolean;\n}\n\nconst Spinner: FC<SpinnerProps> = ({ loading, children }) => {\n  return loading ? (\n    <div className=\"w-100 text-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport default Spinner;\n","import React, { useMemo, useCallback, useEffect, useState } from 'react';\nimport Select, { OptionsType } from 'react-select';\nimport { defaultThemes } from 'react-data-table-component';\nimport { ButtonGroup, Button } from 'reactstrap';\n\ntype OptionType = {\n  label: string;\n  value: string | number;\n  isDisabled?: boolean;\n};\n\nexport interface CustomPaginationProps {\n  rowsPerPage: number;\n  rowCount: number;\n  paginationPerPage?: number;\n  onChangePage: (page: number, totalRows: number) => void;\n  onChangeRowsPerPage: (currentRowsPerPage: number, currentPage: number) => void;\n  currentPage: number;\n  textPaging?: (rowCount: number, currentRowRange: string) => React.ReactElement;\n  border?: boolean;\n}\n\nconst defaultRowPerPage = [10, 15, 20, 25, 30];\n\nconst getNumberOfPages = (rowCount: number, rowsPerPage: number) => Math.ceil(rowCount / rowsPerPage);\n\nconst getRangeRow = (rowCount: number, totalPage: number, currentPage: number, rowsPerPage: number) => {\n  const currentRow = rowsPerPage * currentPage - rowsPerPage;\n  return `${currentRow + 1}-${\n    currentPage < totalPage ? currentRow + rowsPerPage : currentRow + (rowCount - currentRow)\n  }`;\n};\n\nconst generateRowOptions = (options: number[]): OptionsType<{ value: number; label: number }> => {\n  return options.map((option) => ({ value: option, label: option }));\n};\n\nconst CustomPagination: React.FC<CustomPaginationProps> = ({\n  rowsPerPage,\n  rowCount,\n  onChangePage,\n  onChangeRowsPerPage,\n  currentPage,\n  paginationPerPage = defaultRowPerPage[0],\n  textPaging = (total: number, currentRowRange: string) => (\n    <>\n      {total}件中{currentRowRange}\n    </>\n  ),\n  border,\n}) => {\n  const [pageOptions, setPageOptions] = useState<OptionsType<{ value: number; label: number }>>([]);\n  const [defaultOptions] = useState<{ value: number; label: number }>({\n    value: paginationPerPage,\n    label: paginationPerPage,\n  });\n\n  useEffect(() => {\n    const pageSet = new Set(defaultRowPerPage);\n    pageSet.add(paginationPerPage);\n    const pages = Array.from(pageSet).sort((a, b) => {\n      return a - b;\n    });\n    setPageOptions(generateRowOptions(pages));\n    onChangeRowsPerPage(paginationPerPage, currentPage);\n  }, [paginationPerPage]);\n\n  const numberOfPage = useMemo(() => {\n    return getNumberOfPages(rowCount, rowsPerPage);\n  }, [rowCount, rowsPerPage]);\n\n  const currentRowRange = getRangeRow(rowCount, numberOfPage, currentPage, rowsPerPage);\n\n  const handleFirstPageButtonClick = useCallback(() => {\n    onChangePage(1, rowCount);\n  }, [onChangePage, rowCount]);\n\n  const handleBackButtonClick = useCallback(() => {\n    onChangePage(currentPage - 1, rowCount);\n  }, [onChangePage, currentPage, rowCount]);\n\n  const handleNextButtonClick = useCallback(() => {\n    onChangePage(currentPage + 1, rowCount);\n  }, [onChangePage, currentPage, rowCount]);\n\n  const handleLastPageButtonClick = useCallback(() => {\n    onChangePage(numberOfPage, rowCount);\n  }, [onChangePage, numberOfPage, rowCount]);\n\n  const Actions = (\n    <div style={{ lineHeight: '50px' }}>\n      <ButtonGroup>\n        <Button color=\"none\" style={{borderColor:\"hsl(0,0%,80%)\", color:\"black\"}} disabled={currentPage === 1} onClick={handleFirstPageButtonClick}>\n          <i className=\"fa fa-angle-double-left\"/>\n        </Button>\n        <Button color=\"none\" style={{borderColor:\"hsl(0,0%,80%)\", color:\"black\"}} disabled={currentPage === 1} onClick={handleBackButtonClick}>\n          <i className=\"fa fa-angle-left\"/>\n        </Button>\n        <Button color=\"none\" style={{borderColor:\"hsl(0,0%,80%)\", color:\"black\"}} disabled={currentPage === numberOfPage} onClick={handleNextButtonClick}>\n          <i className=\"fa fa-angle-right\"/>\n        </Button>\n        <Button color=\"none\" style={{borderColor:\"hsl(0,0%,80%)\", color:\"black\"}} disabled={currentPage === numberOfPage} onClick={handleLastPageButtonClick}>\n          <i className=\"fa fa-angle-double-right\"/>\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n\n  const borderStyle: React.CSSProperties = {\n    border: `1px solid ${defaultThemes.default.divider.default}`,\n  };\n\n  const selectStyles = {\n    container: (base: React.CSSProperties) => ({\n      ...base,\n      width: 80,\n    }),\n  };\n\n  const paginationWidth = (document.getElementById('datatable-pagination')?.offsetWidth || 536) + 14;\n\n  return (\n    <div\n      id=\"datatable-pagination\"\n      className=\"d-inline-flex pl-3 pr-3\"\n      style={{\n        height: 56,\n        position: 'sticky',\n        left: `calc(100% - ${paginationWidth}px)`,\n        ...(border ? borderStyle : {}),\n      }}\n    >\n      <div className=\"mr-5\" style={{ display: 'flex', alignItems: 'center' }}>\n        <span className=\"mr-2\">ページ当たりの件数</span>\n        <Select\n          options={pageOptions}\n          menuPosition=\"fixed\"\n          menuShouldBlockScroll\n          styles={selectStyles}\n          defaultValue={defaultOptions}\n          onChange={(value: unknown) => onChangeRowsPerPage(Number(((value as unknown) as OptionType)?.value), currentPage)}\n          isSearchable={false}\n        />\n      </div>\n      <div className=\"mr-5\" style={{ lineHeight: '56px' }}>\n        {textPaging(rowCount, currentRowRange)}\n      </div>\n      {Actions}\n    </div>\n  );\n};\n\nexport default CustomPagination;\n","import React, { useCallback } from 'react';\nimport ReactDataTable, { IDataTableProps, defaultThemes, IDataTableColumn } from 'react-data-table-component';\nimport Spinner from './spinner';\n\nimport CustomPagination, { CustomPaginationProps } from './custom-pagination';\n\nexport type DataTableColumn = IDataTableColumn;\n\nconst centerHeader = {\n  margin: '',\n  '> div': {\n    margin: '',\n  },\n};\n\nconst customStyles = {\n  header: {\n    style: {\n      minHeight: '56px',\n    },\n  },\n  headRow: {\n    style: {\n      borderTopStyle: 'solid',\n      borderTopWidth: '1px',\n      borderTopColor: defaultThemes.default.divider.default,\n    },\n  },\n  headCells: {\n    style: {\n      borderRightStyle: 'solid',\n      borderRightWidth: '1px',\n      borderRightColor: defaultThemes.default.divider.default,\n      ':first-child': {\n        borderLeftStyle: 'solid',\n        borderLeftWidth: '1px',\n        borderLeftColor: defaultThemes.default.divider.default,\n      },\n      ...centerHeader,\n    },\n  },\n  cells: {\n    style: {\n      borderRightStyle: 'solid',\n      borderRightWidth: '1px',\n      borderRightColor: defaultThemes.default.divider.default,\n      ':first-child': {\n        borderLeftStyle: 'solid',\n        borderLeftWidth: '1px',\n        borderLeftColor: defaultThemes.default.divider.default,\n      },\n    },\n  },\n};\n\ninterface DataTableProps extends IDataTableProps {\n  loading?: boolean;\n  border?: boolean;\n  textPaging?: (rowCount: number, currentRowRange: string) => React.ReactElement;\n}\n\nconst DataTable: React.FC<DataTableProps> = (props: DataTableProps) => {\n  const noRecordMessage = <h5>レコードが見つかりません。</h5>;\n\n  const {\n    striped = true,\n    pagination = true,\n    loading = true,\n    border = false,\n    className = 'dataTable',\n    noDataComponent = noRecordMessage,\n    paginationPerPage,\n    data,\n  } = props;\n\n  const textPaging = (rowCount: number, currentRowRange: string) => {\n    return (\n      <>\n        {rowCount}件中 {currentRowRange}件\n      </>\n    );\n  };\n\n  const clonePagination = useCallback(\n    (paginationProps: CustomPaginationProps) => {\n      const { currentPage, onChangePage, onChangeRowsPerPage, rowCount, rowsPerPage } = paginationProps;\n      return (\n        <CustomPagination\n          paginationPerPage={paginationPerPage}\n          currentPage={currentPage}\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n          rowCount={rowCount}\n          rowsPerPage={rowsPerPage}\n          textPaging={textPaging}\n          border={border}\n        />\n      );\n    },\n    [data]\n  );\n\n  return (\n    <Spinner loading={loading}>\n      <ReactDataTable\n        {...props} // eslint-disable-line react/jsx-props-no-spreading\n        striped={striped}\n        pagination={pagination}\n        className={className}\n        noDataComponent={noDataComponent}\n        paginationComponent={clonePagination}\n        customStyles={\n          border\n            ? customStyles\n            : {\n                headCells: {\n                  style: centerHeader,\n                },\n              }\n        }\n      />\n    </Spinner>\n  );\n};\n\nexport default DataTable;\n","import React from 'react';\nimport DataTable from '../common/datatable/data-table';\n\n// eslint-disable-next-line react/prop-types,@typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ data, columns, loading }) =>\n  data.children ? (\n    <DataTable\n      noHeader\n      responsive={false}\n      columns={columns}\n      data={data.children}\n      loading={loading}\n      pagination={false}\n      noTableHead\n    />\n  ) : null;\n","import React from 'react';\nimport DataTable from '../common/datatable/data-table';\nimport ExpandableComponents from './invoice-expand';\n\n// eslint-disable-next-line react/prop-types,@typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ data, columns, loading }) => (\n  <>\n    {data.subExpandInvoice && (\n      <DataTable\n        responsive={false}\n        noHeader\n        columns={columns}\n        data={data.subChildren}\n        loading={loading}\n        pagination={false}\n        noTableHead\n        expandableRows\n        expandableRowsHideExpander\n        expandableRowExpanded={(row) => row.subExpandInvoice}\n        expandableRowsComponent={<ExpandableComponents data={data.children} columns={columns} loading={loading} />}\n      />\n    )}\n    {data.children && (\n      <DataTable\n        responsive={false}\n        noHeader\n        columns={columns}\n        data={data.children}\n        loading={loading}\n        pagination={false}\n        noTableHead\n        expandableRows\n        expandableRowsHideExpander\n        expandableRowExpanded={(row) => row.expandInvoice}\n        expandableRowsComponent={<ExpandableComponents data={data.children} columns={columns} loading={loading} />}\n      />\n    )}\n  </>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport querystring from 'querystring';\nimport { Row, Col, Button, Card, CardBody, CardHeader, UncontrolledCollapse, Alert } from 'reactstrap';\nimport { Form, Formik, FormikProps } from 'formik';\nimport { useHistory, useLocation } from 'react-router';\nimport DatePicker from 'react-datepicker';\nimport { Link } from 'react-router-dom';\nimport { Folder, List } from 'react-feather';\nimport { Badge } from 'react-bootstrap';\nimport Breadcrumb from '../components/common/breadcrumb';\nimport AppLayout from '../components/common/layout';\nimport { formatDate, formatPrice, padId } from '../components/common/formatter/formatter';\nimport { CustomSelect, Input } from '../components/common/form-helper';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { ScreenUrl, Status, STATUS_MAP } from '../constant/commonConstant';\nimport api from '../utils/api_client';\nimport DataTable from '../components/common/datatable/data-table';\nimport ExpandableComponents from '../components/order-management/estimate-expand';\nimport { OrderManagementListAttributes, ProjectServiceAttributes } from '../api';\n\ninterface InitialValue {\n  projectCode: string;\n  serviceCode: string;\n  serviceName: string;\n  clientCode: string;\n  serviceStartDate: string;\n  serviceEndDate: string;\n  dataList: OrderManagementListAttributes[];\n  projectOpen?: any;\n  projectService: ProjectServiceAttributes[];\n}\n\nconst blankProjectService: ProjectServiceAttributes[] = [\n  {\n    projectCode: '',\n    projectName: '',\n    Services: [{ serviceId: 0, serviceCode: '', serviceName: '' }],\n  },\n];\n\nconst OrderManagement: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(null);\n  const [rangeDate, setRangeDate] = useState('');\n  const [projectMode, setProjectMode] = useState(false);\n\n  const [projectOptions, setProjectOptions] = useState<{ value: string; label: string }[]>([]);\n  const [clientOptions, setClientOptions] = useState<{ value: string; label: string }[]>([]);\n  const [serviceOptions, setServiceOptions] = useState<{ value: string; label: string }[]>([]);\n  const [savedAlert, setSavedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [projectService, setProjectService] = useState<ProjectServiceAttributes[]>(blankProjectService);\n  const projectOpen = new Array(projectService.length);\n\n  const [initData, setInitData] = useState<InitialValue>({\n    projectCode: '',\n    serviceCode: '',\n    serviceName: '',\n    clientCode: '',\n    serviceStartDate: '',\n    serviceEndDate: '',\n    dataList: [],\n    projectOpen: {},\n    projectService: [],\n  });\n\n  useEffect(() => {\n    setLoading(true);\n    api.projectGetAll().then((res) => {\n      const projectList = res.data.map((project: { projectCode: string; projectName: string }) => ({\n        value: project.projectCode,\n        label: `${project.projectCode} ${project.projectName}`,\n      }));\n      setProjectOptions(projectList);\n    });\n\n    api.clientGetAll().then((res) => {\n      const clientList = res.data.map((client) => ({\n        value: client.clientCode,\n        label: client.clientName,\n      }));\n      setClientOptions(clientList);\n    });\n\n    api.serviceGetAll().then((res) => {\n      const serviceList = res.data.map((service) => ({\n        value: service.serviceCode,\n        label: `${service.serviceCode} ${service.serviceName}`,\n      }));\n      setServiceOptions(serviceList);\n    });\n\n    api.orderManagementListGet().then((orderManagements) => {\n      if (orderManagements.data) {\n        api.getProjectAndService().then((res) => {\n          const filterData: ProjectServiceAttributes[] = [];\n          if (res.data) {\n            res.data.forEach((item) => {\n              if (item.Services.length >= 1) {\n                filterData.push(item);\n              }\n            });\n            setProjectService(filterData);\n            setInitData({ ...initData, dataList: orderManagements.data, projectService: filterData });\n          }\n        });\n      }\n    });\n    setLoading(false);\n    if (location.state) {\n      setSavedAlert({ value: true, message: ' 削除しました。' });\n      setTimeout(() => {\n        setSavedAlert({ value: false, message: '' });\n      }, 3000);\n    }\n  }, []);\n\n  const initIndex = new Array(initData.dataList.length);\n  const [pIndex, setPIndex] = useState<{ index: number }[]>(initIndex);\n  /**\n   * string型の検索クエリを作成し、URLにプッシュ\n   * @param search 検索条件\n   * @return 受注リストのデータ\n   */\n  const stringifySearchValues = useCallback(\n    (values) => {\n      const searchValues = {\n        projectCode: values.projectCode,\n        serviceCode: values.serviceCode,\n        clientCode: values.clientCode,\n        serviceStartDate: formatDate(values.serviceStartDate, 'yyyy-MM-dd'),\n        serviceEndDate: formatDate(values.serviceEndDate, 'yyyy-MM-dd'),\n      };\n      const query = querystring.stringify(searchValues);\n      history.replace({ search: query });\n      api.orderManagementListGet({ query: searchValues }).then((res) => {\n        setInitData({ ...initData, dataList: res.data });\n      });\n    },\n    [history]\n  );\n  /**\n   * ユーザーが受注検索を送信する時に処理\n   * @param values 検索条件を含むオブジェクト型パラメータ\n   * @return 受注情報リストを含む配列\n   */\n  const handleSearchSubmit = useCallback(\n    (values: any) => {\n      stringifySearchValues(values);\n    },\n    [stringifySearchValues]\n  );\n\n  const CustomInput = (props: React.HTMLProps<HTMLInputElement>) => (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <Input {...props} className=\"w-100\" name=\"rangeDate\" value={rangeDate} />\n  );\n\n  const childColumns = (formikProps: FormikProps<InitialValue>) => [\n    {\n      name: '案件',\n      selector: 'serviceCode',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '240px',\n      cell: (row: OrderManagementListAttributes) =>\n        row.estimateFlg || row.orderFlg || row.invoiceFlg ? null : (\n          <div>\n            <Link to={`${ScreenUrl.SERVICE_UPDATE}${row.serviceId}`} className=\"text-link\">\n              {row.serviceCode}\n            </Link>\n            <div>{row.serviceName}</div>\n          </div>\n        ),\n    },\n    {\n      name: 'クライアント',\n      selector: 'clientCode',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '150px',\n      cell: (row: OrderManagementListAttributes) =>\n        row.estimateFlg || row.orderFlg || row.invoiceFlg ? null : (\n          <div>{clientOptions.filter((c) => c.value === row.clientCode)[0]?.label}</div>\n        ),\n    },\n    {\n      name: (\n        <>\n          <p className=\"mb-0\">開始日</p>\n          <p>終了日</p>\n        </>\n      ),\n      selector: 'serviceStartDate',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '150px',\n      cell: (row: OrderManagementListAttributes) =>\n        row.estimateFlg || row.orderFlg || row.invoiceFlg ? null : (\n          <div className=\"text-center\">\n            <div>{row.serviceStartDate ? formatDate(row.serviceStartDate) : '-'}</div>\n            <div>{row.serviceEndDate ? formatDate(row.serviceEndDate) : '-'}</div>\n          </div>\n        ),\n    },\n    {\n      name: '見積状況',\n      selector: 'estimateStatus',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '240px',\n      cell: (row: OrderManagementListAttributes, index: number) =>\n        row.invoiceFlg ? null : (\n          <Row style={{ alignItems: 'center' }}>\n            {row.children && row.children.length > 0 && !row.estimateFlg && row.invoiceFlg === undefined ? (\n              <>\n                {!row.expandEstimate ? (\n                  <i\n                    className=\"icofont icofont-plus pointer pr-1\"\n                    onClick={() => {\n                      initIndex[index] = { ...initIndex[index], index };\n                      setPIndex({ ...pIndex, ...initIndex });\n                      formikProps.setFieldValue(\n                        `dataList[${index}].expandEstimate`,\n                        !formikProps.values.dataList[index].expandEstimate\n                      );\n                    }}\n                  />\n                ) : (\n                  <i\n                    className=\"icofont icofont-minus pointer pr-1\"\n                    onClick={() => {\n                      formikProps.setFieldValue(\n                        `dataList[${index}].expandEstimate`,\n                        !formikProps.values.dataList[index].expandEstimate\n                      );\n                      formikProps.setFieldValue(`dataList[${index}].subExpandInvoice`, false);\n                      formikProps.setFieldValue(`dataList[${index}].expandInvoice`, false);\n                    }}\n                  />\n                )}\n              </>\n            ) : (\n              <div className=\"ml-3\" />\n            )}\n            {row.estimateStatus && row.estimateStatus.trim() !== '' ? (\n              <div>\n                <Link\n                  to={{\n                    pathname: `${ScreenUrl.ESTIMATE_UPDATE}${row.estimateId}`,\n                    state: { from: 's0010', status: row.estimateStatus },\n                  }}\n                  className=\"text-link\"\n                >\n                  <div>{row.estimateCode}</div>\n                </Link>\n                <div style={{ minWidth: '210px', paddingRight: '16px' }}>\n                  <Badge\n                    className=\"mr-1\"\n                    variant={`${\n                      // eslint-disable-next-line no-nested-ternary\n                      row.estimateStatus === Status.CREATING\n                        ? 'primary'\n                        : row.estimateStatus === Status.ESTIMATED\n                        ? 'success'\n                        : 'danger'\n                    }`}\n                  >\n                    {STATUS_MAP[row.estimateStatus]}\n                  </Badge>\n                  <span style={{ float: 'right' }}>{formatPrice(row.estimateTotalPrice)}</span>\n                </div>\n              </div>\n            ) : (\n              <div className=\"pt-2 pb-2\" style={{ textAlign: 'center', minWidth: '180px', padding: '0 16px' }}>\n                －\n              </div>\n            )}\n          </Row>\n        ),\n    },\n    {\n      name: '受注状況',\n      selector: 'orderStatus',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '240px',\n      cell: (row: OrderManagementListAttributes) =>\n        row.invoiceFlg ? null : (\n          <div>\n            {row.orderStatus && row.orderStatus.trim() !== '' ? (\n              <>\n                <Link\n                  to={{\n                    pathname: `${ScreenUrl.ORDER_UPDATE}${row.orderId}`,\n                  }}\n                  className=\"text-link\"\n                >\n                  <div>{row.orderCode}</div>\n                </Link>\n                <div style={{ minWidth: '210px', paddingRight: '16px' }}>\n                  <Badge\n                    className=\"mr-1\"\n                    variant={`${\n                      // eslint-disable-next-line no-nested-ternary\n                      row.orderStatus === Status.CREATING\n                        ? 'primary'\n                        : row.orderStatus === Status.ORDERED\n                        ? 'success'\n                        : 'danger'\n                    }`}\n                  >\n                    {STATUS_MAP[row.orderStatus]}\n                  </Badge>\n                  <span style={{ float: 'right' }}>{formatPrice(row.orderTotalPrice)}</span>\n                </div>\n              </>\n            ) : (\n              <div className=\"pt-2 pb-2\" style={{ textAlign: 'center', minWidth: '180px', padding: '0 16px' }}>\n                －\n              </div>\n            )}\n          </div>\n        ),\n    },\n    {\n      name: '請求状況',\n      selector: 'invoiceStatus',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '240px',\n      cell: (row: OrderManagementListAttributes, index: number) => (\n        <Row style={{ alignItems: 'center' }}>\n          {(row.children && row.children.length > 0 && row.orderFlg !== undefined) ||\n          (row.subChildren && row.subChildren.length > 0 && row.expandEstimate) ? (\n            <>\n              {(row.expandInvoice && ((row.children && !row.children[0].expandInvoice) || !row.subChildren)) ||\n              row.subExpandInvoice ? (\n                <i\n                  className=\"icofont icofont-minus pointer pr-1\"\n                  onClick={() => {\n                    const parentIndex = formikProps.values.dataList.findIndex(\n                      (value) => value.serviceCode === row.serviceCode\n                    );\n                    if (\n                      parentIndex === index &&\n                      formikProps.values.dataList[index].children &&\n                      formikProps.values.dataList[index].children?.length === 1\n                    ) {\n                      if (row.children && row.children?.length > 0)\n                        formikProps.setFieldValue(`dataList[${index}].expandInvoice`, false);\n                      if (row.subChildren && row.subChildren.length > 0) {\n                        formikProps.setFieldValue(`dataList[${pIndex[parentIndex].index}].subExpandInvoice`, false);\n                      } else if (row.children && row.children?.length === 1 && row.subChildren?.length === 0) {\n                        formikProps.setFieldValue(\n                          `dataList[${pIndex[parentIndex].index}].children[${index}].expandInvoice`,\n                          false\n                        );\n                      } else if (index === 0) {\n                        formikProps.setFieldValue(`dataList[0].children[0].expandInvoice`, false);\n                        formikProps.setFieldValue(`dataList[0].expandInvoice`, false);\n                      }\n                    } else if (row.subChildren && row.subChildren.length > 0) {\n                      formikProps.setFieldValue(`dataList[${index}].subExpandInvoice`, false);\n                    } else if (row.children && row.children?.length === 1 && row.subChildren?.length === 0) {\n                      formikProps.setFieldValue(\n                        `dataList[${pIndex[parentIndex].index}].children[${index}].expandInvoice`,\n                        false\n                      );\n                    } else {\n                      formikProps.setFieldValue(\n                        `dataList[${pIndex[parentIndex].index}].children[${index}].expandInvoice`,\n                        false\n                      );\n                    }\n                  }}\n                />\n              ) : (\n                <i\n                  className=\"icofont icofont-plus pointer pr-1\"\n                  onClick={() => {\n                    const parentIndex = formikProps.values.dataList.findIndex(\n                      (value) => value.serviceCode === row.serviceCode\n                    );\n                    if (\n                      parentIndex === index &&\n                      formikProps.values.dataList[index].children &&\n                      formikProps.values.dataList[index].children?.length === 1\n                    ) {\n                      if (row.children && row.children?.length > 0 && index !== 0)\n                        formikProps.setFieldValue(`dataList[${index}].expandInvoice`, true);\n                      if (row.subChildren && row.subChildren.length > 0) {\n                        formikProps.setFieldValue(`dataList[${pIndex[parentIndex].index}].subExpandInvoice`, true);\n                      } else if (row.children && row.children?.length === 1 && row.subChildren?.length === 0) {\n                        formikProps.setFieldValue(\n                          `dataList[${pIndex[parentIndex].index}].children[${index}].expandInvoice`,\n                          true\n                        );\n                      } else if (index === 0) {\n                        formikProps.setFieldValue(`dataList[0].children[0].expandInvoice`, true);\n                        formikProps.setFieldValue(`dataList[0].expandInvoice`, true);\n                      }\n                    } else if (row.subChildren && row.subChildren.length > 0) {\n                      formikProps.setFieldValue(`dataList[${index}].subExpandInvoice`, true);\n                    } else if (row.children && row.children?.length === 1 && row.subChildren?.length === 0) {\n                      formikProps.setFieldValue(\n                        `dataList[${pIndex[parentIndex].index}].children[${index}].expandInvoice`,\n                        true\n                      );\n                    } else {\n                      formikProps.setFieldValue(\n                        `dataList[${pIndex[parentIndex].index}].children[${index}].expandInvoice`,\n                        true\n                      );\n                    }\n                  }}\n                />\n              )}\n            </>\n          ) : (\n            <div className=\"ml-3\" />\n          )}\n          {row.invoiceStatus && row.invoiceStatus.trim() !== '' ? (\n            <div>\n              <Link\n                to={{\n                  pathname: `${ScreenUrl.INVOICE_UPDATE}${row.invoiceId}`,\n                  state: { from: 's0010', status: row.invoiceStatus },\n                }}\n                className=\"text-link\"\n              >\n                <div>{row.invoiceCode}</div>\n              </Link>\n              <div style={{ minWidth: '210px', paddingRight: '16px' }}>\n                <Badge\n                  className=\"mr-1\"\n                  variant={`${\n                    // eslint-disable-next-line no-nested-ternary\n                    row.invoiceStatus === Status.CREATING\n                      ? 'primary'\n                      : row.invoiceStatus === Status.INVOICED\n                      ? 'success'\n                      : 'danger'\n                  }`}\n                >\n                  {STATUS_MAP[row.invoiceStatus]}\n                </Badge>\n                <span style={{ float: 'right' }}>{formatPrice(row.invoiceTotalPrice)}</span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"pt-2 pb-2\" style={{ textAlign: 'center', minWidth: '180px', padding: '0 16px' }}>\n              －\n            </div>\n          )}\n        </Row>\n      ),\n    },\n    {\n      name: 'プロジェクト',\n      selector: 'projectCode',\n      sortable: true,\n      style: { alignItems: 'center', paddingTop: '9px', paddingBottom: '9px' },\n      minWidth: '180px',\n      cell: (row: {\n        estimateFlg: boolean;\n        orderFlg: boolean;\n        invoiceFlg: boolean;\n        projectCode: React.ReactNode;\n        projectName: React.ReactNode;\n      }) =>\n        row.estimateFlg || row.orderFlg || row.invoiceFlg ? null : (\n          <div>\n            <div>{row.projectCode}</div>\n            <div>{projectOptions.filter((p) => p.value === row.projectCode)[0]?.label.slice(9)}</div>\n          </div>\n        ),\n    },\n  ];\n\n  return (\n    <AppLayout>\n      <Breadcrumb parent=\"受注システム\" title=\"受注管理\" />\n      <Formik initialValues={initData} onSubmit={(values) => handleSearchSubmit(values)} enableReinitialize>\n        {(formikProps) => (\n          <Form>\n            <Card>\n              <CardHeader>\n                <h3>受注管理</h3>\n                <Alert isOpen={savedAlert.value}>{savedAlert.message}</Alert>\n              </CardHeader>\n              <CardBody>\n                <Row className=\"custom-form-group form-inline\">\n                  <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                    <Row style={{ alignItems: 'center' }}>\n                      <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                        プロジェクト\n                      </label>\n                      <Col className=\"col-sm-8 pl-0 pr-5\">\n                        <CustomSelect name=\"projectCode\" options={projectOptions} isClearable />\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                    <Row style={{ alignItems: 'center' }}>\n                      <label className=\"col-sm-4 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                        案件\n                      </label>\n                      <Col className=\"col-sm-8 pl-0 pr-5\">\n                        <CustomSelect name=\"serviceCode\" options={serviceOptions} isClearable />\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n                <Row className=\"custom-form-group form-inline\">\n                  <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                    <Row style={{ alignItems: 'center' }}>\n                      <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                        クライアント\n                      </label>\n                      <Col className=\"col-sm-8 pl-0 pr-5\">\n                        <CustomSelect name=\"clientCode\" options={clientOptions} isClearable />\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                    <Row style={{ alignItems: 'center' }}>\n                      <label className=\"col-sm-4 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                        期間\n                      </label>\n                      <div className=\"col-sm-4 pl-0 pr-3\" style={{ maxWidth: '28.4%' }}>\n                        <Input className=\"w-100\" type=\"date\" name=\"serviceStartDate\" />\n                      </div>\n                      <span>~</span>\n                      <div className=\"col-sm-4 pl-3 pr-0\" style={{ maxWidth: '28.4%' }}>\n                        <Input className=\"w-100\" type=\"date\" name=\"serviceEndDate\" />\n                      </div>\n                    </Row>\n                  </Col>\n                </Row>\n                <Row className=\"custom-form-group form-inline\">\n                  <Col className=\"search-button ml-0\">\n                    <Button className=\"ml-4\" variant=\"info\" type=\"submit\">\n                      検索 <i className=\"fa fa-search\" />\n                    </Button>\n                  </Col>\n                </Row>\n                <Row className=\"pull-right mr-5\">\n                  <Button variant=\"info\" type=\"button\" onClick={() => history.push(`${ScreenUrl.SERVICE_CREATE}`)}>\n                    案件作成\n                  </Button>\n                </Row>\n                <br />\n                <label className=\"switch mb-0\">\n                  <a\n                    href=\"#\"\n                    onClick={() => {\n                      setProjectMode(!projectMode);\n                      formikProps.setFieldValue('projectOpen', {});\n                    }}\n                  >\n                    {!projectMode ? <Folder /> : <List />}\n                  </a>\n                </label>\n                {!projectMode ? (\n                  <>\n                    <DataTable\n                      columns={childColumns(formikProps)}\n                      data={formikProps.values.dataList}\n                      noHeader\n                      loading={loading}\n                      expandableRows\n                      expandableRowExpanded={(row) => row.subExpandInvoice || row.expandEstimate || row.expandInvoice}\n                      expandableRowsHideExpander\n                      expandableRowsComponent={\n                        <ExpandableComponents\n                          data={formikProps.values.dataList}\n                          columns={childColumns(formikProps)}\n                          loading={loading}\n                        />\n                      }\n                    />\n                  </>\n                ) : (\n                  <>\n                    {formikProps.values.projectService.map(\n                      (project: { projectCode: string; projectName: string }, index: number) => (\n                        <div\n                          className=\"project-tree pb-2 pt-2\"\n                          key={`data-${\n                            formikProps.values.projectService.length + index - formikProps.values.projectService.length\n                          }`}\n                        >\n                          <Row style={{ alignItems: 'center' }}>\n                            {formikProps.values.projectOpen[index]?.open === true ? (\n                              <Col className=\"col-md-1 col pl-5 pr-0\">\n                                <i\n                                  className=\"pointer fa fa-angle-down mr-2\"\n                                  style={{ fontSize: 'large', paddingRight: '4px' }}\n                                  id={`toggler${index}`}\n                                  onClick={() => {\n                                    projectOpen[index] = { ...projectOpen[index], open: false };\n                                    formikProps.setFieldValue('projectOpen', projectOpen);\n                                  }}\n                                />\n                                <i className=\"fa fa-folder-open-o\" style={{ fontSize: 'large' }} />\n                              </Col>\n                            ) : (\n                              <Col className=\"col-md-1 col pl-5 pr-0\">\n                                <i\n                                  className=\"pointer fa fa-angle-right mr-2\"\n                                  style={{ fontSize: 'large', paddingRight: '9px' }}\n                                  id={`toggler${index}`}\n                                  onClick={() => {\n                                    projectOpen[index] = { ...projectOpen[index], open: true };\n                                    formikProps.setFieldValue('projectOpen', projectOpen);\n                                  }}\n                                />\n                                <i className=\"fa fa-folder-o\" style={{ fontSize: 'large' }} />\n                              </Col>\n                            )}\n\n                            <span>\n                              {padId(project.projectCode)} {project.projectName}\n                            </span>\n                          </Row>\n                          <UncontrolledCollapse toggler={`#toggler${index}`}>\n                            {formikProps.values.projectService[index].Services.map(\n                              (service: { serviceId: number; serviceCode: string; serviceName: string }, i: number) => (\n                                // eslint-disable-next-line react/no-array-index-key\n                                <div\n                                  key={`sub-${\n                                    formikProps.values.projectService[index].Services.length +\n                                    i -\n                                    formikProps.values.projectService[index].Services.length\n                                  }`}\n                                >\n                                  <Row>\n                                    <Col className=\"col-md-1 col pl-5 pr-0\" />\n                                    <i className=\"pointer fa fa-angle-right pr-3\" />\n                                    <Link to={`${ScreenUrl.SERVICE_UPDATE}${service.serviceId}`} className=\"text-link\">\n                                      {padId(service.serviceCode)} {service.serviceName}\n                                    </Link>\n                                  </Row>\n                                </div>\n                              )\n                            )}\n                          </UncontrolledCollapse>\n                        </div>\n                      )\n                    )}\n                  </>\n                )}\n              </CardBody>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </AppLayout>\n  );\n};\nexport default OrderManagement;\n","import React, { FC, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select, { OptionsType } from 'react-select';\nimport { Button, Col, Row } from 'reactstrap';\nimport { Form, Formik } from 'formik';\nimport { Input, OptionType } from './form-helper';\nimport api from '../../utils/api_client';\n\ninterface DocumentUploaderProps {\n  upload?: boolean;\n  index?: number;\n  name: string;\n  deleteDoc?: boolean;\n  onUpload?: (documentID: number, filePath: string, documentSaveName: string) => void;\n  documentId?: number;\n  filesInfo?: File;\n  documentType?: string;\n  onDelete?: (id?: number) => void;\n  onSelect?: (files: File) => void;\n  filesOptions?: OptionsType<OptionType>;\n  placeholder?: string;\n  documentName?: string;\n  filePath?: string;\n  update?: boolean;\n  prevDoc?: number[];\n  setNoScroll?: React.SetStateAction<any>;\n  disableAdd?: boolean;\n}\ninterface InitialValue {\n  documentSaveName?: string;\n}\n\nconst DocumentUploader: FC<DocumentUploaderProps> = ({\n  index,\n  name,\n  documentId,\n  filesInfo,\n  onSelect,\n  filesOptions,\n  placeholder,\n  onUpload,\n  onDelete,\n  deleteDoc,\n  documentName,\n  filePath,\n  update,\n  prevDoc,\n  setNoScroll,\n  disableAdd,\n}) => {\n  const [documentSaveName, setDocumentSaveName] = useState<string>('');\n  const [files, setFiles] = useState<File | undefined>(filesInfo);\n  const [uploadSuccess, setUploadSuccess] = useState<boolean>();\n  const classNames = ['custom-file-upload-input'];\n  const initialData: InitialValue = {\n    documentSaveName,\n  };\n\n  const handleFileChange = (event: any) => {\n    event.preventDefault();\n    const fileSelected = event.target.files[0];\n    setFiles(fileSelected);\n    if (onSelect) {\n      onSelect(fileSelected);\n    }\n  };\n\n  const handleFileUpload = async (values: InitialValue) => {\n    if (files) {\n      if (files.size > 10485760) {\n        alert('ファイルサイズが10MBを超えています。');\n        setUploadSuccess(false);\n      } else {\n        await api.uploadFile(documentSaveName, files).then((res: any) => {\n          if (res.status === 200 && res.data != null) {\n            if (onUpload) {\n              onUpload(res.data.document.documentId, res.data.document.filePath, res.data.document.documentSaveName);\n            }\n          }\n        });\n        setNoScroll(true);\n        setDocumentSaveName('');\n      }\n    }\n  };\n\n  /**\n   * 削除ボタン押下\n   * @param event\n   * @param documentId\n   */\n  const handleFileDelete = async (event: any, id: number) => {\n    if (!update && !prevDoc?.includes(id)) {\n      api.deleteFile(id).then((res) => {\n        if (res.status === 200) {\n          if (onDelete) {\n            onDelete();\n          }\n        }\n      });\n    } else if (onDelete) {\n      onDelete(id);\n    }\n  };\n\n  const handleDownloadFile = async (event: any, id: number, fileName: string) => {\n    api.downloadFile(id, { responseType: 'blob' }).then(async (res) => {\n      const data = (res.data as any) as BlobPart;\n      const blob = new Blob([data]);\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n    });\n  };\n  return (\n    <>\n      <Formik initialValues={initialData} onSubmit={(values) => handleFileUpload(values)}>\n        {() => (\n          <Form>\n            {filePath && documentId ? (\n              <>\n                <Row className=\"ml-0 mr-0\">\n                  <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                    <Link\n                      className=\"col-lg-3 col-sm-5 pr-0 pl-0\"\n                      to=\"#\"\n                      onClick={(event) => {\n                        if (documentName) {\n                          handleDownloadFile(event, documentId, documentName);\n                        }\n                      }}\n                    >\n                      {documentName}\n                    </Link>\n                    {deleteDoc && (\n                      <Link\n                        className=\"fa fa-trash-o col-lg-8 pr-1\"\n                        to=\"#\"\n                        onClick={(event) => {\n                          handleFileDelete(event, documentId).then();\n                        }}\n                      />\n                    )}\n                  </Col>\n                </Row>\n              </>\n            ) : (\n              <>\n                <div className=\"custom-file\">\n                  <Row className=\"ml-0 mr-0\">\n                    <Col className=\"form-group form-inline col-lg-group\">\n                      <input\n                        type=\"file\"\n                        name={`${name}`}\n                        className={classNames.join(' ')}\n                        disabled={uploadSuccess || !deleteDoc}\n                        onChange={(event) => handleFileChange(event)}\n                      />\n                      <label\n                        className=\"custom-file-upload-label pl-2\"\n                        htmlFor={`${index}`}\n                        data-browse=\"ファイルを選択\"\n                      >\n                        {filesInfo ? filesInfo.name : 'ファイルを選択してください'}\n                      </label>\n                    </Col>\n                    <Col className=\"form-group form-inline col-lg-group w-100 pr-4\">\n                      {filesOptions === undefined ? (\n                        <Input\n                          className=\"w-100\"\n                          name=\"documentSaveName\"\n                          placeholder={placeholder}\n                          onValueChange={(value: string | number) => {\n                            if (value) {\n                              setDocumentSaveName(String(value));\n                            }\n                          }}\n                          // value={documentSaveName}\n                        />\n                      ) : (\n                        <Select className=\"w-100\" name=\"documentKbn\" options={filesOptions} placeholder={placeholder} />\n                      )}\n                    </Col>\n                    <Col className=\"form-group form-inline col-lg-group pl-0\">\n                      <Button\n                        variant=\"info\"\n                        className=\"text-nowrap\"\n                        type=\"submit\"\n                        disabled={uploadSuccess || !deleteDoc || disableAdd}\n                        hidden={uploadSuccess}\n                      >\n                        追加\n                      </Button>\n                    </Col>\n                  </Row>\n                </div>\n              </>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default DocumentUploader;\n","import { Button, Card, CardBody, CardFooter, CardHeader, Col, Modal, Row } from 'reactstrap';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { Form, Formik, FormikProps } from 'formik';\nimport { Input } from '../common/form-helper';\nimport DataTable from '../common/datatable/data-table';\nimport { padId } from '../common/formatter/formatter';\nimport api from '../../utils/api_client';\nimport { ClientEmployeeAttributes } from '../../api';\n\ninterface FormProps {\n  formikProps: FormikProps<any>;\n  dataProps: ClientEmployeeAttributes[];\n  isOpen: boolean;\n}\n\nconst SetClientEmployee: React.FC<FormProps> = ({ formikProps, dataProps, isOpen }) => {\n  const [isOpened, setIsOpened] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [createFlg, setCreateFlg] = useState(false);\n\n  const reducer = (state: any, action: { id: string }) => ({ checkedId: action.id });\n\n  const iniData: ClientEmployeeAttributes = {\n    clientEmployeeCode: '',\n    clientEmployeeName: '',\n    clientCode: formikProps.values.clientCode,\n    departmentName: '',\n    phoneNumber: '',\n    email: '',\n  };\n\n  const [state, dispatch] = useReducer(reducer, {} as any);\n\n  useEffect(() => {\n    setIsOpened(isOpen);\n    if (dataProps.length <= 0 && formikProps.values.clientCode) setCreateFlg(true);\n  }, [dataProps.length, isOpen]);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const CheckBox = ({ id }) => (\n    <input\n      id={id}\n      onClick={() => {\n        dispatch({ id });\n        const row = dataProps.filter((value) => value.clientEmployeeCode === id);\n        formikProps.setFieldValue('clientEmployeeCode', row[0].clientEmployeeCode);\n        formikProps.setFieldValue('clientEmployeeName', row[0].clientEmployeeName);\n        formikProps.setFieldValue('clientCode', row[0].clientCode);\n        formikProps.setFieldValue('departmentName', row[0].departmentName);\n        formikProps.setFieldValue('phoneNumber', row[0].phoneNumber);\n        formikProps.setFieldValue('email', row[0].email);\n      }}\n      checked={state.checkedId === id}\n      type=\"checkbox\"\n    />\n  );\n\n  const clientEmployeeColumns = [\n    {\n      name: '選択',\n      minWidth: '10%',\n      selector: '',\n      cell: (row: { clientEmployeeCode: string }) => <CheckBox id={row.clientEmployeeCode} />,\n    },\n    {\n      name: '担当者コード',\n      selector: 'clientEmployeeCode',\n      sortable: true,\n      style: { alignItems: 'baseline', paddingTop: '9px' },\n      minWidth: '30%',\n      cell: (row: { clientEmployeeCode: string }) => (\n        <span>{row.clientEmployeeCode ? padId(row.clientEmployeeCode) : ''}</span>\n      ),\n    },\n    {\n      name: '担当者名',\n      selector: 'clientEmployeeName',\n      sortable: true,\n      style: { alignItems: 'baseline', paddingTop: '9px' },\n      minWidth: '50%',\n      cell: (row: { clientEmployeeName: string }) => <span>{row.clientEmployeeName}</span>,\n    },\n  ];\n\n  const toggleConfirm = () => {\n    setIsOpened(!isOpened);\n  };\n\n  const handleSave = (value: ClientEmployeeAttributes) => {\n    const createValue: ClientEmployeeAttributes = {\n      clientEmployeeCode: value.clientEmployeeCode,\n      clientEmployeeName: value.clientEmployeeName,\n      clientCode: formikProps.values.clientCode,\n      departmentName: value.departmentName,\n      phoneNumber: value.phoneNumber,\n      email: value.email,\n    };\n    if (createFlg) {\n      api.createClientEmployee(createValue).then(() => {\n        formikProps.setFieldValue('clientEmployeeCode', createValue.clientEmployeeCode);\n        formikProps.setFieldValue('clientEmployeeName', createValue.clientEmployeeName);\n        formikProps.setFieldValue('clientCode', createValue.clientCode);\n        formikProps.setFieldValue('departmentName', createValue.departmentName);\n        formikProps.setFieldValue('phoneNumber', createValue.phoneNumber);\n        formikProps.setFieldValue('email', createValue.email);\n      });\n    }\n    setIsOpened(!isOpened);\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpened} toggle={toggleConfirm} size=\"lg\">\n        <Formik initialValues={iniData} onSubmit={(value) => handleSave(value)}>\n          {() => (\n            <Form>\n              <Card>\n                <CardHeader>\n                  <h3>クライアント情報</h3>\n                </CardHeader>\n                <CardBody>\n                  {createFlg ? (\n                    <>\n                      <div className=\"form-group\">\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              担当者コード\n                            </label>\n                            <div className=\"col-lg-8 pr-1\">\n                              <Input type=\"text\" name=\"clientEmployeeCode\" />\n                            </div>\n                          </Col>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              担当者名\n                            </label>\n                            <div className=\"col-lg-8 pr-1\">\n                              <Input type=\"text\" name=\"clientEmployeeName\" />\n                            </div>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              担当者部署名\n                            </label>\n                            <div className=\"col-lg-8 pr-1\">\n                              <Input type=\"text\" name=\"departmentName\" />\n                            </div>\n                          </Col>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              担当者電話番号\n                            </label>\n                            <div className=\"col-lg-8 pr-1\">\n                              <Input type=\"text\" name=\"phoneNumber\" />\n                            </div>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              担当者\n                              <br />\n                              メールアドレス\n                            </label>\n                            <div className=\"col-lg-8 pr-1\">\n                              <Input type=\"text\" name=\"email\" />\n                            </div>\n                          </Col>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\" />\n                        </Row>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <Row className=\"form-group\">\n                        <Col className=\"align-self-start\" />\n                        <Col className=\"align-self-center\" />\n                        <Button variant=\"info\" type=\"button\" onClick={() => setCreateFlg(true)}>\n                          新規登録\n                        </Button>\n                      </Row>\n                      <Row className=\"form-group\">\n                        <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                          <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\">担当者コード</label>\n                          <div className=\"col-lg-8 pr-1\">\n                            <Input className=\"form-control\" type=\"text\" name=\"clientEmployeeCode\" />\n                          </div>\n                        </Col>\n                        <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                          <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\">担当者名</label>\n                          <div className=\"col-lg-8 pr-1\">\n                            <Input className=\"form-control\" type=\"text\" name=\"clientEmployeeName\" />\n                          </div>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <div className=\"col align-self-start\" />\n                        <div>\n                          <Button variant=\"info\" type=\"button\">\n                            検索 <i className=\"fa fa-search\" />\n                          </Button>\n                        </div>\n                        <div className=\"col align-self-end\" />\n                      </Row>\n                      <Row className=\"mt-1\">\n                        <DataTable\n                          columns={clientEmployeeColumns}\n                          data={dataProps}\n                          noHeader\n                          subHeaderAlign=\"left\"\n                          loading={loading}\n                          pagination={false}\n                        />\n                      </Row>\n                    </>\n                  )}\n                </CardBody>\n                <CardFooter>\n                  <Row>\n                    <div className=\"col align-self-start\" />\n                    <div>\n                      <Button variant=\"info\" type=\"submit\">\n                        {createFlg ? `登録 ＆ 反映` : `反映`}\n                      </Button>\n                    </div>\n                    <div className=\"col align-self-end\" />\n                  </Row>\n                </CardFooter>\n              </Card>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default SetClientEmployee;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, CardBody, CardFooter, CardHeader, Col, Modal, Row } from 'reactstrap';\nimport { Form, Formik, FormikProps } from 'formik';\nimport { Input } from '../common/form-helper';\nimport api from '../../utils/api_client';\n\ninterface FormProps {\n  formikProps: FormikProps<any>;\n  initClientCode: string;\n  isOpen: boolean;\n  clientOptions?: any;\n}\n\nconst CreateClient: React.FC<FormProps> = ({ initClientCode, isOpen, clientOptions, formikProps }) => {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const initValues = {\n    clientCode: initClientCode,\n    clientName: '',\n    phoneNumber: '',\n    email: '',\n    address: '',\n  };\n\n  const toggleClient = () => {\n    setIsOpened(!isOpened);\n  };\n\n  const handleSave = (value: {\n    clientCode: string;\n    clientName: string;\n    phoneNumber: string;\n    email: string;\n    address: string;\n  }) => {\n    api\n      .clientPost(value)\n      .then(() => {\n        clientOptions.push({\n          value: value.clientCode,\n          label: `${value.clientCode} ${value.clientName}`,\n        });\n        formikProps.setFieldValue('clientCode', value.clientCode);\n        toggleClient();\n      })\n      .catch(() => toggleClient());\n  };\n\n  useEffect(() => {\n    setIsOpened(isOpen);\n  }, []);\n\n  return (\n    <>\n      <Modal isOpen={isOpened} toggle={toggleClient} size=\"lg\">\n        <Formik initialValues={initValues} onSubmit={(value) => handleSave(value)}>\n          {() => (\n            <Form>\n              <Card>\n                <CardHeader>\n                  <h3>クライアント登録</h3>\n                </CardHeader>\n                <CardBody>\n                  <Row className=\"form-group\">\n                    <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                      <label className=\"col-lg-4 col-sm-5 pr-0 pl-0 required\" style={{ justifyContent: 'left' }}>\n                        コード\n                      </label>\n                      <div className=\"col-lg-8 pr-1\">\n                        <Input className=\"form-control\" type=\"text\" name=\"clientCode\" />\n                      </div>\n                    </Col>\n                    <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                      <label className=\"col-lg-4 col-sm-5 pr-0 pl-0 required\" style={{ justifyContent: 'left' }}>\n                        名称\n                      </label>\n                      <div className=\"col-lg-8 pr-1\">\n                        <Input className=\"form-control\" type=\"text\" name=\"clientName\" />\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                      <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                        電話番号\n                      </label>\n                      <div className=\"col-lg-8 pr-1\">\n                        <Input className=\"form-control\" type=\"text\" name=\"phoneNumber\" />\n                      </div>\n                    </Col>\n                    <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                      <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                        メールアドレス\n                      </label>\n                      <div className=\"col-lg-8 pr-1\">\n                        <Input className=\"form-control\" type=\"text\" name=\"email\" />\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row className=\"form-group\">\n                    <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                      <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                        住所\n                      </label>\n                      <div className=\"col-lg-8 pr-1\">\n                        <Input className=\"form-control\" type=\"text\" name=\"address\" />\n                      </div>\n                    </Col>\n                    <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\" />\n                  </Row>\n                </CardBody>\n                <CardFooter>\n                  <div className=\"pull-right\">\n                    <Button className=\"mr-3\" variant=\"info\" type=\"submit\">\n                      保存\n                    </Button>\n                    <Button color=\"light\" onClick={toggleClient}>\n                      キャンセル\n                    </Button>\n                  </div>\n                </CardFooter>\n              </Card>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CreateClient;\n","import { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport React, { useEffect, useState } from 'react';\n\ninterface FormProps {\n  modalProps: { modalTitle: string; message: string; yesTitle: string; noTitle: string; functionOnYes: () => void };\n  isOpen: boolean;\n  setIsOpen?: React.SetStateAction<any>;\n}\n\nconst ConfirmModal: React.FC<FormProps> = ({ isOpen, modalProps, setIsOpen }) => {\n  const [isOpened, setIsOpened] = useState(false);\n  useEffect(() => {\n    setIsOpened(isOpen);\n  }, []);\n  const toggleConfirm = () => {\n    setIsOpened(!isOpened);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpened} toggle={toggleConfirm} className=\"modal-dialog-centered\">\n        <ModalHeader>{modalProps.modalTitle}</ModalHeader>\n        <ModalBody>{modalProps.message}</ModalBody>\n        <ModalFooter className=\"bookmark pull-right mr-4\">\n          <Button\n            variant=\"info\"\n            onClick={() => {\n              modalProps.functionOnYes();\n              setIsOpened(!isOpened);\n            }}\n          >\n            {modalProps.yesTitle}\n          </Button>\n          <Button color=\"light\" onClick={toggleConfirm}>\n            {modalProps.noTitle}\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default ConfirmModal;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router';\nimport {\n  Row,\n  Col,\n  Button,\n  Card,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Alert,\n} from 'reactstrap';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport { Form, Formik, FormikProps, FieldArray } from 'formik';\nimport * as Yup from 'yup';\nimport Breadcrumb from '../components/common/breadcrumb';\nimport { Input, CustomSelect, Textarea } from '../components/common/form-helper';\nimport AppLayout from '../components/common/layout';\nimport DocumentUploader from '../components/common/document-uploader';\nimport { ScreenUrl } from '../constant/commonConstant';\nimport SetClientEmployee from '../components/client-process/set-client-employee';\nimport api from '../utils/api_client';\nimport {\n  ClientEmployeeAttributes,\n  ProjectAttributes,\n  ServiceAttributes,\n  ServiceUpdateAttributes,\n  ServiceDocumentAttributes,\n  DocumentAttributes,\n} from '../api';\nimport { formatDate, padId } from '../components/common/formatter/formatter';\nimport CreateClient from '../components/client-process/create-client';\nimport ConfirmModal from '../components/common/confirm-modal';\n\ninterface InitialValue {\n  serviceId: number;\n  projectCode: string;\n  projectName: string;\n  serviceStartDate: string;\n  serviceEndDate: string;\n  serviceCode: string;\n  serviceName: string;\n  clientCode: string;\n  clientName: string;\n  employeeCode: string;\n  clientEmployeeCode?: string;\n  clientEmployeeName?: string;\n  departmentName?: string;\n  phoneNumber?: string;\n  email?: string;\n  description: string;\n  documents?: serviceDocument[];\n}\nconst blankDocumentInfo: serviceDocument = {\n  documentId: 0,\n  documentName: '',\n  filePath: '',\n  documentSaveName: '',\n};\n\ninterface serviceDocument extends DocumentAttributes {\n  filesInfo?: File;\n}\n\n/**\n * 初期値\n */\nconst initialValues: InitialValue = {\n  serviceId: 0,\n  projectCode: '',\n  projectName: '',\n  serviceStartDate: '',\n  serviceEndDate: '',\n  serviceCode: '',\n  serviceName: '',\n  clientCode: '',\n  clientName: '',\n  employeeCode: '',\n  clientEmployeeCode: '',\n  clientEmployeeName: '',\n  departmentName: '',\n  phoneNumber: '',\n  email: '',\n  documents: [blankDocumentInfo],\n  description: '',\n};\n\nconst SchemaValidation = Yup.object().shape({\n  projectCode: Yup.string().nullable().required().max(8),\n  serviceCode: Yup.string().nullable().required().max(12),\n  serviceName: Yup.string().nullable().required(),\n  clientCode: Yup.string().nullable().required().max(12),\n  serviceStartDate: Yup.string().nullable().required(),\n  serviceEndDate: Yup.string().nullable().required(),\n  employeeCode: Yup.string().nullable().required(),\n});\n\nexport const Service: React.FC = () => {\n  const [modalProject, setModalProject] = useState(false);\n  const [modalClient, setModalClient] = useState(false);\n  const [modalConfirm, setModalConfirm] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  const [projectOptions, setProjectOptions] = useState<{ value: string; label: string }[]>([]);\n  const [clientOptions, setClientOptions] = useState<{ value: string; label: string }[]>([]);\n  const [employeesOptions, setEmployeesOptions] = useState<{ value: string; label: string }[]>([]);\n  const [clientEmployeeData, setClientEmployeeData] = useState<ClientEmployeeAttributes[]>([]);\n  const [prevDocuments, setPrevDocuments] = useState<serviceDocument[]>([blankDocumentInfo]);\n  const [savedAlert, setSavedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [copiedAlert, setCopiedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [copyFlag, setCopyFlag] = useState(false);\n  const [preDocId, setPreDocId] = useState<number[]>([]);\n  const [delDocId, setDelDocID] = useState<number[]>([]);\n  let createdServiceId = 0;\n\n  const [initialData, setInitialData] = useState<InitialValue>(initialValues);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  const location = useLocation();\n  const getPartOfName = (startDate: string, endDate: string): string => {\n    if (!startDate && !endDate) {\n      return '';\n    }\n    const jsStartDate = new Date(startDate);\n    const jsEndDate = new Date(endDate);\n\n    if (startDate && endDate && jsStartDate.getMonth() !== jsEndDate.getMonth()) {\n      return `(${String(jsStartDate.getMonth() + 1)}月-${String(jsEndDate.getMonth() + 1)}月)`;\n    }\n    if (startDate) {\n      return `(${String(jsStartDate.getMonth() + 1)}月)`;\n    }\n    return `(${String(jsEndDate.getMonth() + 1)}月)`;\n  };\n\n  const fetchData = async () => {\n    await api.clientEmployeeGetByClientCode().then((res) => setClientEmployeeData(res.data));\n    await api.projectGetAll().then((res) => {\n      const projectList = res.data.map((project: { projectCode: string; projectName: string }) => ({\n        value: project.projectCode,\n        label: `${project.projectCode} ${project.projectName}`,\n      }));\n      setProjectOptions(projectList);\n    });\n\n    await api.clientGetAll().then((res) => {\n      const clientList = res.data.map((client) => ({\n        value: client.clientCode,\n        label: `${client.clientCode} ${client.clientName}`,\n      }));\n      setClientOptions(clientList);\n    });\n\n    await api.employeeGetSales().then((res) => {\n      const employeeList = res.data.map((employee: { employeeCode: string; employeeName: string }) => ({\n        value: employee.employeeCode,\n        label: employee.employeeName,\n      }));\n      setEmployeesOptions(employeeList);\n    });\n    if (id) {\n      const documentRes = await api.getServiceDocuments(id);\n      const documentData = [...documentRes.data, blankDocumentInfo];\n      setPrevDocuments(documentData);\n      const prevArrDocId: number[] = documentData\n        ? documentData.map((doc: serviceDocument) => doc.documentId).filter(Boolean)\n        : [];\n      setPreDocId(prevArrDocId);\n      await api.getServiceById(id).then((res) => {\n        const data: InitialValue = {\n          ...initialData,\n          ...res.data,\n          documents: documentData,\n        };\n        setInitialData({\n          ...data,\n          serviceStartDate: formatDate(data.serviceStartDate, 'yyyy-MM-dd'),\n          serviceEndDate: formatDate(data.serviceEndDate, 'yyyy-MM-dd'),\n        });\n      });\n    } else if (typeof location.state === 'object') {\n      setCopyFlag(true);\n      setCopiedAlert({ value: true, message: 'コピーしました' });\n      setTimeout(() => {\n        setCopiedAlert({ value: false, message: '' });\n      }, 3000);\n      const oldServiceId = (location.state as { serviceId: string }).serviceId;\n      api.getServiceDocuments(oldServiceId).then((docs) => {\n        setPrevDocuments([...docs.data, blankDocumentInfo]);\n      });\n    }\n  };\n  useEffect(() => {\n    fetchData().then();\n  }, [id]);\n\n  const toggleProject = () => {\n    setModalProject(!modalProject);\n  };\n  const toggleClient = () => {\n    setModalClient(!modalClient);\n  };\n\n  const handleCreateProject = (formikProps: FormikProps<InitialValue>) => {\n    const value = formikProps.values;\n    const submitValue: ProjectAttributes = {\n      projectCode: value.projectCode,\n      projectName: value.projectName,\n    };\n    api\n      .projectPost(submitValue)\n      .then(() => {\n        projectOptions.push({\n          value: value.projectCode,\n          label: `${value.projectCode} ${value.projectName}`,\n        });\n        formikProps.setFieldValue('serviceCode', `${value.projectCode}1`);\n        formikProps.setFieldValue(\n          'serviceName',\n          `${\n            (formikProps.values.serviceStartDate !== '' && formikProps.values.serviceStartDate !== null) ||\n            (formikProps.values.serviceEndDate !== '' && formikProps.values.serviceEndDate !== null)\n              ? projectOptions.filter((p) => p.value === value.projectCode)[0].label.slice(9)\n              : ''\n          }${getPartOfName(formikProps.values.serviceStartDate, formikProps.values.serviceEndDate)}`\n        );\n        toggleProject();\n      })\n      .catch(() => toggleProject());\n  };\n\n  const referClientEmployee = async (value: string) => {\n    await api.clientEmployeeGetByClientCode(value).then((res) => setClientEmployeeData(res.data));\n    setModalConfirm(!modalConfirm);\n  };\n\n  const history = useHistory();\n  const handleSubmit = async (values: InitialValue) => {\n    const serviceValue: ServiceAttributes | ServiceUpdateAttributes = {\n      serviceCode: values.serviceCode,\n      serviceName: values.serviceName,\n      projectCode: values.projectCode,\n      serviceStartDate: values.serviceStartDate,\n      serviceEndDate: values.serviceEndDate,\n      clientCode: values.clientCode,\n      clientEmployeeCode: values.clientEmployeeCode !== '' ? values.clientEmployeeCode : undefined,\n      employeeCode: values.employeeCode,\n      description: values.description !== '' ? values.description : undefined,\n    };\n\n    const prevArrDocId: number[] = prevDocuments\n      ? prevDocuments.map((doc: serviceDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const arrDocId: number[] = values.documents\n      ? values.documents.map((doc: serviceDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const createDocId: number[] = [];\n    arrDocId.forEach((val) => {\n      if (prevArrDocId.indexOf(val) <= -1) createDocId.push(val);\n    });\n    const serviceDocCreateValue: ServiceDocumentAttributes = {\n      serviceId: values.serviceId,\n      documents: createDocId,\n    };\n\n    if (id) {\n      await api.serviceUpdate(id, serviceValue).then(() => {\n        createdServiceId = id;\n        window.scroll(0, 0);\n        setSavedAlert({ value: true, message: '更新しました' });\n        setTimeout(() => {\n          setSavedAlert({ value: false, message: '' });\n        }, 3000);\n      });\n    } else {\n      await api.serviceCreate(serviceValue).then((service) => {\n        createdServiceId = (service.data as any).serviceId;\n        window.scroll(0, 0);\n        setSavedAlert({ value: true, message: '保存しました' });\n        setTimeout(() => {\n          setSavedAlert({ value: false, message: '' });\n        }, 3000);\n      });\n    }\n    delDocId.forEach((delId) => {\n      api.deleteServiceDocument(delId).then(() => {\n        api.deleteFile(delId);\n      });\n    });\n    if (createDocId.length > 0)\n      await api.createServiceDocument({ ...serviceDocCreateValue, serviceId: createdServiceId });\n  };\n\n  const handleService = async (\n    value: string | number | string[] | number[] | null,\n    formikProps: FormikProps<InitialValue>\n  ) => {\n    await api.getServiceCode(String(value)).then((res) => {\n      if (value !== null && value !== '') {\n        formikProps.setFieldValue(\n          'serviceCode',\n          res.data.length > 0\n            ? padId(\n                Math.max.apply(\n                  '',\n                  res.data.map((s) => Number(s.serviceCode))\n                ) + 1,\n                String(value).length + 1\n              )\n            : `${String(value)}1`\n        );\n        formikProps.setFieldValue(\n          'serviceName',\n          `${\n            (formikProps.values.serviceStartDate !== '' && formikProps.values.serviceStartDate !== null) ||\n            (formikProps.values.serviceEndDate !== '' && formikProps.values.serviceEndDate !== null)\n              ? projectOptions.filter((p) => p.value === value)[0].label.slice(9)\n              : ''\n          }${getPartOfName(formikProps.values.serviceStartDate, formikProps.values.serviceEndDate)}`\n        );\n      } else {\n        formikProps.setFieldValue('serviceCode', '');\n        formikProps.setFieldValue('serviceName', '');\n      }\n    });\n  };\n\n  const callDeleteService = (act: boolean, redirect: string) => {\n    if (act) {\n      api.deleteService(id).then(() => {\n        history.push(redirect, true);\n      });\n    }\n  };\n\n  return (\n    <AppLayout>\n      <Formik\n        initialValues={initialData}\n        validationSchema={SchemaValidation}\n        onSubmit={(values) => handleSubmit(values)}\n        enableReinitialize\n      >\n        {(formikProps: FormikProps<InitialValue>) => (\n          <Form className=\"form theme-form\">\n            <Breadcrumb\n              parent=\"受注システム\"\n              title=\"案件\"\n              bookmarkComponent={\n                id && (\n                  <div className=\"bookmark pull-right mr-4\">\n                    <Row>\n                      <DropdownButton className=\"mr-1\" title=\"見積登録\" variant=\"info\">\n                        <Dropdown.Item\n                          onClick={() => {\n                            history.push({\n                              pathname: ScreenUrl.ESTIMATE_CREATE,\n                              state: formikProps.values.serviceId,\n                            });\n                          }}\n                        >\n                          見積登録\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => {\n                            history.push({\n                              pathname: `${ScreenUrl.ORDER_CREATE}`,\n                              state: { id: formikProps.values.serviceId, from: 's0011' },\n                            });\n                          }}\n                        >\n                          受注登録\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={() => {\n                            history.push({\n                              pathname: `${ScreenUrl.INVOICE_CREATE}`,\n                              state: { id: formikProps.values.serviceId, from: 's0011' },\n                            });\n                          }}\n                        >\n                          請求登録\n                        </Dropdown.Item>\n                      </DropdownButton>\n                      <Button\n                        variant=\"info\"\n                        className=\"mr-1\"\n                        type=\"submit\"\n                        onClick={() => {\n                          history.push({\n                            pathname: ScreenUrl.SERVICE_CREATE,\n                            state: formikProps.values,\n                          });\n                        }}\n                      >\n                        <i className=\"icofont icofont-copy-alt\" />\n                      </Button>\n                      <Button\n                        variant=\"info\"\n                        className=\"mr-1\"\n                        onClick={() => {\n                          setConfirm(!confirm);\n                        }}\n                      >\n                        <i className=\"icofont icofont-trash\" />\n                      </Button>\n                    </Row>\n                  </div>\n                )\n              }\n            />\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <Card>\n                    <CardHeader>\n                      <h3>案件</h3>\n                      <Alert isOpen={savedAlert.value}>{savedAlert.message}</Alert>\n                      <Alert isOpen={copiedAlert.value}>{copiedAlert.message}</Alert>\n                      {confirm && (\n                        <ConfirmModal\n                          isOpen={confirm}\n                          modalProps={{\n                            modalTitle: '削除確認',\n                            message: '削除しますか?',\n                            yesTitle: 'はい',\n                            noTitle: 'いいえ',\n                            functionOnYes: () => callDeleteService(true, `${ScreenUrl.ORDER_MANAGEMENT}`),\n                          }}\n                        />\n                      )}\n                    </CardHeader>\n                    <CardBody>\n                      <Card style={{ boxShadow: 'none' }}>\n                        <CardBody>\n                          <Modal isOpen={modalProject} toggle={toggleProject}>\n                            <ModalHeader toggle={toggleProject}>新しいプロジェクトを追加する</ModalHeader>\n                            <ModalBody>\n                              <form>\n                                <div className=\"form-group\">\n                                  <label className=\"col-form-label required\">プロジェクトコード</label>\n                                  <Input className=\"form-control\" type=\"text\" name=\"projectCode\" />\n                                </div>\n                                <div className=\"form-group\">\n                                  <label className=\"col-form-label required\">プロジェクト名</label>\n                                  <Input className=\"form-control\" type=\"text\" name=\"projectName\" />\n                                </div>\n                              </form>\n                            </ModalBody>\n                            <ModalFooter>\n                              <Button\n                                variant=\"info\"\n                                type=\"submit\"\n                                onClick={() => {\n                                  handleCreateProject(formikProps);\n                                }}\n                              >\n                                保存\n                              </Button>\n                              <Button color=\"light\" onClick={toggleProject}>\n                                キャンセル\n                              </Button>\n                            </ModalFooter>\n                          </Modal>\n                          {modalClient && (\n                            <CreateClient\n                              formikProps={formikProps}\n                              initClientCode={formikProps.values.clientCode}\n                              clientOptions={clientOptions}\n                              isOpen={modalClient}\n                            />\n                          )}\n                          {modalConfirm && (\n                            <SetClientEmployee\n                              formikProps={formikProps}\n                              dataProps={clientEmployeeData}\n                              isOpen={modalConfirm}\n                            />\n                          )}\n                          <div className=\"form-group\">\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-3 col-sm-5 pr-0 pl-0 required\"\n                                  style={{ justifyContent: 'left' }}\n                                >\n                                  プロジェクト\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  {id ? (\n                                    `${formikProps.values.projectCode} ${formikProps.values.projectName}`\n                                  ) : (\n                                    <CustomSelect\n                                      name=\"projectCode\"\n                                      options={projectOptions}\n                                      onChange={(value) => {\n                                        handleService(value, formikProps).then();\n                                      }}\n                                      isClearable\n                                    />\n                                  )}\n                                </div>\n                                {!id && (\n                                  <i\n                                    className=\"pointer icofont icofont-ui-add\"\n                                    onClick={() => {\n                                      formikProps.setFieldValue(\n                                        'projectCode',\n                                        padId(\n                                          projectOptions.slice(-1)[0]?.value\n                                            ? Number(projectOptions.slice(-1)[0].value) + 1\n                                            : 1\n                                        )\n                                      );\n                                      formikProps.setFieldValue('projectName', '');\n                                      toggleProject();\n                                    }}\n                                  />\n                                )}\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-3 col-sm-5 pr-0 pl-0 required\"\n                                  style={{ justifyContent: 'left' }}\n                                >\n                                  期間\n                                </label>\n                                <div className=\"col-lg-4 col-sm-7 \">\n                                  <Input\n                                    className=\"w-100\"\n                                    type=\"date\"\n                                    name=\"serviceStartDate\"\n                                    onValueChange={(value) => {\n                                      if (\n                                        (value || formikProps.values.serviceEndDate) &&\n                                        formikProps.values.projectCode\n                                      ) {\n                                        formikProps.setFieldValue(\n                                          'serviceName',\n                                          `${projectOptions\n                                            .filter((p) => p.value === formikProps.values.projectCode)[0]\n                                            .label.slice(9)}${getPartOfName(\n                                            String(value),\n                                            formikProps.values.serviceEndDate ? formikProps.values.serviceEndDate : ''\n                                          )}`\n                                        );\n                                      } else {\n                                        formikProps.setFieldValue('serviceName', '');\n                                      }\n                                    }}\n                                  />\n                                </div>\n                                <span>~</span>\n                                <div className=\"col-lg-4 col-sm-7 w-100\">\n                                  <Input\n                                    className=\"w-100\"\n                                    type=\"date\"\n                                    name=\"serviceEndDate\"\n                                    onValueChange={(value) => {\n                                      if (\n                                        (value || formikProps.values.serviceStartDate) &&\n                                        formikProps.values.projectCode\n                                      ) {\n                                        formikProps.setFieldValue(\n                                          'serviceName',\n                                          `${projectOptions\n                                            .filter((p) => p.value === formikProps.values.projectCode)[0]\n                                            .label.slice(9)}${getPartOfName(\n                                            formikProps.values.serviceStartDate\n                                              ? formikProps.values.serviceStartDate\n                                              : '',\n                                            String(value)\n                                          )}`\n                                        );\n                                      } else {\n                                        formikProps.setFieldValue('serviceName', '');\n                                      }\n                                    }}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-3 col-sm-5 pr-0 pl-0 required\"\n                                  style={{ justifyContent: 'left' }}\n                                >\n                                  案件番号\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"serviceCode\"\n                                    style={{ width: '100%' }}\n                                  />\n                                </div>\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-3 col-sm-5 pr-0 pl-0 required\"\n                                  style={{ justifyContent: 'left' }}\n                                >\n                                  案件名\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"serviceName\"\n                                    style={{ width: '100%' }}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-3 col-sm-5 pr-0 pl-0 required\"\n                                  style={{ justifyContent: 'left' }}\n                                >\n                                  クライアント\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <CustomSelect name=\"clientCode\" options={clientOptions} isClearable />\n                                </div>\n                                <i\n                                  className=\"pointer icofont icofont-ui-add\"\n                                  onClick={() => {\n                                    formikProps.setFieldValue(\n                                      'clientCode',\n                                      padId(\n                                        clientOptions.slice(-1)[0]?.value\n                                          ? Number(clientOptions.slice(-1)[0].value) + 1\n                                          : 1,\n                                        12\n                                      )\n                                    );\n                                    toggleClient();\n                                  }}\n                                />\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\" />\n                            </Row>\n                          </div>\n                        </CardBody>\n                      </Card>\n                      <Card style={{ boxShadow: 'none' }}>\n                        <CardHeader\n                          className=\"card-header\"\n                          style={{\n                            padding: '7px',\n                            backgroundColor: '#ddd',\n                            marginBottom: '0px',\n                            borderTopLeftRadius: 0,\n                            borderTopRightRadius: 0,\n                          }}\n                        >\n                          <h6 style={{ marginBottom: '0px' }}>担当者</h6>\n                        </CardHeader>\n                        <CardBody style={{ padding: '9px 30px' }}>\n                          <div className=\"form-group\">\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-3 col-sm-5 pr-0 pl-0 required\"\n                                  style={{ justifyContent: 'left' }}\n                                >\n                                  担当者（社内）\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <CustomSelect name=\"employeeCode\" options={employeesOptions} />\n                                </div>\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\" />\n                            </Row>\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <Button\n                                  type=\"button\"\n                                  onClick={() => referClientEmployee(formikProps.values.clientCode)}\n                                  disabled={!formikProps.values.clientCode}\n                                >\n                                  クライアント情報\n                                </Button>\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\" />\n                            </Row>\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label className=\"col-lg-3 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                                  クライアント担当者\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"clientEmployeeName\"\n                                    style={{ width: '100%' }}\n                                    disabled\n                                  />\n                                </div>\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label className=\"col-lg-3 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                                  クライアント部署名\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"departmentName\"\n                                    style={{ width: '100%' }}\n                                    disabled\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label className=\"col-lg-3 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                                  クライアント\n                                  <br />\n                                  電話番号\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"phoneNumber\"\n                                    style={{ width: '100%' }}\n                                    disabled\n                                  />\n                                </div>\n                              </Col>\n                              <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                                <label className=\"col-lg-3 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                                  クライアント\n                                  <br />\n                                  メールアドレス\n                                </label>\n                                <div className=\"col-lg-8 pr-1\">\n                                  <Input\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"email\"\n                                    style={{ width: '100%' }}\n                                    disabled\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                          </div>\n                        </CardBody>\n                      </Card>\n                      <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                        <CardHeader\n                          className=\"card-header\"\n                          style={{\n                            padding: '7px',\n                            backgroundColor: '#ddd',\n                            borderTopLeftRadius: 0,\n                            borderTopRightRadius: 0,\n                          }}\n                        >\n                          <h6 style={{ marginBottom: '0px' }}>書類等</h6>\n                        </CardHeader>\n                        <CardBody>\n                          <div className=\"form-group\">\n                            <FieldArray name=\"documents\">\n                              {(arrayHelper) => (\n                                <>\n                                  {formikProps.values?.documents\n                                    ? formikProps.values.documents?.map((document, index) => (\n                                        <Row key={`serviceDocument-${index + 1}`}>\n                                          <Col className=\"form-group \">\n                                            <DocumentUploader\n                                              name={`documents[${index}].documentId`}\n                                              documentName={\n                                                document.documentSaveName\n                                                  ? document.documentSaveName\n                                                  : document.documentName\n                                              }\n                                              documentId={document.documentId}\n                                              filePath={document.filePath}\n                                              filesInfo={document.filesInfo}\n                                              deleteDoc\n                                              onSelect={(files: File) => {\n                                                arrayHelper.replace(index, {\n                                                  ...document,\n                                                  filesInfo: files,\n                                                  documentName: files.name,\n                                                });\n                                              }}\n                                              onUpload={(\n                                                resDocId: number,\n                                                resFilePath: string,\n                                                resDocumentSaveName: string\n                                              ) => {\n                                                arrayHelper.replace(index, {\n                                                  ...document,\n                                                  documentId: resDocId,\n                                                  filePath: resFilePath,\n                                                  documentName: resDocumentSaveName || document.documentName,\n                                                });\n                                                arrayHelper.insert(index + 1, blankDocumentInfo);\n                                              }}\n                                              onDelete={(delId) => {\n                                                arrayHelper.remove(index);\n                                                if (delId) {\n                                                  delDocId.push(delId);\n                                                }\n                                              }}\n                                              update={!!id}\n                                              prevDoc={preDocId}\n                                            />\n                                          </Col>\n                                        </Row>\n                                      ))\n                                    : ''}\n                                </>\n                              )}\n                            </FieldArray>\n                            <Row>\n                              <Col className=\"form-group form-inline col-lg-group col-lg-8 pr-0 pl-0\">\n                                <label\n                                  className=\"col-lg-1 col-sm-5 pr-0 pl-0\"\n                                  style={{ justifyContent: 'left', alignSelf: 'start' }}\n                                >\n                                  メモ\n                                </label>\n                                <div className=\"col-lg-11\">\n                                  <Textarea\n                                    className=\"form-control \"\n                                    type=\"text\"\n                                    name=\"description\"\n                                    style={{ width: '100%' }}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                          </div>\n                        </CardBody>\n                        <CardFooter />\n                      </Card>\n                      <div className=\"bookmark pull-right\">\n                        <DropdownButton style={{ float: 'right' }} title=\"保存\" variant=\"info\">\n                          <Dropdown.Item\n                            onClick={() => {\n                              formikProps.submitForm().then(() => {\n                                setTimeout(() => {\n                                  history.push(`${ScreenUrl.ORDER_MANAGEMENT}`);\n                                }, 3000);\n                              });\n                            }}\n                          >\n                            保存\n                          </Dropdown.Item>\n                          <Dropdown.Item\n                            onClick={() => {\n                              formikProps.submitForm().then(() => {\n                                setTimeout(() => {\n                                  history.push({\n                                    pathname: ScreenUrl.ESTIMATE_CREATE,\n                                    state: Number(createdServiceId),\n                                  });\n                                }, 3000);\n                              });\n                            }}\n                          >\n                            保存＆見積登録\n                          </Dropdown.Item>\n                          <Dropdown.Item\n                            onClick={() => {\n                              formikProps.submitForm().then(() => {\n                                setTimeout(() => {\n                                  history.push({\n                                    pathname: ScreenUrl.ORDER_CREATE,\n                                    state: { id: createdServiceId, from: 's0011' },\n                                  });\n                                }, 3000);\n                              });\n                            }}\n                          >\n                            保存＆受注登録\n                          </Dropdown.Item>\n                          <Dropdown.Item\n                            onClick={() => {\n                              formikProps.submitForm().then(() => {\n                                setTimeout(() => {\n                                  history.push({\n                                    pathname: ScreenUrl.INVOICE_CREATE,\n                                    state: { id: createdServiceId, from: 's0011' },\n                                  });\n                                }, 3000);\n                              });\n                            }}\n                          >\n                            保存＆請求登録\n                          </Dropdown.Item>\n                        </DropdownButton>\n                      </div>\n                    </CardBody>\n                  </Card>\n                </div>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </AppLayout>\n  );\n};\nexport default Service;\n","import React, { useState } from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nconst CustomSidebar = (props: any) => {\n  const [openFlg, setOpenFlg] = useState(false);\n  const customSidebar = props;\n  const containClass = ['customizer-contain'];\n  const linkClass = ['customizer-links'];\n  if (openFlg) {\n    containClass.push('open');\n    linkClass.push('open');\n  } else {\n    containClass.slice(-1, 1);\n    linkClass.slice(-1, 1);\n  }\n\n  return (\n    <>\n      <div className={linkClass.join(' ')}>\n        <div className=\"nav flex-column nac-pills\" aria-orientation=\"vertical\">\n          <Nav tabs className=\"tab-list-bottom border-tab-primary\">\n            <NavItem className=\"nav nav-tabs\">\n              <NavLink>\n                <div className=\"settings\">\n                  <i className=\"icon-link\" onClick={() => setOpenFlg(!openFlg)} />\n                </div>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </div>\n      </div>\n      <div className={containClass.join(' ')}>\n        <div className=\"tab-content\">\n          <div className=\"customizer-header\">\n            <i className=\"icon-close\" onClick={() => setOpenFlg(!openFlg)} />\n          </div>\n          <div className=\"customizer-body custom-scrollbar\">{customSidebar.element}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CustomSidebar;\n","import { Button, Card, CardBody, CardFooter, CardHeader, Col, Modal, Row } from 'reactstrap';\nimport React, { useEffect, useState } from 'react';\nimport { Form, Formik, FormikProps } from 'formik';\nimport { CustomSelect, Input } from '../common/form-helper';\nimport { EmployeeAttributes, RoleAttributes } from '../../api';\nimport api from '../../utils/api_client';\n\ninterface FormProps {\n  parentFormikProps: FormikProps<any>;\n  currentIndex: number;\n  dataProps: string | undefined;\n  isOpen: boolean;\n  memberOptions: { value: string; label: string }[];\n}\ninterface CreateProps extends EmployeeAttributes {\n  roleId: number;\n  roleName: string;\n}\n\nconst CreateEmployee: React.FC<FormProps> = ({ dataProps, isOpen, memberOptions, parentFormikProps, currentIndex }) => {\n  const [isOpened, setIsOpened] = useState(false);\n  const [createRole, setCreateRole] = useState(false);\n  const [roleOptions, setRoleOptions] = useState<{ value: number; label: string }[]>([]);\n\n  const initData: CreateProps = {\n    employeeCode: dataProps || '',\n    employeeName: '',\n    departmentName: '',\n    email: '',\n    postalCode: '',\n    phoneNumber: '',\n    roleId: 1,\n    roleName: '',\n  };\n\n  useEffect(() => {\n    api.roleGetAll().then((res) => {\n      const roleList = res.data.map((role) => ({\n        value: role.roleId,\n        label: role.roleName,\n      }));\n      setRoleOptions(roleList);\n    });\n    setIsOpened(isOpen);\n  }, []);\n\n  const toggleConfirm = () => {\n    setIsOpened(!isOpened);\n  };\n\n  const toggleRole = () => {\n    setCreateRole(!createRole);\n  };\n\n  const handleSave = (value: CreateProps) => {\n    if (createRole) {\n      const createRoleValue: RoleAttributes = { roleId: value.roleId, roleName: value.roleName };\n      api\n        .rolePost(createRoleValue)\n        .then(() => {\n          roleOptions.push({\n            value: value.roleId,\n            label: value.roleName,\n          });\n          toggleRole();\n        })\n        .catch(() => toggleRole());\n    } else {\n      const createEmployeeValue = {\n        employeeCode: value.employeeCode,\n        employeeName: value.employeeName,\n        departmentName: value.departmentName,\n        email: value.email,\n        postalCode: value.postalCode,\n        phoneNumber: value.phoneNumber,\n        roleId: value.roleId,\n      };\n      api\n        .createEmployee(createEmployeeValue)\n        .then(() => {\n          memberOptions.push({\n            value: value.employeeCode,\n            label: value.employeeName,\n          });\n          parentFormikProps.setFieldValue(`details[${currentIndex}].memberCode`, memberOptions.slice(-1)[0].value);\n          parentFormikProps.setFieldValue(`details[${currentIndex}].memberName`, memberOptions.slice(-1)[0].label);\n          toggleConfirm();\n        })\n        .catch(() => toggleConfirm());\n    }\n  };\n  return (\n    <>\n      <Modal isOpen={isOpened} toggle={toggleConfirm} size=\"lg\">\n        <Formik initialValues={initData} onSubmit={(value) => handleSave(value)}>\n          {(formikProps) => (\n            <Form>\n              {createRole ? (\n                <Card>\n                  <CardHeader>\n                    <h3>役割登録</h3>\n                  </CardHeader>\n                  <CardBody>\n                    <Row className=\"form-group\">\n                      <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                        <label className=\"col-lg-4 col-sm-5 pr-0 pl-0 required\" style={{ justifyContent: 'left' }}>\n                          役割ID\n                        </label>\n                        <div className=\"col-lg-8 pr-1\">\n                          <Input className=\"form-control\" type=\"text\" name=\"roleId\" />\n                        </div>\n                      </Col>\n                      <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                        <label className=\"col-lg-4 col-sm-5 pr-0 pl-0 required\" style={{ justifyContent: 'left' }}>\n                          役割名\n                        </label>\n                        <div className=\"col-lg-8 pr-1\">\n                          <Input className=\"form-control\" type=\"text\" name=\"roleName\" />\n                        </div>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                  <CardFooter>\n                    <div className=\"pull-right\">\n                      <Button\n                        className=\"mr-3\"\n                        variant=\"info\"\n                        type=\"submit\"\n                        onClick={() =>\n                          formikProps.setFieldValue(\n                            'roleId',\n                            roleOptions.slice(-1)[0]?.value ? Number(roleOptions.slice(-1)[0].value) + 1 : 1\n                          )\n                        }\n                      >\n                        保存\n                      </Button>\n                      <Button color=\"light\" onClick={toggleRole}>\n                        キャンセル\n                      </Button>\n                    </div>\n                  </CardFooter>\n                </Card>\n              ) : (\n                <Card>\n                  <CardHeader>\n                    <h3>メンバー登録</h3>\n                  </CardHeader>\n                  <CardBody>\n                    <>\n                      <div className=\"form-group\">\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\" />\n                          <Col className=\"form-group form-inline col-lg-group pr-1 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              役割\n                            </label>\n                            <div className=\"col-lg-8 pr-3\">\n                              <Row>\n                                <div style={{ width: '90%' }} className=\"pl-3 pr-1\">\n                                  <CustomSelect name=\"roleId\" options={roleOptions} />\n                                </div>\n                                <i\n                                  style={{ width: '10%' }}\n                                  className=\"pointer icofont icofont-ui-add pl-1 mt-2 pt-1\"\n                                  onClick={() => {\n                                    formikProps.setFieldValue(\n                                      'roleId',\n                                      roleOptions.slice(-1)[0]?.value\n                                        ? String(Number(roleOptions.slice(-1)[0].value) + 1)\n                                        : '1'\n                                    );\n                                    toggleRole();\n                                  }}\n                                />\n                              </Row>\n                            </div>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0 required\" style={{ justifyContent: 'left' }}>\n                              メンバーコード\n                            </label>\n                            <div className=\"col-lg-8 pr-4\">\n                              <Input style={{ width: '95%' }} type=\"text\" name=\"employeeCode\" />\n                            </div>\n                          </Col>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0 required\" style={{ justifyContent: 'left' }}>\n                              メンバー名\n                            </label>\n                            <div className=\"col-lg-8 pr-4\">\n                              <Input style={{ width: '95%' }} type=\"text\" name=\"employeeName\" />\n                            </div>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              部署名\n                            </label>\n                            <div className=\"col-lg-8 pr-4\">\n                              <Input style={{ width: '95%' }} type=\"text\" name=\"departmentName\" />\n                            </div>\n                          </Col>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              メールアドレス\n                            </label>\n                            <div className=\"col-lg-8 pr-4\">\n                              <Input style={{ width: '95%' }} type=\"text\" name=\"email\" />\n                            </div>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              郵便番号\n                            </label>\n                            <div className=\"col-lg-8 pr-4\">\n                              <Input style={{ width: '95%' }} type=\"text\" name=\"postalCode\" />\n                            </div>\n                          </Col>\n                          <Col className=\"form-group form-inline col-lg-group pr-0 pl-0\">\n                            <label className=\"col-lg-4 col-sm-5 pr-0 pl-0\" style={{ justifyContent: 'left' }}>\n                              電話番号\n                            </label>\n                            <div className=\"col-lg-8 pr-4\">\n                              <Input style={{ width: '95%' }} type=\"text\" name=\"phoneNumber\" />\n                            </div>\n                          </Col>\n                        </Row>\n                      </div>\n                    </>\n                  </CardBody>\n                  <CardFooter>\n                    <Row>\n                      <div className=\"col align-self-start\" />\n                      <div>\n                        <Button variant=\"info\" type=\"submit\">\n                          登録\n                        </Button>\n                      </div>\n                      <div className=\"col align-self-end\" />\n                    </Row>\n                  </CardFooter>\n                </Card>\n              )}\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CreateEmployee;\n","import React from 'react';\nimport { formatPrice } from './formatter/formatter';\nimport { REMARKS_MAP } from '../../constant/commonConstant';\n\nexport interface OptionsType {\n  value: string;\n  label: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const columns = (membersOptions: OptionsType[]) => [\n  {\n    name: '詳細',\n    selector: 'note',\n    sortable: true,\n    minWidth: '20%',\n    cell: (row: { note: string; remarks: string; person: string }) => (\n      <span>\n        {row.remarks === '4' ? membersOptions.filter((item) => item.value === row.person)[0]?.label : row.note}\n      </span>\n    ),\n  },\n  {\n    name: '数量',\n    selector: 'quantity',\n    sortable: true,\n    right: true,\n    minWidth: '10%',\n    cell: (row: { quantity: number }) => <span>{row.quantity ? row.quantity : ''}</span>,\n  },\n  {\n    name: '単位',\n    selector: 'unit',\n    sortable: true,\n    minWidth: '10%',\n    cell: (row: { unit: string }) => <span>{row.unit}</span>,\n  },\n  {\n    name: '単価',\n    selector: 'unitPrice',\n    sortable: true,\n    minWidth: '10%',\n    cell: (row: { unitPrice: string }) => <span>{row.unitPrice}</span>,\n  },\n  {\n    name: '金額',\n    selector: 'price',\n    sortable: true,\n    right: true,\n    minWidth: '15%',\n    cell: (row: { price: number; quantity: number; unitPrice: number; remarks: string }) => (\n      <span style={{ color: row.remarks === '1' ? 'red' : undefined }}>\n        {row.remarks === '1' && '－ '}\n        {/* eslint-disable-next-line no-nested-ternary */}\n        {row.quantity && row.unitPrice ? formatPrice(row.quantity * row.unitPrice) : ''}\n      </span>\n    ),\n  },\n  {\n    name: '行の種類',\n    selector: 'remarks',\n    sortable: true,\n    minWidth: '20%',\n    cell: (row: { remarks: string }) => <span>{REMARKS_MAP[row.remarks]}</span>,\n  },\n  {\n    name: '',\n    minWidth: '4%',\n  },\n];\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, CardBody, CardHeader, Button, CardFooter, Alert } from 'reactstrap';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { FieldArray, Form, Formik, FormikProps } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Breadcrumb from '../components/common/breadcrumb';\nimport AppLayout from '../components/common/layout';\nimport DataTable from '../components/common/datatable/data-table';\nimport { formatDate, formatPrice, padId } from '../components/common/formatter/formatter';\nimport { CustomSelect, Input } from '../components/common/form-helper';\nimport DocumentUploader from '../components/common/document-uploader';\nimport { ScreenUrl, remarksOptions, STATUS_MAP, Status, Remark } from '../constant/commonConstant';\nimport CustomSidebar from '../components/common/custom-sidebar';\nimport api from '../utils/api_client';\nimport CreateEmployee from '../components/employee-process/create-employee';\nimport {\n  DocumentAttributes,\n  EstimateCreateAttributes,\n  EstimateUpdateAttributes,\n  EstimateDocumentAttributes,\n} from '../api';\nimport { columns, OptionsType } from '../components/common/detail-form-common';\nimport ConfirmModal from '../components/common/confirm-modal';\n\ninterface Detail {\n  createdAt?: string;\n  estimateId?: number;\n  estimateDetailId?: number;\n  updatedAt?: string;\n  person?: string;\n  note: string;\n  quantity?: number;\n  unit?: string;\n  unitPrice?: number;\n  price?: number;\n  remarks: string;\n  newFlg?: boolean;\n}\ninterface InitValues {\n  estimateId: number;\n  estimateDate: string;\n  details: Detail[];\n  documents: estimateDocument[];\n  projectCode: string;\n  projectName: string;\n  serviceId: number;\n  serviceCode: string;\n  serviceName: string;\n  clientCode: string;\n  clientName: string;\n  serviceStartDate: string;\n  serviceEndDate: string;\n  estimateCode: string;\n  status: string;\n}\nconst tableData: Detail[] = [];\n\nconst blankDetail: Detail = {\n  person: '',\n  note: '',\n  quantity: 0,\n  unit: '',\n  unitPrice: 0,\n  price: 0,\n  remarks: '',\n  newFlg: false,\n};\n\nconst newDetail: Detail = {\n  person: '',\n  note: '',\n  quantity: 0,\n  unit: '',\n  unitPrice: 0,\n  price: 0,\n  remarks: '',\n  newFlg: true,\n};\n\nconst initialDnDState = {\n  draggedFrom: -1,\n  draggedTo: -1,\n  isDragging: false,\n  originalOrder: tableData,\n  updatedOrder: tableData,\n};\n\ninterface linkScreen {\n  name: string;\n  link: string;\n  data: { id: number; code: string; status: string }[];\n}\n\nexport const blankDocumentInfo: estimateDocument = {\n  documentId: 0,\n  documentName: '',\n  filePath: '',\n  documentSaveName: '',\n};\n\nexport interface estimateDocument extends DocumentAttributes {\n  filesInfo?: File;\n}\n\nconst SchemaValidation = Yup.object().shape({\n  estimateCode: Yup.string().nullable().required().length(12),\n  estimateDate: Yup.string().nullable().required(),\n});\n\nconst draftSchemaValidation = Yup.object().shape({\n  estimateCode: Yup.string().nullable().required().length(12),\n});\n\nconst Estimate: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(Status.CREATING);\n  const [schema, setSchema] = useState(draftSchemaValidation);\n  const [editFlag, setEditFlag] = useState(false);\n  const [membersOptions, setMembersOptions] = useState<OptionsType[]>([]);\n  const [modalMember, setModalMember] = useState(false);\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\n  const [createConfirm, setCreateConfirm] = useState(false);\n  const [orderConfirm, setOrderConfirm] = useState(false);\n  const [submit, setSubmit] = useState<boolean | undefined>(undefined);\n  const [noScroll, setNoScroll] = useState(false);\n  const [savedAlert, setSavedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [copiedAlert, setCopiedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [documents, setDocuments] = useState<estimateDocument[]>([{ ...blankDocumentInfo }]);\n  const [prevDocuments, setPrevDocuments] = useState<estimateDocument[]>([blankDocumentInfo]);\n  const [preDocId, setPreDocId] = useState<number[]>([]);\n  const [delDocId, setDelDocID] = useState<number[]>([]);\n  const [disableFlag, setDisableFlag] = useState(false);\n  const [copyFlag, setCopyFlag] = useState(false);\n  const toggleMember = () => {\n    setModalMember(!modalMember);\n  };\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\n  const classNames = ['table-body row d-flex align-items-stretch'];\n  const [deleteDetails, setDeleteDetails] = useState<number[]>([]);\n  const [initFindData, setInitFindData] = useState<InitValues>({\n    estimateId: 0,\n    estimateDate: '',\n    details: [{ ...blankDetail }],\n    serviceStartDate: '',\n    serviceEndDate: '',\n    documents: [{ ...blankDocumentInfo }],\n    projectCode: '',\n    projectName: '',\n    serviceId: 0,\n    serviceCode: '',\n    serviceName: '',\n    clientCode: '',\n    clientName: '',\n    estimateCode: '',\n    status: '',\n  });\n  const [linkData, setLinkData] = useState<linkScreen[]>([]);\n\n  const onDragStart = (event: { currentTarget: { dataset: { position: number } } }, value: Detail[]) => {\n    const initialPosition = Number(event.currentTarget.dataset.position);\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: initialPosition,\n      isDragging: true,\n      originalOrder: value,\n    });\n  };\n\n  const onDragOver = (event: React.DragEvent<HTMLDivElement>, formikProps: FormikProps<InitValues>) => {\n    event.preventDefault();\n\n    let newList = dragAndDrop.originalOrder;\n\n    const { draggedFrom } = dragAndDrop;\n\n    const draggedTo = Number(event.currentTarget.dataset.position);\n\n    const itemDragged = newList[draggedFrom];\n    const remainingItems = newList.filter((item, index) => index !== draggedFrom);\n\n    newList = [...remainingItems.slice(0, draggedTo), itemDragged, ...remainingItems.slice(draggedTo)];\n\n    if (draggedTo !== dragAndDrop.draggedTo) {\n      const updateDetailIdData: Detail[] = [];\n      newList.forEach((n, i) => {\n        updateDetailIdData.push({ ...newList[i], estimateDetailId: formikProps.values.details[i].estimateDetailId });\n      });\n      setDragAndDrop({\n        ...dragAndDrop,\n        updatedOrder: updateDetailIdData,\n        draggedTo,\n      });\n    }\n  };\n\n  const onDrop = (formikProps: FormikProps<InitValues>) => {\n    formikProps.setFieldValue('details', [...dragAndDrop.updatedOrder]);\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: -1,\n      draggedTo: -1,\n      isDragging: false,\n    });\n  };\n\n  const onDragLeave = () => {\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedTo: 0,\n    });\n  };\n\n  const handleSubmit = (values: InitValues) => {\n    const submitDetails: React.SetStateAction<any[]> = [];\n    const prevArrDocId: number[] = prevDocuments\n      ? prevDocuments.map((doc: estimateDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const arrDocId: number[] = values.documents\n      ? values.documents.map((doc: estimateDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const createDocId: number[] = [];\n    arrDocId.forEach((val) => {\n      if (prevArrDocId.indexOf(val) <= -1) createDocId.push(val);\n    });\n    const estimateDocCreateValue: EstimateDocumentAttributes = {\n      estimateId: values.estimateId,\n      documents: !copyFlag ? createDocId : arrDocId,\n    };\n    const setInitMsg = () => {\n      setTimeout(() => {\n        setSavedAlert({ value: false, message: '' });\n        setCreateConfirm(false);\n        setSubmit(false);\n      }, 3000);\n    };\n    const setMessage = (statusValue: string) => {\n      if (statusValue === Status.ESTIMATED) {\n        setSavedAlert({ value: true, message: '発行しました' });\n        setInitMsg();\n      } else if (statusValue === Status.CREATING || statusValue === Status.ESTIMATE_CHANGED) {\n        setSavedAlert({ value: true, message: '保存しました' });\n        setInitMsg();\n      }\n      setStatus(statusValue);\n    };\n\n    if (!id) {\n      if (values.status === Status.ESTIMATED) {\n        setCreateConfirm(true);\n      }\n      values.details.forEach((item, i: number) =>\n        submitDetails.push({\n          index: i + 1,\n          // estimateId: values.estimateId,\n          note: item.person ? item.person : item.note,\n          person: item.person ? item.person : null,\n          quantity: item.quantity ? item.quantity : null,\n          unit: item.unit ? item.unit : null,\n          unitPrice: item.unitPrice ? item.unitPrice : null,\n          price:\n            // eslint-disable-next-line no-nested-ternary\n            item.quantity && item.unitPrice\n              ? item.remarks === Remark.DISCOUNT\n                ? -Math.abs(item.quantity * item.unitPrice)\n                : item.quantity * item.unitPrice\n              : null,\n          remarks: item.remarks,\n        })\n      );\n      const createValue: EstimateCreateAttributes = {\n        serviceId: values.serviceId,\n        estimateCode: values.estimateCode.trim(),\n        status: values.status,\n        estimateDate: values.estimateDate,\n        details: submitDetails,\n      };\n      if (submit) {\n        api.estimatePost(createValue).then((estimate) => {\n          const { estimateId } = estimate.data as any;\n          delDocId.forEach((delId) => {\n            api.deleteFile(delId);\n          });\n          if (estimateDocCreateValue.documents.length > 0) {\n            api.createEstimateDocument({ ...estimateDocCreateValue, estimateId }).then(() => {\n              setMessage(String(createValue.status));\n            });\n          } else {\n            setMessage(String(createValue.status));\n          }\n          setCopiedAlert({ value: false, message: '' });\n          history.push({\n            pathname: `${ScreenUrl.ESTIMATE_UPDATE}${estimateId}`,\n          });\n        });\n      }\n    } else {\n      if (values.status === Status.ESTIMATED) {\n        setCreateConfirm(true);\n      }\n      values.details.forEach((item, i: number) =>\n        submitDetails.push({\n          estimateDetailId: item.estimateDetailId ? item.estimateDetailId : null,\n          index: i + 1,\n          estimateId: values.estimateId,\n          note: item.person ? item.person : item.note,\n          person: item.person ? item.person : null,\n          quantity: item.quantity ? item.quantity : null,\n          unit: item.unit ? item.unit : null,\n          unitPrice: item.unitPrice ? item.unitPrice : null,\n          price:\n            // eslint-disable-next-line no-nested-ternary\n            item.quantity && item.unitPrice\n              ? item.remarks === Remark.DISCOUNT\n                ? -Math.abs(item.quantity * item.unitPrice)\n                : item.quantity * item.unitPrice\n              : null,\n          remarks: item.remarks,\n        })\n      );\n      const updateValue: EstimateUpdateAttributes = {\n        serviceId: values.serviceId,\n        estimateCode: values.estimateCode.trim(),\n        status: values.status,\n        estimateDate: formatDate(values.estimateDate, 'yyyy-MM-dd'),\n        details: submitDetails,\n        orderFlg: disableFlag,\n        deleteFlg: false,\n        deleteDetails,\n      };\n      if (submit) {\n        api.estimateUpdate(values.estimateId, updateValue).then(() => {\n          if (delDocId.length > 0) {\n            delDocId.forEach((delId) => {\n              api.deleteEstimateDocument(delId, values.estimateId).then(() => {\n                if (estimateDocCreateValue.documents.length > 0) {\n                  api\n                    .createEstimateDocument({ ...estimateDocCreateValue, estimateId: values.estimateId })\n                    .then(() => setMessage(String(updateValue.status)));\n                } else {\n                  setMessage(String(updateValue.status));\n                }\n              });\n            });\n          } else if (estimateDocCreateValue.documents.length > 0) {\n            api\n              .createEstimateDocument({ ...estimateDocCreateValue, estimateId: values.estimateId })\n              .then(() => setMessage(String(updateValue.status)));\n          } else {\n            setMessage(String(updateValue.status));\n          }\n        });\n      }\n      history.push(location.pathname);\n    }\n  };\n\n  const [detailFlg, setDetailFlg] = useState(false);\n\n  const fetchData = async () => {\n    api.employeeGetAll().then((res) => {\n      const memberList = res.data.map((member: { employeeCode: string; employeeName: string }) => ({\n        value: member.employeeCode,\n        label: member.employeeName,\n      }));\n      setMembersOptions(memberList);\n    });\n    if ((location.state !== undefined && location.state !== '' && typeof location.state === 'object') || id) {\n      setEditFlag(true);\n    }\n\n    if (id) {\n      api.getEstimateById(id).then((res) => {\n        const data = res.data as any;\n        setDisableFlag(data.orderFlg === true);\n        if (data.linkData) {\n          const invoices: { id: number; code: string; status: string }[] = [];\n          if (data.linkData.Invoices.length > 0) {\n            data.linkData.Invoices.forEach((i: { invoiceId: number; invoiceCode: string; invoiceStatus: string }) => {\n              if (i.invoiceStatus.trim() !== '')\n                invoices.push({ id: i.invoiceId, code: i.invoiceCode, status: i.invoiceStatus });\n            });\n          }\n          setLinkData([\n            {\n              name: '受注',\n              link: `${ScreenUrl.ORDER_UPDATE}`,\n              data:\n                data.linkData.orderStatus.trim() !== ''\n                  ? [{ id: data.linkData.orderId, code: data.linkData.orderCode, status: data.linkData.orderStatus }]\n                  : [],\n            },\n            {\n              name: '請求',\n              link: `${ScreenUrl.INVOICE_UPDATE}`,\n              data: invoices,\n            },\n          ]);\n        }\n        setInitFindData({\n          ...initFindData,\n          ...data,\n          estimateDate: formatDate(data.estimateDate, 'yyyy-MM-dd'),\n          details: data.details,\n        });\n        setStatus(data.status);\n      });\n      const documentRes = await api.getEstimateDocuments(id);\n      const documentData = [...documentRes.data, blankDocumentInfo];\n      setDocuments(documentData);\n      setPrevDocuments(documentData);\n      const prevArrDocId: number[] = documentData\n        ? documentData.map((doc: estimateDocument) => doc.documentId).filter(Boolean)\n        : [];\n      setPreDocId(prevArrDocId);\n    } else if (typeof location.state === 'number') {\n      setDetailFlg(true);\n      const serviceId = location.state;\n      api.getServiceById(serviceId).then((res) => {\n        const service = res.data as any;\n        setInitFindData({\n          ...initFindData,\n          ...service,\n          status: Status.CREATING,\n          estimateDate: '',\n          estimateCode: padId(service.serviceCode.trim(), 12),\n        });\n      });\n    } else if (typeof location.state === 'object') {\n      setCopyFlag(true);\n      setCopiedAlert({ value: true, message: 'コピーしました' });\n      setTimeout(() => {\n        setCopiedAlert({ value: false, message: '' });\n      }, 3000);\n      const copyValue = location.state as InitValues;\n      const oldEstimateId = (location.state as { estimateId: number }).estimateId;\n      const data: InitValues = {\n        ...copyValue,\n        status: Status.CREATING,\n        estimateCode: padId(Number(copyValue.estimateCode) + 1, 12),\n        estimateDate: formatDate(copyValue.estimateDate, 'yyyy-MM-dd'),\n      };\n\n      setEditFlag(false);\n      setDetailFlg(true);\n      setDisableFlag(false);\n      setStatus(Status.CREATING);\n      api.getEstimateDocuments(oldEstimateId).then((docs) => {\n        setDocuments([...docs.data, blankDocumentInfo]);\n      });\n\n      setInitFindData({\n        ...initFindData,\n        ...data,\n        estimateCode: data.estimateCode,\n        estimateDate: formatDate(data.estimateDate, 'yyyy-MM-dd'),\n        details: data.details,\n      });\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData().then();\n  }, [id, location.state, savedAlert.value]);\n  const initData =\n    id || documents.length > 1\n      ? { ...initFindData, documents }\n      : { ...initFindData, documents: [{ ...blankDocumentInfo }] };\n\n  const callDeleteEstimate = (act: boolean, redirect: string) => {\n    if (act) {\n      api.deleteEstimate(id).then(() => {\n        history.push(redirect, true);\n      });\n    }\n  };\n\n  return (\n    <AppLayout>\n      <Formik\n        initialValues={initData}\n        onSubmit={(values) => handleSubmit(values)}\n        validationSchema={schema}\n        validate={(values) => {\n          if (values.status !== Status.CREATING) {\n            setSchema(SchemaValidation);\n          } else setSchema(draftSchemaValidation);\n        }}\n        enableReinitialize\n      >\n        {(formikProps) => (\n          <Form>\n            {!noScroll && Object.keys(formikProps.errors).length > 0 && window.scrollTo(0, 0)}\n            {(linkData[0]?.data.length > 0 || linkData[1]?.data.length > 0) && (\n              <CustomSidebar\n                element={\n                  <>\n                    {linkData.map((item, index) => (\n                      <div\n                        key={`linkData-${linkData.length + index - linkData.length}`}\n                        className=\"mb-4\"\n                        style={{ borderBottom: '1px solid whitesmoke' }}\n                      >\n                        {linkData[index].data.length > 0 && (\n                          <>\n                            <h6>{item.name}</h6>\n                            {linkData[index].data.map((rowData, i) => (\n                              <div key={`details-${linkData[index].data.length + i - linkData[index].data.length}`}>\n                                <div className=\"form-inline\">\n                                  <label className=\"col-sm-3 pl-0 pr-0\">{item.name}番号:</label>\n                                  <Link\n                                    to={{ pathname: `${item.link}${rowData.id}`, state: 's0012' }}\n                                    className=\"col-sm-5 pl-0 pr-0\"\n                                  >\n                                    {rowData.code ? padId(rowData.code, 12) : ''}\n                                  </Link>\n                                  <div className=\"col-sm-4 pl-0 pr-0\">\n                                    {rowData.status !== '' ? STATUS_MAP[rowData.status] : ''}\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n                          </>\n                        )}\n                      </div>\n                    ))}\n                  </>\n                }\n              />\n            )}\n            <Breadcrumb\n              parent=\"受注システム\"\n              title=\"見積\"\n              bookmarkComponent={\n                id && (\n                  <div className=\"bookmark pull-right mr-4\">\n                    <Row>\n                      <Button\n                        variant=\"info\"\n                        className=\"mr-3\"\n                        onClick={() => {\n                          history.push({\n                            pathname: ScreenUrl.ESTIMATE_CREATE,\n                            state: formikProps.values,\n                          });\n                        }}\n                        disabled={disableFlag}\n                      >\n                        <i className=\"icofont icofont-copy-alt\" />\n                      </Button>\n                      <Button\n                        variant=\"info\"\n                        className=\"mr-1\"\n                        onClick={() => {\n                          setDeleteConfirm(!deleteConfirm);\n                        }}\n                        disabled={disableFlag}\n                      >\n                        <i className=\"icofont icofont-trash\" />\n                      </Button>\n                    </Row>\n                  </div>\n                )\n              }\n            />\n            <Card>\n              <CardHeader>\n                <h3>見積</h3>\n                {savedAlert.value && window.scrollTo(0, 0)}\n                <Alert isOpen={savedAlert.value}>{savedAlert.message}</Alert>\n                <Alert isOpen={copiedAlert.value}>{copiedAlert.message}</Alert>\n                {deleteConfirm && (\n                  <ConfirmModal\n                    isOpen={deleteConfirm}\n                    modalProps={{\n                      modalTitle: '削除確認',\n                      message: '削除しますか?',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => callDeleteEstimate(true, `${ScreenUrl.ORDER_MANAGEMENT}`),\n                    }}\n                  />\n                )}\n                {createConfirm && (\n                  <ConfirmModal\n                    isOpen={createConfirm}\n                    setIsOpen={setCreateConfirm}\n                    modalProps={{\n                      modalTitle: '発行確認',\n                      message: '発行しますか?',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => {\n                        setSubmit(true);\n                        formikProps.submitForm().then(() => window.scrollTo(0, 0));\n                      },\n                    }}\n                  />\n                )}\n                {orderConfirm && (\n                  <ConfirmModal\n                    isOpen={orderConfirm}\n                    setIsOpen={setOrderConfirm}\n                    modalProps={{\n                      modalTitle: '受注確認',\n                      message: '受注登録しますか？',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => {\n                        history.push({\n                          pathname: `${ScreenUrl.ORDER_CREATE}`,\n                          state: { id: formikProps.values.estimateId, from: 's0012', savedTemp: true },\n                        });\n                      },\n                    }}\n                  />\n                )}\n              </CardHeader>\n              <CardBody className=\"tabbed-card\">\n                {modalMember && (\n                  <CreateEmployee\n                    parentFormikProps={formikProps}\n                    currentIndex={currentIndex}\n                    dataProps={formikProps.values.details[currentIndex]?.person}\n                    isOpen={modalMember}\n                    memberOptions={membersOptions}\n                  />\n                )}\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          プロジェクト\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>\n                            {formikProps.values.projectCode} {formikProps.values.projectName}\n                          </span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          期間\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span className=\"col-sm-4 pl-0 pr-4\">{formatDate(formikProps.values.serviceStartDate)}</span>\n                          {formikProps.values.serviceStartDate || formikProps.values.serviceEndDate ? (\n                            <span>~</span>\n                          ) : null}\n                          <span className=\"col-sm-4 pr-0 pl-4\">{formatDate(formikProps.values.serviceEndDate)}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          案件\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>\n                            {formikProps.values.serviceCode} {formikProps.values.serviceName}\n                          </span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          クライアント\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>{formikProps.values.clientName}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          状況\n                        </label>\n                        <div className=\"form-inline col-sm-8 pl-0\">\n                          <span>{STATUS_MAP[formikProps.values.status]}</span>\n                        </div>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          見積番号\n                        </label>\n                        {disableFlag ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <span>{formikProps.values.estimateCode}</span>\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input className=\"form-control\" type=\"text\" name=\"estimateCode\" style={{ width: '100%' }} />\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          見積日\n                        </label>\n                        {disableFlag ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <span>{formatDate(formikProps.values.estimateDate)}</span>\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input className=\"form-control w-50\" type=\"date\" name=\"estimateDate\" />\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                  </Row>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <CardHeader\n                    style={{ padding: '7px', backgroundColor: '#ddd', borderTopLeftRadius: 0, borderTopRightRadius: 0 }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>明細</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <div className=\"custom-form-group form-inline\" style={{ justifyContent: 'flex-end' }}>\n                      {id && (\n                        <Button\n                          variant=\"info\"\n                          type=\"button\"\n                          disabled={disableFlag}\n                          onClick={() => {\n                            setOrderConfirm(!orderConfirm);\n                          }}\n                        >\n                          受注\n                        </Button>\n                      )}\n                    </div>\n                    <div>\n                      {detailFlg && !disableFlag ? (\n                        <FieldArray name=\"details\">\n                          {(arrayHelper) => (\n                            <div style={{ width: '950px', paddingRight: '20px' }}>\n                              <div className=\"table table-striped\">\n                                <div\n                                  className=\"row font-weight-bold pt-3 pb-3\"\n                                  style={{ paddingLeft: '5px', paddingRight: '5px' }}\n                                >\n                                  <div style={{ width: '3%' }} />\n                                  <div style={{ width: '22%' }} className=\"ml-1 \">\n                                    詳細\n                                  </div>\n                                  <div style={{ width: '7%' }} className=\"ml-1 \">\n                                    数量\n                                  </div>\n                                  <div style={{ width: '8%' }} className=\"ml-1 \">\n                                    単位\n                                  </div>\n                                  <div style={{ width: '12%' }} className=\"ml-1 \">\n                                    単価\n                                  </div>\n                                  <div style={{ width: '18%' }} className=\"ml-1 \">\n                                    金額\n                                  </div>\n                                  <div style={{ width: '20%' }} className=\"ml-1 \">\n                                    行の種類\n                                  </div>\n                                  <div style={{ width: '6%', padding: '0 9px' }}>\n                                    <i\n                                      className=\"icofont icofont-ui-add pr-2\"\n                                      onClick={() => {\n                                        setNoScroll(true);\n                                        arrayHelper.insert(0, editFlag ? { ...newDetail } : { ...blankDetail });\n                                      }}\n                                      hidden={disableFlag}\n                                    />\n                                  </div>\n                                </div>\n                                {formikProps.values.details?.map((item, index: number) => (\n                                  <div\n                                    key={`detail-${\n                                      formikProps.values.details.length + index - formikProps.values.details.length\n                                    }`}\n                                    id={String(index)}\n                                    data-position={index}\n                                    draggable\n                                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                                    // @ts-ignore\n                                    onDragStart={(e) => onDragStart(e, formikProps.values.details)}\n                                    onDragOver={(e) => onDragOver(e, formikProps)}\n                                    onDrop={() => onDrop(formikProps)}\n                                    onDragLeave={onDragLeave}\n                                    className={\n                                      dragAndDrop && dragAndDrop.draggedTo === Number(index)\n                                        ? classNames.join(' dropArea')\n                                        : classNames.join('')\n                                    }\n                                  >\n                                    <div style={{ width: '3%', paddingTop: '9px' }} className=\"text-right\">\n                                      {index + 1}\n                                    </div>\n                                    <div style={{ width: '22%' }} className=\"ml-1 form-inline\">\n                                      {item.remarks === Remark.MEMBER ? (\n                                        <>\n                                          <div style={{ width: '90%' }}>\n                                            <CustomSelect\n                                              name={`details[${index}].person`}\n                                              onChange={(value) =>\n                                                formikProps.setFieldValue(\n                                                  `details[${index}].person`,\n                                                  membersOptions.filter((member) => member.value === value)[0].value\n                                                )\n                                              }\n                                              options={membersOptions}\n                                              isDisabled={editFlag && item.newFlg === undefined}\n                                            />\n                                          </div>\n                                          <i\n                                            style={{ width: '10%' }}\n                                            className=\"pointer icofont icofont-ui-add pl-1\"\n                                            onClick={() => {\n                                              setCurrentIndex(index);\n                                              formikProps.setFieldValue(\n                                                `details[${index}].person`,\n                                                membersOptions.slice(-1)[0]?.value\n                                                  ? padId(Number(membersOptions.slice(-1)[0].value) + 1, 12)\n                                                  : padId(1, 12)\n                                              );\n                                              toggleMember();\n                                            }}\n                                            hidden={editFlag && item.newFlg === undefined}\n                                          />\n                                        </>\n                                      ) : (\n                                        <Input\n                                          name={`details[${index}].note`}\n                                          style={{ width: '90%' }}\n                                          disabled={\n                                            editFlag && item.remarks !== Remark.TEXT && item.newFlg === undefined\n                                          }\n                                        />\n                                      )}\n                                    </div>\n                                    <div style={{ width: '7%' }} className=\"ml-1\">\n                                      <Input\n                                        type=\"number\"\n                                        min={0}\n                                        name={`details[${index}].quantity`}\n                                        className=\"text-right\"\n                                        onValueChange={(value) =>\n                                          item.remarks === Remark.DISCOUNT\n                                            ? formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                -Math.abs(item.unitPrice ? Number(value) * item.unitPrice : 0)\n                                              )\n                                            : formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                item.unitPrice ? Number(value) * item.unitPrice : 0\n                                              )\n                                        }\n                                        disabled={\n                                          (editFlag && item.newFlg === undefined) || item.remarks === Remark.TEXT\n                                        }\n                                      />\n                                    </div>\n                                    <div style={{ width: '8%' }} className=\"ml-1\">\n                                      <Input\n                                        name={`details[${index}].unit`}\n                                        disabled={\n                                          item.remarks === Remark.TEXT || (editFlag && item.newFlg === undefined)\n                                        }\n                                      />\n                                    </div>\n                                    <div style={{ width: '12%' }} className=\"ml-1\">\n                                      <Input\n                                        type=\"number\"\n                                        min={0}\n                                        name={`details[${index}].unitPrice`}\n                                        className=\"text-right\"\n                                        onValueChange={(value) =>\n                                          item.remarks === Remark.DISCOUNT\n                                            ? formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                -Math.abs(item.quantity ? item.quantity * Number(value) : 0)\n                                              )\n                                            : formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                item.quantity ? item.quantity * Number(value) : 0\n                                              )\n                                        }\n                                        disabled={\n                                          item.remarks === Remark.TEXT || (editFlag && item.newFlg === undefined)\n                                        }\n                                      />\n                                    </div>\n                                    <div\n                                      style={{\n                                        width: '18%',\n                                        color: item.remarks === Remark.DISCOUNT ? 'red' : undefined,\n                                        backgroundColor:\n                                          item.remarks === Remark.TEXT || (editFlag && item.newFlg === undefined)\n                                            ? '#e9ecef'\n                                            : undefined,\n                                        opacity: item.remarks === Remark.TEXT ? 1 : undefined,\n                                      }}\n                                      className=\"form-control text-right ml-1\"\n                                    >\n                                      {item.remarks === Remark.DISCOUNT && '－ '}\n                                      {item.quantity && item.unitPrice\n                                        ? formatPrice(item.quantity * item.unitPrice)\n                                        : ''}\n                                    </div>\n                                    <div style={{ width: '20%' }} className=\"ml-1\">\n                                      <CustomSelect\n                                        name={`details[${index}].remarks`}\n                                        options={remarksOptions}\n                                        onChange={(value) => {\n                                          formikProps.setFieldValue(\n                                            `details[${index}].price`,\n                                            item.quantity && item.unitPrice ? item.quantity * item.unitPrice : 0\n                                          );\n                                          if (value === Remark.TEXT) {\n                                            formikProps.setFieldValue(`details[${index}].quantity`, 0);\n                                            formikProps.setFieldValue(`details[${index}].unit`, '');\n                                            formikProps.setFieldValue(`details[${index}].unitPrice`, 0);\n                                          } else if (value === Remark.DISCOUNT) {\n                                            formikProps.setFieldValue(\n                                              `details[${index}].price`,\n                                              -Math.abs(\n                                                item.quantity && item.unitPrice ? item.quantity * item.unitPrice : 0\n                                              )\n                                            );\n                                          }\n                                        }}\n                                        isDisabled={editFlag && item.newFlg === undefined}\n                                      />\n                                    </div>\n                                    <div style={{ width: '6%', paddingTop: '9px' }}>\n                                      <div className=\"form-inline pointer pl-2\">\n                                        <i\n                                          className=\"icofont icofont-ui-add pr-2\"\n                                          onClick={() => {\n                                            setNoScroll(true);\n                                            arrayHelper.insert(\n                                              index + 1,\n                                              editFlag ? { ...newDetail } : { ...blankDetail }\n                                            );\n                                          }}\n                                          hidden={editFlag && item.newFlg === undefined && item.remarks !== Remark.TEXT}\n                                        />\n                                        {formikProps.values.details.length === 1 && index === 0 ? (\n                                          <i\n                                            className=\"icofont icofont-trash\"\n                                            onClick={(e) => {\n                                              e.preventDefault();\n                                              arrayHelper.remove(index);\n                                              if (item.estimateDetailId) {\n                                                setDeleteDetails([...deleteDetails, item.estimateDetailId]);\n                                              }\n                                              setNoScroll(true);\n                                              arrayHelper.insert(index + 1, { ...blankDetail });\n                                            }}\n                                            hidden={\n                                              editFlag && item.newFlg === undefined && item.remarks !== Remark.TEXT\n                                            }\n                                          />\n                                        ) : (\n                                          <i\n                                            className=\"icofont icofont-trash\"\n                                            onClick={(e) => {\n                                              e.preventDefault();\n                                              arrayHelper.remove(index);\n                                              if (item.estimateDetailId) {\n                                                setDeleteDetails([...deleteDetails, item.estimateDetailId]);\n                                              }\n                                            }}\n                                            hidden={\n                                              editFlag && item.newFlg === undefined && item.remarks !== Remark.TEXT\n                                            }\n                                          />\n                                        )}\n                                      </div>\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </FieldArray>\n                      ) : (\n                        <DataTable\n                          style={{ width: '950px', paddingRight: '20px' }}\n                          onRowClicked={() => setDetailFlg(true)}\n                          columns={columns(membersOptions)}\n                          data={formikProps.values.details}\n                          pagination={false}\n                          noHeader\n                          subHeaderAlign=\"left\"\n                          loading={loading}\n                          persistTableHead\n                        />\n                      )}\n                    </div>\n                  </CardBody>\n                  <CardFooter>\n                    {detailFlg && !disableFlag && (\n                      <Row>\n                        <Button\n                          variant=\"info\"\n                          type=\"button\"\n                          onClick={() => {\n                            setDetailFlg(!detailFlg);\n                            setLoading(false);\n                            setNoScroll(true);\n                          }}\n                          disabled={disableFlag}\n                        >\n                          保存\n                        </Button>\n                      </Row>\n                    )}\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>小計:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) < 0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) < 0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              )\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>消費税:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) *\n                                0.1 <\n                              0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) *\n                            0.1 <\n                            0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) * 0.1\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>合計金額:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) +\n                                formikProps.values.details?.reduce(\n                                  (sum: number, item) => (item.price ? sum + item.price : sum),\n                                  0\n                                ) *\n                                  0.1 <\n                              0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) +\n                            formikProps.values.details?.reduce(\n                              (sum: number, item) => (item.price ? sum + item.price : sum),\n                              0\n                            ) *\n                              0.1 <\n                            0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) +\n                                formikProps.values.details?.reduce(\n                                  (sum: number, item) => (item.price ? sum + item.price : sum),\n                                  0\n                                ) *\n                                  0.1\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                  </CardFooter>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <CardHeader\n                    style={{ padding: '7px', backgroundColor: '#ddd', borderTopLeftRadius: 0, borderTopRightRadius: 0 }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>書類等</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <FieldArray name=\"documents\">\n                      {(arrayHelper) => (\n                        <>\n                          {formikProps.values.documents.length > 0\n                            ? formikProps.values.documents?.map((document, index) => (\n                                <Row key={`serviceDocument-${index + 1}`}>\n                                  <Col className=\"form-group \">\n                                    <DocumentUploader\n                                      name={`documents[${index}].documentId`}\n                                      documentName={\n                                        document.documentSaveName ? document.documentSaveName : document.documentName\n                                      }\n                                      documentId={document.documentId}\n                                      filePath={document.filePath}\n                                      filesInfo={document.filesInfo}\n                                      deleteDoc={!disableFlag}\n                                      disableAdd={disableFlag}\n                                      onSelect={(files: File) => {\n                                        arrayHelper.replace(index, {\n                                          ...document,\n                                          filesInfo: files,\n                                          documentName: files.name,\n                                        });\n                                      }}\n                                      onUpload={(resDocId: number, resFilePath: string, resDocumentSaveName) => {\n                                        arrayHelper.replace(index, {\n                                          ...document,\n                                          documentId: resDocId,\n                                          filePath: resFilePath,\n                                          documentName: resDocumentSaveName || document.documentName,\n                                        });\n                                        setNoScroll(true);\n                                        arrayHelper.insert(index + 1, blankDocumentInfo);\n                                      }}\n                                      onDelete={(delId) => {\n                                        arrayHelper.remove(index);\n                                        if (delId) {\n                                          delDocId.push(delId);\n                                        }\n                                      }}\n                                      update={!!id}\n                                      prevDoc={preDocId}\n                                    />\n                                  </Col>\n                                </Row>\n                              ))\n                            : ''}\n                        </>\n                      )}\n                    </FieldArray>\n                  </CardBody>\n                  <CardFooter />\n                </Card>\n                <div className=\"custom-form-group form-inline\" style={{ justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"info\"\n                    type=\"submit\"\n                    className=\"mr-3\"\n                    onClick={() => {\n                      setNoScroll(false);\n                      if (status === Status.ESTIMATED || status === Status.ESTIMATE_CHANGED) {\n                        formikProps.setFieldValue('status', Status.ESTIMATE_CHANGED);\n                      } else {\n                        formikProps.setFieldValue('status', Status.CREATING);\n                      }\n                      setSubmit(true);\n                    }}\n                    disabled={disableFlag}\n                  >\n                    保存\n                  </Button>\n                  <Button\n                    variant=\"info\"\n                    type=\"submit\"\n                    onClick={() => {\n                      setNoScroll(false);\n                      formikProps.setFieldValue('status', Status.ESTIMATED);\n                    }}\n                    disabled={disableFlag}\n                  >\n                    発行\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </AppLayout>\n  );\n};\nexport default Estimate;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, CardBody, CardHeader, Button, CardFooter, Alert } from 'reactstrap';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { FieldArray, Form, Formik, FormikProps } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Breadcrumb from '../components/common/breadcrumb';\nimport AppLayout from '../components/common/layout';\nimport DataTable from '../components/common/datatable/data-table';\nimport { formatDate, formatPrice, padId } from '../components/common/formatter/formatter';\nimport { CustomSelect, Input, Textarea } from '../components/common/form-helper';\nimport DocumentUploader from '../components/common/document-uploader';\nimport { ScreenUrl, remarksOptions, STATUS_MAP, Status, Remark, ZERO } from '../constant/commonConstant';\nimport CustomSidebar from '../components/common/custom-sidebar';\nimport CreateEmployee from '../components/employee-process/create-employee';\nimport api from '../utils/api_client';\nimport {\n  DocumentAttributes,\n  OrderCreateAttributes,\n  OrderDetailAttributes,\n  EstimateCreateAttributes,\n  EstimateDetailAttributes,\n  OrderUpdateAttributes,\n  OrderDocumentAttributes,\n} from '../api';\nimport { columns, OptionsType } from '../components/common/detail-form-common';\nimport ConfirmModal from '../components/common/confirm-modal';\n\ninterface EstimateCreateValue extends EstimateCreateAttributes {\n  details: EstimateDetailAttributes[];\n}\n\ninterface Detail {\n  createdAt?: string;\n  orderCode?: string;\n  orderDetailId?: number;\n  updatedAt?: string;\n  person?: string;\n  note: string;\n  quantity?: number;\n  unit?: string;\n  unitPrice?: number;\n  price?: number;\n  remarks: string;\n  newFlg?: boolean;\n}\n\nexport interface InitialValue {\n  orderId: number;\n  projectCode?: string;\n  projectName?: string;\n  serviceCode?: string;\n  serviceName?: string;\n  clientCode?: string;\n  clientName?: string;\n  serviceStartDate?: string;\n  serviceEndDate?: string;\n  status: string;\n  details: Detail[];\n  orderCode?: string;\n  orderDate?: string;\n  purchaseOrderNumber?: string;\n  purchaseOrderName?: string;\n  description?: string;\n  documents?: orderDocument[];\n}\n\nconst tableData: Detail[] = [];\n\nconst blankDetail: Detail = {\n  person: '',\n  note: '',\n  quantity: 0,\n  unit: '',\n  unitPrice: 0,\n  price: 0,\n  remarks: '',\n  newFlg: false,\n};\n\nconst textDetail: Detail = {\n  person: '',\n  note: '',\n  quantity: 0,\n  unit: '',\n  unitPrice: 0,\n  price: 0,\n  remarks: Remark.TEXT,\n};\n\nconst initialDnDState = {\n  draggedFrom: -1,\n  draggedTo: -1,\n  isDragging: false,\n  originalOrder: tableData,\n  updatedOrder: tableData,\n};\n\ninterface linkScreen {\n  name: string;\n  link: string;\n  data: { id: number; code: string; status: string }[];\n}\n\nconst blankDocumentInfo: orderDocument = {\n  documentId: 0,\n  documentName: '',\n  filePath: '',\n  documentSaveName: '',\n};\n\nexport interface orderDocument extends DocumentAttributes {\n  filesInfo?: File;\n}\n\nconst SchemaValidation = Yup.object().shape({\n  orderCode: Yup.string().nullable().required().length(12),\n  orderDate: Yup.string().nullable().required(),\n});\n\nconst draftSchemaValidation = Yup.object().shape({\n  orderCode: Yup.string().nullable().required().length(12),\n});\n\nconst Order: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [schema, setSchema] = useState(draftSchemaValidation);\n  const [selectedDetailRows, setSelectDetailRows] = useState<Detail[]>([{ ...blankDetail }]);\n  const [modalMember, setModalMember] = useState(false);\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\n  const [createConfirm, setCreateConfirm] = useState(false);\n  const [invoiceConfirm, setInvoiceConfirm] = useState(false);\n  const [submit, setSubmit] = useState<boolean | undefined>(undefined);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [editFlag, setEditFlag] = useState(false);\n  const [noScroll, setNoScroll] = useState(false);\n  const [savedTempAlert, setSavedTempAlert] = useState<{ value: boolean; message: string }>({\n    value: false,\n    message: '',\n  });\n  const [savedAlert, setSavedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [membersOptions, setMembersOptions] = useState<OptionsType[]>([]);\n  const [listData, setListData] = useState<Detail[]>([{ ...blankDetail }]);\n  const [documents, setDocuments] = useState<orderDocument[]>([blankDocumentInfo]);\n  const [prevDocuments, setPrevDocuments] = useState<orderDocument[]>([blankDocumentInfo]);\n  const [preDocId, setPreDocId] = useState<number[]>([]);\n  const [delDocId, setDelDocID] = useState<number[]>([]);\n  const [disableFlag, setDisableFlag] = useState(false);\n  const tempRow: Detail[] = [];\n  const toggleMember = () => {\n    setModalMember(!modalMember);\n  };\n\n  const handleRowSelected = (state: any) => {\n    setSelectDetailRows(state.selectedRows);\n  };\n\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\n  const classNames = ['table-body row d-flex align-items-stretch'];\n  const [deleteDetails, setDeleteDetails] = useState<number[]>([]);\n  const [initFindData, setInitFindData] = useState<InitialValue>({\n    orderId: 0,\n    projectCode: '',\n    projectName: '',\n    serviceCode: '',\n    serviceName: '',\n    clientCode: '',\n    clientName: '',\n    serviceStartDate: '',\n    serviceEndDate: '',\n    status: '',\n    details: [{ ...blankDetail }],\n    orderCode: '',\n    orderDate: '',\n    purchaseOrderNumber: '',\n    purchaseOrderName: '',\n    description: '',\n    documents: [blankDocumentInfo],\n  });\n  const [linkData, setLinkData] = useState<linkScreen[]>([]);\n\n  const onDragStart = (event: { currentTarget: { dataset: { position: number } } }, value: Detail[]) => {\n    const initialPosition = Number(event.currentTarget.dataset.position);\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: initialPosition,\n      isDragging: true,\n      originalOrder: value,\n    });\n  };\n\n  const onDragOver = (event: React.DragEvent<HTMLDivElement>, formikProps: FormikProps<InitialValue>) => {\n    event.preventDefault();\n\n    let newList = dragAndDrop.originalOrder;\n\n    const { draggedFrom } = dragAndDrop;\n\n    const draggedTo = Number(event.currentTarget.dataset.position);\n\n    const itemDragged = newList[draggedFrom];\n    const remainingItems = newList.filter((item, index) => index !== draggedFrom);\n\n    newList = [...remainingItems.slice(0, draggedTo), itemDragged, ...remainingItems.slice(draggedTo)];\n\n    if (draggedTo !== dragAndDrop.draggedTo) {\n      const updateDetailIdData: Detail[] = [];\n      newList.forEach((n, i) => {\n        updateDetailIdData.push({ ...newList[i], orderDetailId: formikProps.values.details[i].orderDetailId });\n      });\n      setDragAndDrop({\n        ...dragAndDrop,\n        updatedOrder: updateDetailIdData,\n        draggedTo,\n      });\n    }\n  };\n\n  const onDrop = (formikProps: FormikProps<InitialValue>) => {\n    formikProps.setFieldValue('details', [...dragAndDrop.updatedOrder]);\n\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: -1,\n      draggedTo: -1,\n      isDragging: false,\n    });\n  };\n\n  const onDragLeave = () => {\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedTo: 0,\n    });\n  };\n\n  const [detailFlg, setDetailFlg] = useState(false);\n  const fetchData = async () => {\n    const state: { id: number; from: string; savedTemp: boolean } = location.state as {\n      id: number;\n      from: string;\n      savedTemp: boolean;\n    };\n    if (state) {\n      if (state.from === 's0012') {\n        api.getEstimateById(state.id).then((res) => {\n          const data = res.data as any;\n          const { details } = data;\n          const orderDetails: OrderDetailAttributes[] = [];\n          details.forEach((e: EstimateDetailAttributes) => {\n            orderDetails.push({\n              index: e.index,\n              orderId: state.id,\n              person: e.person,\n              note: e.note,\n              quantity: e.quantity,\n              unit: e.unit,\n              unitPrice: e.unitPrice,\n              price: e.price,\n              remarks: e.remarks,\n              invoiceFlag: false,\n            });\n          });\n          setInitFindData({ ...initFindData, ...data, details: orderDetails, orderCode: data.estimateCode });\n          if (state.savedTemp) {\n            const savedTempValue = {\n              orderCode: data.estimateCode,\n              estimateId: data.estimateId,\n              status: Status.CREATING,\n              orderDate: initFindData.orderDate,\n              orderNumber: initFindData.purchaseOrderNumber,\n              orderName: initFindData.purchaseOrderName,\n              description: initFindData.description,\n              details: orderDetails,\n            };\n            api\n              .estimateUpdate(data.estimateId, {\n                estimateCode: data.estimateCode,\n                serviceId: data.serviceId,\n                status: data.status,\n                estimateDate: formatDate(data.estimateDate, 'yyyy-MM-dd'),\n                orderFlg: true,\n                deleteFlg: false,\n                details: data.details,\n                deleteDetails: [],\n              })\n              .then(() => {\n                if (state.savedTemp) {\n                  api.orderPost(savedTempValue).then((order) => {\n                    const savedTempOrderId = (order.data as any).orderId;\n                    history.push({\n                      pathname: `${ScreenUrl.ORDER_UPDATE}${savedTempOrderId}`,\n                    });\n                    setSavedTempAlert({ value: true, message: '保存しました' });\n                    setTimeout(() => {\n                      setSavedTempAlert({ value: false, message: '' });\n                    }, 3000);\n                  });\n                }\n              });\n          }\n          setListData(orderDetails ? [...orderDetails] : []);\n        });\n        setEditFlag(true);\n      } else if (state.from === 's0011') {\n        api.getServiceById(state.id).then((res) => {\n          setInitFindData({ ...initFindData, ...res.data, orderCode: padId(state.id, 12) });\n        });\n        setEditFlag(false);\n      }\n      setStatus(initFindData.status);\n    }\n    if (id) {\n      api.getOrderById(id).then((res) => {\n        const data = res.data as any;\n        if (data.estimate || data.invoices.length > 0) {\n          setLinkData([\n            {\n              name: '見積',\n              link: `${ScreenUrl.ESTIMATE_UPDATE}`,\n              data:\n                data.estimate.estimateStatus && data.estimate.estimateStatus.trim() !== ''\n                  ? [\n                      {\n                        id: data.estimate.estimateId,\n                        code: data.estimate.estimateCode,\n                        status: data.estimate.estimateStatus,\n                      },\n                    ]\n                  : [],\n            },\n            {\n              name: '請求',\n              link: `${ScreenUrl.INVOICE_UPDATE}`,\n              data: data.invoices.length > 0 ? data.invoices : [],\n            },\n          ]);\n        }\n        setInitFindData({\n          ...initFindData,\n          ...data,\n          purchaseOrderNumber: data.orderNumber,\n          purchaseOrderName: data.orderName,\n          details: data.details,\n          description: data.description,\n        });\n        setListData(data.details ? [...data.details] : []);\n        setStatus(data.status);\n        setDisableFlag(data.details.filter((item: any) => item.invoiceFlag === true).length === data.details.length);\n      });\n      const documentRes = await api.getOrderDocuments(id);\n      const documentData = [...documentRes.data, blankDocumentInfo];\n      setDocuments(documentData);\n      setPrevDocuments(documentData);\n      const prevArrDocId: number[] = documentData\n        ? documentData.map((doc: orderDocument) => doc.documentId).filter(Boolean)\n        : [];\n      setPreDocId(prevArrDocId);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData();\n\n    api.employeeGetAll().then((res) => {\n      const memberList = res.data.map((member: { employeeCode: string; employeeName: string }) => ({\n        value: member.employeeCode,\n        label: member.employeeName,\n      }));\n      setMembersOptions(memberList);\n    });\n\n    if (!id) {\n      setDetailFlg(!detailFlg);\n    } else {\n      setEditFlag(true);\n    }\n    setLoading(false);\n  }, [id, location.state, savedAlert.value]);\n\n  const initData: InitialValue = id\n    ? {\n        ...initFindData,\n        details: listData,\n        orderDate: formatDate(initFindData.orderDate, 'yyyy-MM-dd'),\n        documents,\n      }\n    : {\n        ...initFindData,\n        details: listData,\n        status: Status.CREATING,\n        orderDate: '',\n        purchaseOrderNumber: '',\n        purchaseOrderName: '',\n        description: '',\n        documents: [blankDocumentInfo],\n      };\n\n  const handleSubmit = (values: any) => {\n    const submitOrderDetails: React.SetStateAction<any[]> = [];\n    const prevArrDocId: number[] = prevDocuments\n      ? prevDocuments.map((doc: orderDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const arrDocId: number[] = values.documents\n      ? values.documents.map((doc: orderDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const createDocId: number[] = [];\n    arrDocId.forEach((val) => {\n      if (prevArrDocId.indexOf(val) <= -1) createDocId.push(val);\n    });\n    const orderDocCreateValue: OrderDocumentAttributes = {\n      orderId: values.orderId,\n      documents: createDocId,\n    };\n\n    const setInitMsg = () => {\n      setTimeout(() => {\n        setSavedAlert({ value: false, message: '' });\n        setCreateConfirm(false);\n        setSubmit(false);\n      }, 3000);\n    };\n    const setMessage = (statusValue: string) => {\n      if (statusValue === Status.ORDERED) {\n        setSavedAlert({ value: true, message: '発行しました' });\n        setInitMsg();\n      } else if (statusValue === Status.CREATING || statusValue === Status.ORDER_CHANGED) {\n        setSavedAlert({ value: true, message: '保存しました' });\n        setInitMsg();\n      }\n      setStatus(statusValue);\n    };\n\n    if (id) {\n      if (values.status === Status.ORDERED) {\n        setCreateConfirm(true);\n      }\n      values.details.forEach(\n        (\n          item: {\n            orderDetailId: number;\n            person: string;\n            note: string;\n            quantity: number;\n            unit: string;\n            unitPrice: number;\n            remarks: string;\n          },\n          i: number\n        ) =>\n          submitOrderDetails.push({\n            orderDetailId: item.orderDetailId ? item.orderDetailId : null,\n            index: i + 1,\n            orderId: values.orderId,\n            note: item.person ? item.person : item.note,\n            person: item.person ? item.person : null,\n            quantity: item.quantity ? item.quantity : null,\n            unit: item.unit ? item.unit : null,\n            unitPrice: item.unitPrice ? item.unitPrice : null,\n            price:\n              // eslint-disable-next-line no-nested-ternary\n              item.quantity && item.unitPrice\n                ? item.remarks === Remark.DISCOUNT\n                  ? -Math.abs(item.quantity * item.unitPrice)\n                  : item.quantity * item.unitPrice\n                : null,\n            remarks: item.remarks,\n          })\n      );\n\n      const updateOrderValue: OrderUpdateAttributes = {\n        orderCode: values.orderCode,\n        estimateId: values.estimateId ? values.estimateId : values.orderId,\n        status: values.status,\n        orderDate: values.orderDate,\n        orderNumber: values.purchaseOrderNumber,\n        orderName: values.purchaseOrderName,\n        description: values.description,\n        details: submitOrderDetails,\n        deleteDetails,\n      };\n\n      if (submit) {\n        api.orderUpdate(values.orderId, updateOrderValue).then(() => {\n          if (delDocId.length > 0) {\n            delDocId.forEach((delId) => {\n              api.deleteOrderDocument(delId).then(() => {\n                api.deleteFile(delId);\n                if (orderDocCreateValue.documents.length > 0) {\n                  api.createOrderDocument(orderDocCreateValue).then(() => setMessage(String(updateOrderValue.status)));\n                } else {\n                  setMessage(String(updateOrderValue.status));\n                }\n              });\n            });\n          } else if (orderDocCreateValue.documents.length > 0) {\n            api.createOrderDocument(orderDocCreateValue).then(() => setMessage(String(updateOrderValue.status)));\n          } else {\n            setMessage(String(updateOrderValue.status));\n          }\n        });\n      }\n      history.push(location.pathname);\n    } else {\n      if (values.status === Status.ORDERED) {\n        setCreateConfirm(true);\n      }\n      values.details.forEach((item: Detail, i: number) => {\n        submitOrderDetails.push({\n          index: i + 1,\n          orderId: 0,\n          note: item.person ? item.person : item.note,\n          person: item.person ? item.person : null,\n          quantity: item.quantity ? item.quantity : null,\n          unit: item.unit ? item.unit : null,\n          unitPrice: item.unitPrice ? item.unitPrice : null,\n          price:\n            // eslint-disable-next-line no-nested-ternary\n            item.quantity && item.unitPrice\n              ? item.remarks === Remark.DISCOUNT\n                ? -Math.abs(item.quantity * item.unitPrice)\n                : item.quantity * item.unitPrice\n              : null,\n          remarks: item.remarks,\n        });\n      });\n\n      const createEstimateValue: EstimateCreateValue = {\n        serviceId: values.serviceId,\n        estimateCode: values.orderCode.trim(),\n        status: '',\n        estimateDate: values.orderDate,\n        details: [],\n      };\n\n      const createOrderValue: OrderCreateAttributes = {\n        orderCode: values.orderCode.trim(),\n        estimateId: values.estimateId,\n        status: values.status,\n        orderDate: values.orderDate,\n        orderNumber: values.purchaseOrderNumber,\n        orderName: values.purchaseOrderName,\n        description: values.description,\n        details: submitOrderDetails,\n      };\n      if (submit) {\n        if (values.estimateId === undefined) {\n          api.estimatePost(createEstimateValue).then((estimate) => {\n            const { estimateId } = estimate.data as any;\n            api.orderPost({ ...createOrderValue, estimateId }).then((order) => {\n              const { orderId } = order.data as any;\n              delDocId.forEach((delId) => {\n                api.deleteFile(delId);\n              });\n              api.createOrderDocument({ ...orderDocCreateValue, orderId });\n              setMessage(String(createOrderValue.status));\n              history.push({\n                pathname: `${ScreenUrl.ORDER_UPDATE}${orderId}`,\n              });\n            });\n          });\n        } else {\n          api.orderPost(createOrderValue).then((order) => {\n            const { orderId } = order.data as any;\n            delDocId.forEach((delId) => {\n              api.deleteFile(delId);\n            });\n            api.createOrderDocument({ ...orderDocCreateValue, orderId });\n            setMessage(String(createOrderValue.status));\n            history.push({\n              pathname: `${ScreenUrl.ORDER_UPDATE}${orderId}`,\n            });\n          });\n        }\n      }\n    }\n  };\n\n  const callDeleteOrder = (act: boolean, redirect: string) => {\n    if (act) {\n      api.deleteOrder(id).then(() => history.push(redirect, true));\n    }\n  };\n\n  return (\n    <AppLayout>\n      <Formik\n        initialValues={initData}\n        onSubmit={(values) => handleSubmit(values)}\n        validationSchema={schema}\n        validate={(values) => {\n          if (values.status !== Status.CREATING) {\n            setSchema(SchemaValidation);\n          } else setSchema(draftSchemaValidation);\n        }}\n        enableReinitialize\n      >\n        {(formikProps) => (\n          <Form>\n            {!noScroll && Object.keys(formikProps.errors).length > 0 && window.scrollTo(0, 0)}\n            {linkData?.length > 0 && (\n              <CustomSidebar\n                element={\n                  <>\n                    {linkData.map((item, index) => (\n                      <div\n                        key={`linkData-${linkData.length + index - linkData.length}`}\n                        className=\"mb-4\"\n                        style={{ borderBottom: '1px solid whitesmoke' }}\n                      >\n                        {item.data.length > 0 && <h6>{item.name}</h6>}\n                        {linkData[index].data.map((rowData, i) => (\n                          <div key={`details-${linkData[index].data.length + i - linkData[index].data.length}`}>\n                            {rowData.status.trim() !== '' && (\n                              <div className=\"form-inline\">\n                                <label className=\"col-sm-3 pl-0 pr-0\">{item.name}番号:</label>\n                                <Link\n                                  to={{ pathname: `${item.link}${rowData.id}`, state: 's0013' }}\n                                  className=\"col-sm-5 pl-0 pr-0\"\n                                >\n                                  {rowData.code ? padId(rowData.code, 12) : ''}\n                                </Link>\n                                <div className=\"col-sm-4 pl-0 pr-0\">{STATUS_MAP[rowData.status]}</div>\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    ))}\n                  </>\n                }\n              />\n            )}\n            <Breadcrumb\n              parent=\"受注システム\"\n              title=\"受注\"\n              bookmarkComponent={\n                id && (\n                  <div className=\"bookmark pull-right mr-4\">\n                    <Button\n                      variant=\"info\"\n                      className=\"mr-1\"\n                      onClick={() => setDeleteConfirm(!deleteConfirm)}\n                      disabled={disableFlag}\n                    >\n                      <i className=\"icofont icofont-trash\" />\n                    </Button>\n                  </div>\n                )\n              }\n            />\n            <Card>\n              <CardHeader>\n                <h3>受注</h3>\n                {savedAlert.value && window.scrollTo(0, 0)}\n                <Alert isOpen={savedAlert.value || savedTempAlert.value}>\n                  {savedAlert.message || savedTempAlert.message}\n                </Alert>\n                {deleteConfirm && (\n                  <ConfirmModal\n                    isOpen={deleteConfirm}\n                    modalProps={{\n                      modalTitle: '削除確認',\n                      message: '削除しますか?',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => callDeleteOrder(true, `${ScreenUrl.ORDER_MANAGEMENT}`),\n                    }}\n                  />\n                )}\n                {createConfirm && (\n                  <ConfirmModal\n                    isOpen={createConfirm}\n                    setIsOpen={setCreateConfirm}\n                    modalProps={{\n                      modalTitle: '発行確認',\n                      message: '発行しますか?',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => {\n                        setSubmit(true);\n                        formikProps.submitForm().then(() => window.scrollTo(0, 0));\n                      },\n                    }}\n                  />\n                )}\n                {invoiceConfirm && (\n                  <ConfirmModal\n                    isOpen={invoiceConfirm}\n                    setIsOpen={setInvoiceConfirm}\n                    modalProps={{\n                      modalTitle: '請求確認',\n                      message: '請求登録しますか？',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => {\n                        history.push({\n                          pathname: `${ScreenUrl.INVOICE_CREATE}`,\n                          state: {\n                            rows: selectedDetailRows,\n                            from: 's0013',\n                            id: formikProps.values.orderId,\n                            savedTemp: true,\n                          },\n                        });\n                      },\n                    }}\n                  />\n                )}\n              </CardHeader>\n              <CardBody className=\"tabbed-card\">\n                {modalMember && (\n                  <CreateEmployee\n                    parentFormikProps={formikProps}\n                    currentIndex={currentIndex}\n                    dataProps={formikProps.values.details[currentIndex]?.person}\n                    isOpen={modalMember}\n                    memberOptions={membersOptions}\n                  />\n                )}\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          プロジェクト\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>\n                            {formikProps.values.projectCode} {formikProps.values.projectName}\n                          </span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          期間\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span className=\"col-sm-4 pl-0 pr-4\">{formatDate(formikProps.values.serviceStartDate)}</span>\n                          {formikProps.values.serviceStartDate || formikProps.values.serviceEndDate ? (\n                            <span>~</span>\n                          ) : null}\n                          <span className=\"col-sm-4 pr-0 pl-4\">{formatDate(formikProps.values.serviceEndDate)}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          案件\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>\n                            {formikProps.values.serviceCode} {formikProps.values.serviceName}\n                          </span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          クライアント\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>{formikProps.values.clientName}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          状況\n                        </label>\n                        <div className=\"form-inline col-sm-8 pl-0\">\n                          <span>{STATUS_MAP[formikProps.values.status]}</span>\n                        </div>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          受注番号\n                        </label>\n                        {disableFlag ? (\n                          <Col className=\"col-sm-8 pl-0\">{formikProps.values.orderCode}</Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input className=\"form-control\" type=\"text\" name=\"orderCode\" style={{ width: '100%' }} />\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          受注日\n                        </label>\n                        {!disableFlag ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input className=\"form-control w-50\" type=\"date\" name=\"orderDate\" />\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <div className=\"form-inline col-sm-8 pl-0\">\n                              <span>{formatDate(formikProps.values.orderDate)}</span>\n                            </div>\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          発注書番号\n                        </label>\n                        {!disableFlag ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input\n                              className=\"form-control\"\n                              type=\"text\"\n                              name=\"purchaseOrderNumber\"\n                              style={{ width: '100%' }}\n                            />\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <div className=\"form-inline col-sm-8 pl-0\">\n                              <span>{formikProps.values.purchaseOrderNumber}</span>\n                            </div>\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          発注書件名\n                        </label>\n                        {!disableFlag ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input\n                              className=\"form-control\"\n                              type=\"text\"\n                              name=\"purchaseOrderName\"\n                              style={{ width: '100%' }}\n                            />\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <div className=\"form-inline col-sm-8 pl-0\">\n                              <span>{formikProps.values.purchaseOrderName}</span>\n                            </div>\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\" />\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <CardHeader\n                    style={{\n                      padding: '7px',\n                      backgroundColor: '#ddd',\n                      borderTopLeftRadius: 0,\n                      borderTopRightRadius: 0,\n                    }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>明細</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <div className=\"custom-form-group form-inline\" style={{ justifyContent: 'flex-end' }}>\n                      {id && (\n                        <Button\n                          variant=\"info\"\n                          type=\"button\"\n                          disabled={disableFlag}\n                          onClick={() => {\n                            setInvoiceConfirm(!invoiceConfirm);\n                          }}\n                        >\n                          請求\n                        </Button>\n                      )}\n                    </div>\n                    <div>\n                      {detailFlg ? (\n                        <FieldArray name=\"details\">\n                          {(arrayHelper) => (\n                            <div style={{ width: '950px', paddingRight: '20px' }}>\n                              <div className=\"table table-striped\">\n                                <div\n                                  className=\"row font-weight-bold pt-3 pb-3\"\n                                  style={{ paddingLeft: '5px', paddingRight: '5px' }}\n                                >\n                                  <div style={{ width: '3%' }} />\n                                  <div style={{ width: '22%' }} className=\"ml-1\">\n                                    詳細\n                                  </div>\n                                  <div style={{ width: '7%' }} className=\"ml-1\">\n                                    数量\n                                  </div>\n                                  <div style={{ width: '8%' }} className=\"ml-1\">\n                                    単位\n                                  </div>\n                                  <div style={{ width: '12%' }} className=\"ml-1\">\n                                    単価\n                                  </div>\n                                  <div style={{ width: '18%' }} className=\"ml-1\">\n                                    金額\n                                  </div>\n                                  <div style={{ width: '20%' }} className=\"ml-1\">\n                                    行の種類\n                                  </div>\n                                  <div style={{ width: '6%', padding: '0 9px' }}>\n                                    <i\n                                      className=\"icofont icofont-ui-add pr-2\"\n                                      onClick={() => {\n                                        setNoScroll(true);\n                                        arrayHelper.insert(0, editFlag ? { ...textDetail } : { ...blankDetail });\n                                      }}\n                                      hidden={disableFlag}\n                                    />\n                                  </div>\n                                </div>\n                                {formikProps.values.details?.map((item, index: number) => (\n                                  <div\n                                    key={`detail-${\n                                      formikProps.values.details.length + index - formikProps.values.details.length\n                                    }`}\n                                    id={String(index)}\n                                    data-position={index}\n                                    draggable\n                                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                                    // @ts-ignore\n                                    onDragStart={(e) => onDragStart(e, formikProps.values.details)}\n                                    onDragOver={(e) => onDragOver(e, formikProps)}\n                                    onDrop={() => onDrop(formikProps)}\n                                    onDragLeave={onDragLeave}\n                                    className={\n                                      dragAndDrop && dragAndDrop.draggedTo === Number(index)\n                                        ? classNames.join(' dropArea')\n                                        : classNames.join('')\n                                    }\n                                  >\n                                    <div style={{ width: '3%', paddingTop: '9px' }} className=\"text-right\">\n                                      {index + 1}\n                                    </div>\n                                    <div style={{ width: '22%' }} className=\"ml-1 form-inline\">\n                                      {item.remarks === Remark.MEMBER ? (\n                                        <>\n                                          <div style={{ width: '90%' }}>\n                                            <CustomSelect\n                                              name={`details[${index}].person`}\n                                              onChange={(value) =>\n                                                formikProps.setFieldValue(\n                                                  `details[${index}].person`,\n                                                  membersOptions.filter((member) => member.value === value)[0].value\n                                                )\n                                              }\n                                              options={membersOptions}\n                                              isDisabled={editFlag}\n                                            />\n                                          </div>\n                                          <i\n                                            style={{ width: '10%' }}\n                                            className=\"pointer icofont icofont-ui-add pl-1\"\n                                            onClick={() => {\n                                              setCurrentIndex(index);\n                                              formikProps.setFieldValue(\n                                                `details[${index}].person`,\n                                                membersOptions.slice(-1)[0]?.value\n                                                  ? padId(Number(membersOptions.slice(-1)[0].value) + 1, 12)\n                                                  : padId(1, 12)\n                                              );\n                                              toggleMember();\n                                            }}\n                                            hidden={editFlag}\n                                          />\n                                        </>\n                                      ) : (\n                                        <Input\n                                          name={`details[${index}].note`}\n                                          style={{ width: '90%' }}\n                                          disabled={(editFlag && item.remarks !== Remark.TEXT) || disableFlag}\n                                        />\n                                      )}\n                                    </div>\n                                    <div style={{ width: '7%' }} className=\"ml-1\">\n                                      <Input\n                                        type=\"number\"\n                                        min={0}\n                                        name={`details[${index}].quantity`}\n                                        className=\"text-right\"\n                                        onValueChange={(value) =>\n                                          item.remarks === Remark.DISCOUNT\n                                            ? formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                -Math.abs(item.unitPrice ? Number(value) * item.unitPrice : ZERO)\n                                              )\n                                            : formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                item.unitPrice ? Number(value) * item.unitPrice : ZERO\n                                              )\n                                        }\n                                        disabled={item.remarks === Remark.TEXT || editFlag}\n                                      />\n                                    </div>\n                                    <div style={{ width: '8%' }} className=\"ml-1\">\n                                      <Input\n                                        name={`details[${index}].unit`}\n                                        disabled={item.remarks === Remark.TEXT || editFlag}\n                                      />\n                                    </div>\n                                    <div style={{ width: '12%' }} className=\"ml-1\">\n                                      <Input\n                                        type=\"number\"\n                                        min={0}\n                                        name={`details[${index}].unitPrice`}\n                                        className=\"text-right\"\n                                        onValueChange={(value) =>\n                                          item.remarks === Remark.DISCOUNT\n                                            ? formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                -Math.abs(item.quantity ? item.quantity * Number(value) : ZERO)\n                                              )\n                                            : formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                item.quantity ? item.quantity * Number(value) : ZERO\n                                              )\n                                        }\n                                        disabled={item.remarks === Remark.TEXT || editFlag}\n                                      />\n                                    </div>\n                                    <div\n                                      style={{\n                                        width: '18%',\n                                        color: item.remarks === Remark.DISCOUNT ? 'red' : undefined,\n                                        backgroundColor:\n                                          item.remarks === Remark.TEXT || editFlag ? '#e9ecef' : undefined,\n                                        opacity: item.remarks === Remark.TEXT ? 1 : undefined,\n                                      }}\n                                      className=\"form-control text-right ml-1\"\n                                    >\n                                      {item.remarks === Remark.DISCOUNT && '－ '}\n                                      {item.quantity && item.unitPrice\n                                        ? formatPrice(item.quantity * item.unitPrice)\n                                        : ''}\n                                    </div>\n                                    <div style={{ width: '20%' }} className=\"ml-1\">\n                                      <CustomSelect\n                                        name={`details[${index}].remarks`}\n                                        options={remarksOptions}\n                                        onChange={(value) => {\n                                          formikProps.setFieldValue(\n                                            `details[${index}].price`,\n                                            item.quantity && item.unitPrice ? item.quantity * item.unitPrice : ZERO\n                                          );\n                                          if (value === Remark.TEXT) {\n                                            formikProps.setFieldValue(`details[${index}].quantity`, ZERO);\n                                            formikProps.setFieldValue(`details[${index}].unit`, '');\n                                            formikProps.setFieldValue(`details[${index}].unitPrice`, ZERO);\n                                          } else if (value === Remark.DISCOUNT) {\n                                            formikProps.setFieldValue(\n                                              `details[${index}].price`,\n                                              -Math.abs(\n                                                item.quantity && item.unitPrice ? item.quantity * item.unitPrice : ZERO\n                                              )\n                                            );\n                                          }\n                                        }}\n                                        isDisabled={editFlag}\n                                      />\n                                    </div>\n                                    <div style={{ width: '6%', paddingTop: '9px' }}>\n                                      <div className=\"form-inline pointer pl-2\">\n                                        <i\n                                          className=\"icofont icofont-ui-add pr-2\"\n                                          onClick={() => {\n                                            setNoScroll(true);\n                                            arrayHelper.insert(\n                                              index + 1,\n                                              editFlag ? { ...textDetail } : { ...blankDetail }\n                                            );\n                                          }}\n                                          hidden={(editFlag && item.remarks !== Remark.TEXT) || disableFlag}\n                                        />\n                                        {formikProps.values.details.length === 1 && index === 0 ? (\n                                          <i\n                                            className=\"icofont icofont-trash\"\n                                            onClick={(e) => {\n                                              e.preventDefault();\n                                              arrayHelper.remove(index);\n                                              if (item.orderDetailId) {\n                                                setDeleteDetails([...deleteDetails, item.orderDetailId]);\n                                              }\n                                              setNoScroll(true);\n                                              arrayHelper.insert(index + 1, { ...blankDetail });\n                                            }}\n                                            hidden={editFlag && item.remarks !== Remark.TEXT}\n                                          />\n                                        ) : (\n                                          <i\n                                            className=\"icofont icofont-trash\"\n                                            onClick={(e) => {\n                                              e.preventDefault();\n                                              arrayHelper.remove(index);\n                                              if (item.orderDetailId) {\n                                                setDeleteDetails([...deleteDetails, item.orderDetailId]);\n                                              }\n                                            }}\n                                            hidden={(editFlag && item.remarks !== Remark.TEXT) || disableFlag}\n                                          />\n                                        )}\n                                      </div>\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </FieldArray>\n                      ) : (\n                        <DataTable\n                          style={{ width: '950px', paddingRight: '20px' }}\n                          onRowClicked={() => {\n                            if (!disableFlag) {\n                              setDetailFlg(!detailFlg);\n                            }\n                          }}\n                          columns={columns(membersOptions)}\n                          // data={formikProps.values.details.length > 1 ? formikProps.values.details : []}\n                          data={formikProps.values.details}\n                          pagination={false}\n                          noHeader\n                          subHeaderAlign=\"left\"\n                          loading={loading}\n                          selectableRows={!!id}\n                          selectableRowDisabled={(row) => row.invoiceFlag}\n                          selectableRowSelected={(row: any) => {\n                            tempRow.push(row);\n                            setSelectDetailRows(tempRow);\n                            return row;\n                          }}\n                          persistTableHead\n                          onSelectedRowsChange={handleRowSelected}\n                        />\n                      )}\n                    </div>\n                  </CardBody>\n                  <CardFooter>\n                    {detailFlg && (\n                      <Row>\n                        <Button\n                          variant=\"info\"\n                          type=\"button\"\n                          onClick={() => {\n                            setDetailFlg(!detailFlg);\n                            setLoading(false);\n                            setNoScroll(true);\n                          }}\n                          disabled={disableFlag}\n                        >\n                          保存\n                        </Button>\n                      </Row>\n                    )}\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>小計:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) < 0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) < 0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              )\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>消費税:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) *\n                                0.1 <\n                              0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) *\n                            0.1 <\n                            0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) * 0.1\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>合計金額:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) +\n                                formikProps.values.details?.reduce(\n                                  (sum: number, item) => (item.price ? sum + item.price : sum),\n                                  0\n                                ) *\n                                  0.1 <\n                              0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) +\n                            formikProps.values.details?.reduce(\n                              (sum: number, item) => (item.price ? sum + item.price : sum),\n                              0\n                            ) *\n                              0.1 <\n                            0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) +\n                                formikProps.values.details?.reduce(\n                                  (sum: number, item) => (item.price ? sum + item.price : sum),\n                                  0\n                                ) *\n                                  0.1\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                  </CardFooter>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <CardHeader\n                    style={{\n                      padding: '7px',\n                      backgroundColor: '#ddd',\n                      borderTopLeftRadius: 0,\n                      borderTopRightRadius: 0,\n                    }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>書類等</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <div className=\"form-group\">\n                      <Row>\n                        <Col className=\"form-group \">\n                          <FieldArray name=\"documents\">\n                            {(arrayHelper) => (\n                              <>\n                                {formikProps.values?.documents\n                                  ? formikProps.values.documents?.map((document, index) => (\n                                      <Row key={`serviceDocument-${index + 1}`}>\n                                        <Col className=\"form-group \">\n                                          <DocumentUploader\n                                            name={`documents[${index}].documentId`}\n                                            documentName={document.documentName}\n                                            documentId={document.documentId}\n                                            filePath={document.filePath}\n                                            filesInfo={document.filesInfo}\n                                            deleteDoc={!disableFlag}\n                                            onSelect={(files: File) => {\n                                              arrayHelper.replace(index, {\n                                                ...document,\n                                                filesInfo: files,\n                                                documentName: files.name,\n                                              });\n                                            }}\n                                            onUpload={(resDocId: number, resFilePath: string, resDocumentSaveName) => {\n                                              arrayHelper.replace(index, {\n                                                ...document,\n                                                documentId: resDocId,\n                                                filePath: resFilePath,\n                                                documentName: resDocumentSaveName || document.documentName,\n                                              });\n                                              setNoScroll(true);\n                                              arrayHelper.insert(index + 1, blankDocumentInfo);\n                                            }}\n                                            onDelete={(delId) => {\n                                              arrayHelper.remove(index);\n                                              if (delId) {\n                                                delDocId.push(delId);\n                                              }\n                                            }}\n                                            update={!!id}\n                                            prevDoc={preDocId}\n                                            // disable={disableFlag}\n                                          />\n                                        </Col>\n                                      </Row>\n                                    ))\n                                  : ''}\n                              </>\n                            )}\n                          </FieldArray>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col className=\"form-group form-inline col-lg-group col-lg-8 pr-0 pl-0\">\n                          <label\n                            className=\"col-lg-1 col-sm-5 pr-0 pl-0\"\n                            style={{ justifyContent: 'left', alignSelf: 'start' }}\n                          >\n                            メモ\n                          </label>\n                          <div className=\"col-lg-11\">\n                            <Textarea\n                              className=\"form-control \"\n                              type=\"text\"\n                              name=\"description\"\n                              style={{ width: '100%' }}\n                              value={formikProps.values.description}\n                              onChange={formikProps.handleChange}\n                            />\n                          </div>\n                        </Col>\n                      </Row>\n                    </div>\n                  </CardBody>\n                  <CardFooter />\n                </Card>\n                <div className=\"custom-form-group form-inline\" style={{ justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"info\"\n                    type=\"submit\"\n                    className=\"mr-3\"\n                    onClick={() => {\n                      setNoScroll(false);\n                      if (status === Status.ORDERED || status === Status.ORDER_CHANGED) {\n                        formikProps.setFieldValue('status', Status.ORDER_CHANGED);\n                      } else {\n                        formikProps.setFieldValue('status', Status.CREATING);\n                      }\n                      setSubmit(true);\n                    }}\n                    disabled={disableFlag}\n                  >\n                    保存\n                  </Button>\n                  <Button\n                    variant=\"info\"\n                    type=\"submit\"\n                    onClick={() => {\n                      setNoScroll(false);\n                      formikProps.setFieldValue('status', Status.ORDERED);\n                    }}\n                    disabled={disableFlag}\n                  >\n                    発行\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </AppLayout>\n  );\n};\nexport default Order;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, CardBody, CardHeader, Button, CardFooter, Alert } from 'reactstrap';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { FieldArray, Form, Formik, FormikHelpers, FormikProps } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Breadcrumb from '../components/common/breadcrumb';\nimport AppLayout from '../components/common/layout';\nimport DataTable from '../components/common/datatable/data-table';\nimport { formatDate, formatPrice, padId } from '../components/common/formatter/formatter';\nimport { CustomSelect, Input } from '../components/common/form-helper';\nimport DocumentUploader from '../components/common/document-uploader';\nimport { ScreenUrl, remarksOptions, STATUS_MAP, Status, Remark, ZERO } from '../constant/commonConstant';\nimport CustomSidebar from '../components/common/custom-sidebar';\nimport api from '../utils/api_client';\nimport CreateEmployee from '../components/employee-process/create-employee';\nimport {\n  DocumentAttributes,\n  EstimateCreateAttributes,\n  InvoiceDetailAttributes,\n  OrderCreateAttributes,\n  InvoiceCreateAttributes,\n  InvoiceUpdateAttributes,\n  InvoiceDocumentAttributes,\n} from '../api';\nimport { columns, OptionsType } from '../components/common/detail-form-common';\nimport ConfirmModal from '../components/common/confirm-modal';\n\nexport interface Detail {\n  createdAt?: string;\n  invoiceCode?: string;\n  orderDetailId?: number;\n  invoiceDetailId?: number;\n  updatedAt?: string;\n  person?: string;\n  note: string;\n  quantity?: number;\n  unit?: string;\n  unitPrice?: number;\n  price?: number;\n  remarks: string;\n  newFlg?: boolean;\n}\n\nexport interface InitialValue {\n  projectCode?: string;\n  projectName?: string;\n  serviceId: number;\n  serviceCode?: string;\n  serviceName?: string;\n  clientName?: string;\n  status: string;\n  details: Detail[];\n  invoiceDate: string;\n  orderId: number;\n  orderNumber?: string;\n  orderName?: string;\n  memo?: string;\n  invoiceId: number;\n  invoiceCode: string;\n  documents?: invoiceDocument[];\n  clientCode?: string;\n  serviceStartDate?: string;\n  serviceEndDate?: string;\n  paymentDate: string;\n}\n\nconst blankDocumentInfo: invoiceDocument = {\n  documentId: 0,\n  documentName: '',\n  filePath: '',\n  documentSaveName: '',\n};\n\ninterface invoiceDocument extends DocumentAttributes {\n  filesInfo?: File;\n}\n\nconst tableData: Detail[] = [];\n\nconst blankDetail: Detail = {\n  person: '',\n  note: '',\n  quantity: 0,\n  unit: '',\n  unitPrice: 0,\n  price: 0,\n  remarks: '',\n  newFlg: false,\n};\n\nconst textDetail: Detail = {\n  person: '',\n  note: '',\n  quantity: 0,\n  unit: '',\n  unitPrice: 0,\n  price: 0,\n  remarks: Remark.TEXT,\n};\n\nconst initialDnDState = {\n  draggedFrom: -1,\n  draggedTo: -1,\n  isDragging: false,\n  originalOrder: tableData,\n  updatedOrder: tableData,\n};\n\ninterface linkScreen {\n  name: string;\n  link: string;\n  data: { id: number; code: string; status: string };\n}\n\nconst SchemaValidation = Yup.object().shape({\n  invoiceCode: Yup.string().nullable().required().length(12),\n  paymentDate: Yup.string().nullable().required(),\n  invoiceDate: Yup.string().nullable().required(),\n});\n\nconst draftSchemaValidation = Yup.object().shape({\n  invoiceCode: Yup.string().nullable().required().length(12),\n});\n\nconst Invoice: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  const history = useHistory();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [schema, setSchema] = useState(draftSchemaValidation);\n  const [modalMember, setModalMember] = useState(false);\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\n  const [createConfirm, setCreateConfirm] = useState(false);\n  const [submit, setSubmit] = useState<boolean | undefined>(undefined);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [editFlag, setEditFlag] = useState(false);\n  const [noScroll, setNoScroll] = useState(false);\n  const [savedAlert, setSavedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [savedTempAlert, setSavedTempAlert] = useState<{ value: boolean; message: string }>({\n    value: false,\n    message: '',\n  });\n  const [membersOptions, setMembersOptions] = useState<OptionsType[]>([]);\n  const [data, setData] = useState<InitialValue>();\n  const [linkData, setLinkData] = useState<linkScreen[]>([]);\n  const [initFindData, setInitFindData] = useState<InitialValue>({\n    invoiceId: 0,\n    invoiceCode: '',\n    projectCode: '',\n    projectName: '',\n    serviceId: 0,\n    serviceCode: '',\n    serviceName: '',\n    clientCode: '',\n    clientName: '',\n    serviceStartDate: '',\n    serviceEndDate: '',\n    status: '',\n    details: [{ ...blankDetail }],\n    invoiceDate: '',\n    orderId: 0,\n    orderNumber: '',\n    orderName: '',\n    documents: [blankDocumentInfo],\n    paymentDate: '',\n  });\n  const [listData, setListData] = useState<Detail[]>([{ ...blankDetail }]);\n\n  const toggleMember = () => {\n    setModalMember(!modalMember);\n  };\n  const [dragAndDrop, setDragAndDrop] = useState(initialDnDState);\n  const [documents, setDocuments] = useState<invoiceDocument[]>([blankDocumentInfo]);\n  const [prevDocuments, setPrevDocuments] = useState<invoiceDocument[]>([blankDocumentInfo]);\n  const [preDocId, setPreDocId] = useState<number[]>([]);\n  const [delDocId, setDelDocID] = useState<number[]>([]);\n  const [orderDetailIds, setOrderDetailIds] = useState<number[]>([]);\n  const prevState: { id?: number; from?: string; rows?: any[]; savedTemp?: boolean } = location.state\n    ? (location.state as {\n        id?: number;\n        from?: string;\n        rows?: any[];\n        savedTemp?: boolean;\n      })\n    : {};\n  const classNames = ['table-body row d-flex align-items-stretch'];\n  const [deleteDetails, setDeleteDetails] = useState<number[]>([]);\n  const onDragStart = (event: { currentTarget: { dataset: { position: number } } }, value: Detail[]) => {\n    const initialPosition = Number(event.currentTarget.dataset.position);\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: initialPosition,\n      isDragging: true,\n      originalOrder: value,\n    });\n  };\n\n  const onDragOver = (event: React.DragEvent<HTMLDivElement>, formikProps: FormikProps<InitialValue>) => {\n    event.preventDefault();\n\n    let newList = dragAndDrop.originalOrder;\n\n    const { draggedFrom } = dragAndDrop;\n\n    const draggedTo = Number(event.currentTarget.dataset.position);\n\n    const itemDragged = newList[draggedFrom];\n    const remainingItems = newList.filter((item, index) => index !== draggedFrom);\n\n    newList = [...remainingItems.slice(0, draggedTo), itemDragged, ...remainingItems.slice(draggedTo)];\n\n    if (draggedTo !== dragAndDrop.draggedTo) {\n      const updateDetailIdData: Detail[] = [];\n      newList.forEach((n, i) => {\n        updateDetailIdData.push({ ...newList[i], invoiceDetailId: formikProps.values.details[i].invoiceDetailId });\n      });\n      setDragAndDrop({\n        ...dragAndDrop,\n        updatedOrder: updateDetailIdData,\n        draggedTo,\n      });\n    }\n  };\n\n  const onDrop = (formikProps: FormikProps<InitialValue>) => {\n    formikProps.setFieldValue('details', [...dragAndDrop.updatedOrder]);\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: -1,\n      draggedTo: -1,\n      isDragging: false,\n    });\n  };\n\n  const onDragLeave = () => {\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedTo: 0,\n    });\n  };\n\n  const initData: InitialValue = id\n    ? {\n        ...initFindData,\n        details: listData,\n        invoiceDate: formatDate(initFindData.invoiceDate, 'yyyy-MM-dd'),\n        paymentDate: formatDate(initFindData.paymentDate, 'yyyy-MM-dd'),\n        documents,\n      }\n    : {\n        ...initFindData,\n        details: listData,\n        status: Status.CREATING,\n        invoiceDate: '',\n        orderNumber: prevState.from === 's0011' ? '' : initFindData.orderNumber,\n        orderName: prevState.from === 's0011' ? '' : initFindData.orderName,\n        documents: [blankDocumentInfo],\n        paymentDate: '',\n      };\n  useEffect(() => {\n    setLoading(true);\n    api.employeeGetAll().then((res) => {\n      const memberList = res.data.map((member: { employeeCode: string; employeeName: string }) => ({\n        value: member.employeeCode,\n        label: member.employeeName,\n      }));\n      setMembersOptions(memberList);\n    });\n    if (!id) {\n      setDetailFlg(!detailFlg);\n    } else {\n      setEditFlag(true);\n    }\n    // setData(mockData);\n    setLoading(false);\n  }, [history, location.state]);\n\n  const handleSubmit = (values: InitialValue, actions: FormikHelpers<InitialValue>) => {\n    const invoiceUpdateId: number[] = [];\n    const submitInvoiceDetails: React.SetStateAction<any[]> = [];\n    const prevArrDocId: number[] = prevDocuments\n      ? prevDocuments.map((doc: invoiceDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const arrDocId: number[] = values.documents\n      ? values.documents.map((doc: invoiceDocument) => doc.documentId).filter(Boolean)\n      : [];\n    const createDocId: number[] = [];\n    arrDocId.forEach((val) => {\n      if (prevArrDocId.indexOf(val) <= -1) createDocId.push(val);\n    });\n    const invoiceDocCreateValue: InvoiceDocumentAttributes = {\n      invoiceId: values.invoiceId,\n      documents: createDocId,\n    };\n    const setInitMsg = () => {\n      setTimeout(() => {\n        setSavedAlert({ value: false, message: '' });\n        setCreateConfirm(false);\n        setSubmit(false);\n      }, 3000);\n    };\n    const setMessage = (statusValue: string) => {\n      if (statusValue === Status.INVOICED) {\n        setSavedAlert({ value: true, message: '発行しました' });\n        setInitMsg();\n      } else if (statusValue === Status.CREATING || statusValue === Status.INVOICE_CHANGED) {\n        setSavedAlert({ value: true, message: '保存しました' });\n        setInitMsg();\n      }\n      setStatus(statusValue);\n    };\n    if (id) {\n      if (values.status === Status.INVOICED) {\n        setCreateConfirm(true);\n      }\n      values.details.forEach((item, i: number) =>\n        submitInvoiceDetails.push({\n          invoiceDetailId: item.invoiceDetailId ? item.invoiceDetailId : null,\n          index: i + 1,\n          invoiceId: id,\n          note: item.person ? item.person : item.note,\n          person: item.person ? item.person : null,\n          quantity: item.quantity ? item.quantity : null,\n          unit: item.unit ? item.unit : null,\n          unitPrice: item.unitPrice ? item.unitPrice : null,\n          price:\n            // eslint-disable-next-line no-nested-ternary\n            item.quantity && item.unitPrice\n              ? item.remarks === Remark.DISCOUNT\n                ? -Math.abs(item.quantity * item.unitPrice)\n                : item.quantity * item.unitPrice\n              : null,\n          remarks: item.remarks,\n        })\n      );\n\n      const updateInvoiceValue: InvoiceUpdateAttributes = {\n        invoiceCode: values.invoiceCode,\n        invoiceDate: values.invoiceDate,\n        status: values.status,\n        paymentDate: values.paymentDate,\n        orderId: values.orderId,\n        details: submitInvoiceDetails,\n        deleteDetails,\n      };\n      if (submit) {\n        api.invoiceUpdate(id, updateInvoiceValue).then(() => {\n          api.updateInvoiceFlag(true, invoiceUpdateId);\n          delDocId.forEach((delId) => {\n            api.deleteInvoiceDocument(delId).then(() => {\n              api.deleteFile(delId);\n            });\n          });\n          if (invoiceDocCreateValue.documents.length > 0) {\n            api.createInvoiceDocument({ ...invoiceDocCreateValue, invoiceId: id });\n          }\n          setMessage(String(updateInvoiceValue.status));\n        });\n      }\n      history.push(location.pathname);\n    } else {\n      if (prevState.rows) {\n        prevState.rows.forEach((item) => {\n          if (item.orderDetailId) {\n            invoiceUpdateId.push(item.orderDetailId);\n          }\n        });\n      }\n\n      if (values.status === Status.INVOICED) {\n        setCreateConfirm(true);\n      }\n      values.details.forEach((item: Detail, i: number) => {\n        submitInvoiceDetails.push({\n          index: i + 1,\n          invoiceId: 0,\n          note: item.person ? item.person : item.note,\n          person: item.person ? item.person : null,\n          quantity: item.quantity ? item.quantity : null,\n          unit: item.unit ? item.unit : null,\n          unitPrice: item.unitPrice ? item.unitPrice : null,\n          price:\n            // eslint-disable-next-line no-nested-ternary\n            item.quantity && item.unitPrice\n              ? item.remarks === Remark.DISCOUNT\n                ? -Math.abs(item.quantity * item.unitPrice)\n                : item.quantity * item.unitPrice\n              : null,\n          remarks: item.remarks,\n        });\n      });\n\n      const createEstimateValue: EstimateCreateAttributes = {\n        serviceId: values.serviceId,\n        estimateCode: values.invoiceCode.trim(),\n        status: '',\n        estimateDate: values.invoiceDate,\n        details: [],\n      };\n\n      const createInvoiceValue: InvoiceCreateAttributes = {\n        invoiceCode: values.invoiceCode.trim(),\n        invoiceDate: values.invoiceDate,\n        status: values.status,\n        paymentDate: values.paymentDate,\n        orderId: values.orderId,\n        details: submitInvoiceDetails,\n      };\n      if (submit) {\n        if (values.orderId === undefined || values.orderId === 0) {\n          api.estimatePost(createEstimateValue).then((estimate) => {\n            const { estimateId } = estimate.data as any;\n            const createOrderValue: OrderCreateAttributes = {\n              orderCode: padId(values.serviceCode?.trim(), 12),\n              estimateId,\n              status: '',\n              orderDate: values.invoiceDate,\n              orderNumber: values.orderNumber !== '' ? padId(values.orderNumber?.trim(), 12) : '',\n              orderName: values.orderName !== '' ? values.orderName?.trim() : '',\n              description: '',\n              details: [],\n            };\n            api.orderPost(createOrderValue).then((order) => {\n              const { orderId } = order.data as any;\n              api.invoicePost({ ...createInvoiceValue, orderId }).then((invoice) => {\n                const { invoiceId } = invoice.data as any;\n                delDocId.forEach((delId) => {\n                  api.deleteFile(delId).then(() => {\n                    api.deleteInvoiceDocument(delId);\n                  });\n                });\n                if (invoiceDocCreateValue.documents.length > 0) {\n                  api.createInvoiceDocument({ ...invoiceDocCreateValue, invoiceId });\n                }\n                setMessage(String(createInvoiceValue.status));\n                history.push({\n                  pathname: `${ScreenUrl.INVOICE_UPDATE}${invoiceId}`,\n                  state: invoiceUpdateId,\n                });\n              });\n            });\n          });\n        } else {\n          api.invoicePost(createInvoiceValue).then((invoice) => {\n            const { invoiceId } = invoice.data as any;\n            api.updateInvoiceFlag(true, invoiceUpdateId);\n            if (invoiceDocCreateValue.documents.length > 0) {\n              api.createInvoiceDocument({ ...invoiceDocCreateValue, invoiceId });\n            }\n            setMessage(String(createInvoiceValue.status));\n            history.push({\n              pathname: `${ScreenUrl.INVOICE_UPDATE}${invoiceId}`,\n            });\n          });\n        }\n      }\n    }\n  };\n  const fetchData = async () => {\n    if (location.state) {\n      if (prevState.from === 's0013' && prevState.id) {\n        await api.getOrderById(prevState.id).then((res) => {\n          const resData = res.data as any;\n          const invoiceDetails: InvoiceDetailAttributes[] = prevState.rows ? prevState.rows : [];\n          setInitFindData({\n            ...initFindData,\n            ...resData,\n            details: invoiceDetails,\n            invoiceCode: resData.orderCode,\n          });\n          setListData([...invoiceDetails]);\n          if (prevState.savedTemp && prevState.rows && prevState.rows.length > 0) {\n            const oldDetails = prevState.rows;\n            const savedTempValue = {\n              invoiceCode: resData.orderCode.trim(),\n              invoiceDate: initFindData.invoiceDate,\n              status: Status.CREATING,\n              paymentDate: initFindData.paymentDate,\n              orderId: resData.orderId,\n              details: invoiceDetails,\n            };\n            const oldDetailUpdateId: number[] = [];\n            oldDetails.forEach((o) => {\n              oldDetailUpdateId.push(o.orderDetailId);\n            });\n            api.updateInvoiceFlag(true, oldDetailUpdateId).then(() => {\n              api.invoicePost(savedTempValue).then((invoice) => {\n                const savedTempInvoiceId = (invoice.data as any).invoiceId;\n                history.push({\n                  pathname: `${ScreenUrl.INVOICE_UPDATE}${savedTempInvoiceId}`,\n                });\n                setSavedTempAlert({ value: true, message: '保存しました' });\n                setTimeout(() => {\n                  setSavedTempAlert({ value: false, message: '' });\n                }, 3000);\n              });\n            });\n          }\n        });\n        setEditFlag(true);\n      } else if (prevState.from === 's0011' && prevState.id) {\n        await api.getServiceById(prevState.id).then((res) => {\n          const resData = res.data as any;\n          setInitFindData({ ...initFindData, ...resData, invoiceCode: padId(resData.serviceId, 12) });\n        });\n        setEditFlag(false);\n      }\n      setStatus(initData.status);\n    }\n    if (id) {\n      api.getInvoiceById(id).then((res) => {\n        const resData = res.data as any;\n        if (resData.Order) {\n          const dataLink: linkScreen[] = [];\n          if (resData.Order.Estimate.estimateStatus.trim() !== '') {\n            dataLink.push({\n              name: '見積',\n              link: `${ScreenUrl.ESTIMATE_UPDATE}`,\n              data: {\n                id: resData.Order.Estimate.estimateId,\n                code: resData.Order.Estimate.estimateCode,\n                status: resData.Order.Estimate.estimateStatus,\n              },\n            });\n          }\n          if (resData.Order.orderStatus.trim() !== '') {\n            dataLink.push({\n              name: '受注',\n              link: `${ScreenUrl.ORDER_UPDATE}`,\n              data: { id: resData.Order.orderId, code: resData.Order.orderCode, status: resData.Order.orderStatus },\n            });\n          }\n          setLinkData(dataLink);\n        }\n        setInitFindData({\n          ...initFindData,\n          ...resData,\n          orderNumber: resData.orderNumber,\n          orderName: resData.orderName,\n          details: resData.details,\n        });\n        // setPrevInvoiceDetail(resData.details);\n        setListData(resData.details ? [...resData.details] : []);\n        setStatus(resData.status);\n      });\n      const documentRes = await api.getInvoiceDocuments(id);\n      const documentData = [...documentRes.data, blankDocumentInfo];\n      setDocuments(documentData);\n      setPrevDocuments(documentData);\n      const prevArrDocId: number[] = documentData\n        ? documentData.map((doc: invoiceDocument) => doc.documentId).filter(Boolean)\n        : [];\n      setPreDocId(prevArrDocId);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    setLoading(true);\n    fetchData();\n  }, [id, location.state, savedAlert.value]);\n  const [detailFlg, setDetailFlg] = useState(false);\n  const callDeleteInvoice = (act: boolean, redirect: string) => {\n    if (act) {\n      api.deleteInvoice(id).then(() => {\n        api.updateInvDetailDelFlg(id).then((res) => {\n          const arrInvoice = res.data as any;\n          const delOrderIds: number[] = arrInvoice\n            ? arrInvoice.map((invoiceDetail: any) => invoiceDetail.orderDetailId).filter(Boolean)\n            : [];\n          api.updateInvoiceFlag(false, delOrderIds);\n        });\n        history.push(redirect, true);\n      });\n    }\n  };\n\n  return (\n    <AppLayout>\n      <Formik\n        initialValues={initData}\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={schema}\n        validate={(values) => {\n          if (values.status !== Status.CREATING) {\n            setSchema(SchemaValidation);\n          } else setSchema(draftSchemaValidation);\n        }}\n        enableReinitialize\n      >\n        {(formikProps) => (\n          <Form>\n            {!noScroll && Object.keys(formikProps.errors).length > 0 && window.scrollTo(0, 0)}\n            {linkData?.length > 0 && (\n              <CustomSidebar\n                element={\n                  <>\n                    {linkData.map((item, index) => (\n                      <div\n                        key={`linkData-${linkData.length + index - linkData.length}`}\n                        className=\"mb-4\"\n                        style={{ borderBottom: '1px solid whitesmoke' }}\n                      >\n                        <h6>{item.name}</h6>\n                        <div className=\"form-inline\">\n                          <label className=\"col-sm-3 pl-0 pr-0\">{item.name}番号:</label>\n                          <Link\n                            to={{ pathname: `${item.link}${item.data.id}`, state: 's0014' }}\n                            className=\"col-sm-5 pl-0 pr-0\"\n                          >\n                            {item.data.code ? padId(item.data.code, 12) : ''}\n                          </Link>\n                          <div className=\"col-sm-4 pl-0 pr-0\">\n                            {item.data.status !== '' ? STATUS_MAP[item.data.status] : ''}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                }\n              />\n            )}\n            <Breadcrumb\n              parent=\"受注システム\"\n              title=\"請求\"\n              bookmarkComponent={\n                id && (\n                  <div className=\"bookmark pull-right\">\n                    <Row>\n                      <Button\n                        className=\"mr-3\"\n                        variant=\"info\"\n                        onClick={() => {\n                          history.push({\n                            pathname: `${ScreenUrl.WORK_REPORT}${formikProps.values.invoiceId}`,\n                            state: formikProps.values.invoiceId,\n                          });\n                        }}\n                      >\n                        作業報告\n                      </Button>\n                      <Button\n                        variant=\"info\"\n                        className=\"mr-1\"\n                        onClick={() => {\n                          setDeleteConfirm(!deleteConfirm);\n                        }}\n                      >\n                        <i className=\"icofont icofont-trash\" />\n                      </Button>\n                    </Row>\n                  </div>\n                )\n              }\n            />\n            <Card>\n              <CardHeader>\n                <h3>請求</h3>\n                {savedAlert.value && window.scrollTo(0, 0)}\n                <Alert isOpen={savedAlert.value || savedTempAlert.value}>\n                  {savedAlert.message || savedTempAlert.message}\n                </Alert>\n                {deleteConfirm && (\n                  <ConfirmModal\n                    isOpen={deleteConfirm}\n                    modalProps={{\n                      modalTitle: '削除確認',\n                      message: '削除しますか?',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => callDeleteInvoice(true, `${ScreenUrl.ORDER_MANAGEMENT}`),\n                    }}\n                  />\n                )}\n                {createConfirm && (\n                  <ConfirmModal\n                    isOpen={createConfirm}\n                    setIsOpen={setCreateConfirm}\n                    modalProps={{\n                      modalTitle: '発行確認',\n                      message: '発行しますか?',\n                      yesTitle: 'はい',\n                      noTitle: 'いいえ',\n                      functionOnYes: () => {\n                        setSubmit(true);\n                        formikProps.submitForm().then(() => window.scrollTo(0, 0));\n                      },\n                    }}\n                  />\n                )}\n              </CardHeader>\n              <CardBody className=\"tabbed-card\">\n                {modalMember && (\n                  <CreateEmployee\n                    parentFormikProps={formikProps}\n                    currentIndex={currentIndex}\n                    dataProps={formikProps.values.details[currentIndex]?.person}\n                    isOpen={modalMember}\n                    memberOptions={membersOptions}\n                  />\n                )}\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          プロジェクト\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>\n                            {formikProps.values.projectCode} {formikProps.values.projectName}\n                          </span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          期間\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span className=\"col-sm-4 pl-0 pr-4\">{formatDate(formikProps.values.serviceStartDate)}</span>\n                          {formikProps.values.serviceStartDate || formikProps.values.serviceEndDate ? (\n                            <span>~</span>\n                          ) : null}\n                          <span className=\"col-sm-4 pr-0 pl-4\">{formatDate(formikProps.values.serviceEndDate)}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          案件\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>\n                            {formikProps.values.serviceCode} {formikProps.values.serviceName}\n                          </span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          クライアント\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>{formikProps.values.clientName}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          状況\n                        </label>\n                        <div className=\"form-inline col-sm-8 pl-0\">\n                          <span>{STATUS_MAP[formikProps.values.status]}</span>\n                        </div>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          請求番号\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <Input className=\"form-control\" type=\"text\" name=\"invoiceCode\" style={{ width: '100%' }} />\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          請求日\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <Input className=\"form-control w-50\" type=\"date\" name=\"invoiceDate\" />\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          支払期日\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <Input className=\"form-control w-50\" type=\"date\" name=\"paymentDate\" />\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          発注書番号\n                        </label>\n                        {prevState.from === 's0011' ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input className=\"form-control\" type=\"text\" name=\"orderNumber\" style={{ width: '100%' }} />\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <span>{formikProps.values.orderNumber ? formikProps.values.orderNumber.trim() : ''}</span>\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-4 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          発注書件名\n                        </label>\n                        {prevState.from === 's0011' ? (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <Input className=\"form-control\" type=\"text\" name=\"orderName\" style={{ width: '100%' }} />\n                          </Col>\n                        ) : (\n                          <Col className=\"col-sm-8 pl-0\">\n                            <span>{formikProps.values.orderName}</span>\n                          </Col>\n                        )}\n                      </Row>\n                    </Col>\n                  </Row>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <CardHeader\n                    style={{\n                      padding: '7px',\n                      backgroundColor: '#ddd',\n                      borderTopLeftRadius: 0,\n                      borderTopRightRadius: 0,\n                    }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>明細</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <div>\n                      {detailFlg ? (\n                        <FieldArray name=\"details\">\n                          {(arrayHelper) => (\n                            <div style={{ width: '950px', paddingRight: '20px' }}>\n                              <div className=\"table table-striped\">\n                                <div\n                                  className=\"row font-weight-bold pt-3 pb-3\"\n                                  style={{ paddingLeft: '5px', paddingRight: '5px' }}\n                                >\n                                  <div style={{ width: '3%' }} />\n                                  <div style={{ width: '22%' }} className=\"ml-1\">\n                                    詳細\n                                  </div>\n                                  <div style={{ width: '7%' }} className=\"ml-1\">\n                                    数量\n                                  </div>\n                                  <div style={{ width: '8%' }} className=\"ml-1\">\n                                    単位\n                                  </div>\n                                  <div style={{ width: '12%' }} className=\"ml-1\">\n                                    単価\n                                  </div>\n                                  <div style={{ width: '18%' }} className=\"ml-1\">\n                                    金額\n                                  </div>\n                                  <div style={{ width: '20%' }} className=\"ml-1\">\n                                    行の種類\n                                  </div>\n                                  <div style={{ width: '6%', padding: '0 9px' }}>\n                                    <i\n                                      className=\"icofont icofont-ui-add pr-2\"\n                                      onClick={() => {\n                                        setNoScroll(true);\n                                        arrayHelper.insert(0, editFlag ? { ...textDetail } : { ...blankDetail });\n                                      }}\n                                    />\n                                  </div>\n                                </div>\n                                {formikProps.values.details?.map((item, index: number) => (\n                                  <div\n                                    key={`detail-${\n                                      formikProps.values.details.length + index - formikProps.values.details.length\n                                    }`}\n                                    id={String(index)}\n                                    data-position={index}\n                                    draggable\n                                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                                    // @ts-ignore\n                                    onDragStart={(e) => onDragStart(e, formikProps.values.details)}\n                                    onDragOver={(e) => onDragOver(e, formikProps)}\n                                    onDrop={() => onDrop(formikProps)}\n                                    onDragLeave={onDragLeave}\n                                    className={\n                                      dragAndDrop && dragAndDrop.draggedTo === Number(index)\n                                        ? classNames.join(' dropArea')\n                                        : classNames.join('')\n                                    }\n                                  >\n                                    <div style={{ width: '3%', paddingTop: '9px' }} className=\"text-right\">\n                                      {index + 1}\n                                    </div>\n                                    <div style={{ width: '22%' }} className=\"ml-1 form-inline\">\n                                      {item.remarks === Remark.MEMBER ? (\n                                        <>\n                                          <div style={{ width: '90%' }}>\n                                            <CustomSelect\n                                              name={`details[${index}].person`}\n                                              onChange={(value) =>\n                                                formikProps.setFieldValue(\n                                                  `details[${index}].person`,\n                                                  membersOptions.filter((member) => member.value === value)[0].value\n                                                )\n                                              }\n                                              options={membersOptions}\n                                              isDisabled={editFlag}\n                                            />\n                                          </div>\n                                          <i\n                                            style={{ width: '10%' }}\n                                            className=\"pointer icofont icofont-ui-add pl-1\"\n                                            onClick={() => {\n                                              setCurrentIndex(index);\n                                              formikProps.setFieldValue(\n                                                `details[${index}].person`,\n                                                membersOptions.slice(-1)[0]?.value\n                                                  ? padId(Number(membersOptions.slice(-1)[0].value) + 1, 12)\n                                                  : padId(1, 12)\n                                              );\n                                              toggleMember();\n                                            }}\n                                            hidden={editFlag}\n                                          />\n                                        </>\n                                      ) : (\n                                        <Input\n                                          name={`details[${index}].note`}\n                                          style={{ width: '90%' }}\n                                          disabled={editFlag && item.remarks !== Remark.TEXT}\n                                        />\n                                      )}\n                                    </div>\n                                    <div style={{ width: '7%' }} className=\"ml-1\">\n                                      <Input\n                                        type=\"number\"\n                                        min={0}\n                                        name={`details[${index}].quantity`}\n                                        className=\"text-right\"\n                                        onValueChange={(value) =>\n                                          item.remarks === Remark.DISCOUNT\n                                            ? formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                -Math.abs(item.unitPrice ? Number(value) * item.unitPrice : 0)\n                                              )\n                                            : formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                item.unitPrice ? Number(value) * item.unitPrice : 0\n                                              )\n                                        }\n                                        disabled={item.remarks === Remark.TEXT || editFlag}\n                                      />\n                                    </div>\n                                    <div style={{ width: '8%' }} className=\"ml-1\">\n                                      <Input\n                                        name={`details[${index}].unit`}\n                                        disabled={item.remarks === Remark.TEXT || editFlag}\n                                      />\n                                    </div>\n                                    <div style={{ width: '12%' }} className=\"ml-1\">\n                                      <Input\n                                        type=\"number\"\n                                        min={0}\n                                        name={`details[${index}].unitPrice`}\n                                        className=\"text-right\"\n                                        onValueChange={(value) =>\n                                          item.remarks === Remark.DISCOUNT\n                                            ? formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                -Math.abs(item.quantity ? item.quantity * Number(value) : ZERO)\n                                              )\n                                            : formikProps.setFieldValue(\n                                                `details[${index}].price`,\n                                                item.quantity ? item.quantity * Number(value) : ZERO\n                                              )\n                                        }\n                                        disabled={item.remarks === Remark.TEXT || editFlag}\n                                      />\n                                    </div>\n                                    <div\n                                      style={{\n                                        width: '18%',\n                                        color: item.remarks === Remark.DISCOUNT ? 'red' : undefined,\n                                        backgroundColor:\n                                          item.remarks === Remark.TEXT || editFlag ? '#e9ecef' : undefined,\n                                        opacity: item.remarks === Remark.TEXT ? 1 : undefined,\n                                      }}\n                                      className=\"form-control text-right ml-1\"\n                                    >\n                                      {item.remarks === Remark.DISCOUNT && '－ '}\n                                      {item.quantity && item.unitPrice\n                                        ? formatPrice(item.quantity * item.unitPrice)\n                                        : ''}\n                                    </div>\n                                    <div style={{ width: '20%' }} className=\"ml-1\">\n                                      <CustomSelect\n                                        name={`details[${index}].remarks`}\n                                        options={remarksOptions}\n                                        onChange={(value) => {\n                                          formikProps.setFieldValue(\n                                            `details[${index}].price`,\n                                            item.quantity && item.unitPrice ? item.quantity * item.unitPrice : ZERO\n                                          );\n                                          if (value === Remark.TEXT) {\n                                            formikProps.setFieldValue(`details[${index}].quantity`, ZERO);\n                                            formikProps.setFieldValue(`details[${index}].unit`, '');\n                                            formikProps.setFieldValue(`details[${index}].unitPrice`, ZERO);\n                                          } else if (value === Remark.DISCOUNT) {\n                                            formikProps.setFieldValue(\n                                              `details[${index}].price`,\n                                              -Math.abs(\n                                                item.quantity && item.unitPrice ? item.quantity * item.unitPrice : 0\n                                              )\n                                            );\n                                          }\n                                        }}\n                                        isDisabled={editFlag}\n                                      />\n                                    </div>\n                                    <div style={{ width: '6%', paddingTop: '9px' }}>\n                                      <div className=\"form-inline pointer pl-2\">\n                                        <i\n                                          className=\"icofont icofont-ui-add pr-2\"\n                                          onClick={() => {\n                                            setNoScroll(true);\n                                            arrayHelper.insert(\n                                              index + 1,\n                                              editFlag ? { ...textDetail } : { ...blankDetail }\n                                            );\n                                          }}\n                                          hidden={editFlag && item.remarks !== Remark.TEXT}\n                                        />\n                                        {formikProps.values.details.length === 1 && index === 0 ? (\n                                          <i\n                                            className=\"icofont icofont-trash\"\n                                            onClick={(e) => {\n                                              e.preventDefault();\n                                              arrayHelper.remove(index);\n                                              if (item.invoiceDetailId) {\n                                                setDeleteDetails([...deleteDetails, item.invoiceDetailId]);\n                                              }\n                                              setNoScroll(true);\n                                              arrayHelper.insert(index + 1, { ...blankDetail });\n                                            }}\n                                            hidden={editFlag && item.remarks !== Remark.TEXT}\n                                          />\n                                        ) : (\n                                          <i\n                                            className=\"icofont icofont-trash\"\n                                            onClick={(e) => {\n                                              e.preventDefault();\n                                              arrayHelper.remove(index);\n                                              if (item.invoiceDetailId) {\n                                                setDeleteDetails([...deleteDetails, item.invoiceDetailId]);\n                                              }\n                                            }}\n                                            hidden={editFlag && item.remarks !== Remark.TEXT}\n                                          />\n                                        )}\n                                      </div>\n                                    </div>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </FieldArray>\n                      ) : (\n                        <DataTable\n                          style={{ width: '950px', paddingRight: '20px' }}\n                          onRowClicked={() => setDetailFlg(!detailFlg)}\n                          columns={columns(membersOptions)}\n                          data={formikProps.values.details}\n                          pagination={false}\n                          noHeader\n                          subHeaderAlign=\"left\"\n                          loading={loading}\n                          persistTableHead\n                        />\n                      )}\n                    </div>\n                  </CardBody>\n                  <CardFooter>\n                    {detailFlg && (\n                      <Row>\n                        <Button\n                          variant=\"info\"\n                          type=\"button\"\n                          onClick={() => {\n                            setDetailFlg(!detailFlg);\n                            setLoading(false);\n                            setNoScroll(true);\n                          }}\n                        >\n                          保存\n                        </Button>\n                      </Row>\n                    )}\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>小計:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) < 0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) < 0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              )\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>消費税:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) *\n                                0.1 <\n                              0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) *\n                            0.1 <\n                            0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) * 0.1\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"form-group form-inline col-lg-group\" />\n                      <Col className=\"form-group form-inline col-lg-group\">\n                        <Col className=\"col-sm-5\" />\n                        <Col className=\"col-sm-3\">\n                          <span>合計金額:</span>\n                        </Col>\n                        <Col\n                          className=\"col-sm-4\"\n                          style={{\n                            textAlign: 'right',\n                            color:\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) +\n                                formikProps.values.details?.reduce(\n                                  (sum: number, item) => (item.price ? sum + item.price : sum),\n                                  0\n                                ) *\n                                  0.1 <\n                              0\n                                ? 'red'\n                                : undefined,\n                          }}\n                        >\n                          {formikProps.values.details?.reduce(\n                            (sum: number, item) => (item.price ? sum + item.price : sum),\n                            0\n                          ) +\n                            formikProps.values.details?.reduce(\n                              (sum: number, item) => (item.price ? sum + item.price : sum),\n                              0\n                            ) *\n                              0.1 <\n                            0 && '－ '}\n                          {formatPrice(\n                            Math.abs(\n                              formikProps.values.details?.reduce(\n                                (sum: number, item) => (item.price ? sum + item.price : sum),\n                                0\n                              ) +\n                                formikProps.values.details?.reduce(\n                                  (sum: number, item) => (item.price ? sum + item.price : sum),\n                                  0\n                                ) *\n                                  0.1\n                            )\n                          )}\n                        </Col>\n                      </Col>\n                    </Row>\n                  </CardFooter>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <CardHeader\n                    style={{\n                      padding: '7px',\n                      backgroundColor: '#ddd',\n                      borderTopLeftRadius: 0,\n                      borderTopRightRadius: 0,\n                    }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>書類等</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <div className=\"form-group\">\n                      <Row>\n                        <Col className=\"form-group \">\n                          <FieldArray name=\"documents\">\n                            {(arrayHelper) => (\n                              <>\n                                {formikProps.values?.documents\n                                  ? formikProps.values.documents?.map((document, index) => (\n                                      <Row key={`serviceDocument-${index + 1}`}>\n                                        <Col className=\"form-group \">\n                                          <DocumentUploader\n                                            setNoScroll\n                                            name={`documents[${index}].documentId`}\n                                            documentName={document.documentName}\n                                            documentId={document.documentId}\n                                            filePath={document.filePath}\n                                            filesInfo={document.filesInfo}\n                                            deleteDoc\n                                            onSelect={(files: File) => {\n                                              arrayHelper.replace(index, {\n                                                ...document,\n                                                filesInfo: files,\n                                                documentName: files.name,\n                                              });\n                                            }}\n                                            onUpload={(resDocId: number, resFilePath: string) => {\n                                              arrayHelper.replace(index, {\n                                                ...document,\n                                                documentId: resDocId,\n                                                filePath: resFilePath,\n                                              });\n                                              setNoScroll(true);\n                                              arrayHelper.insert(index + 1, blankDocumentInfo);\n                                            }}\n                                            onDelete={(delId) => {\n                                              arrayHelper.remove(index);\n                                              if (delId) {\n                                                delDocId.push(delId);\n                                              }\n                                            }}\n                                            update={!!id}\n                                            prevDoc={preDocId}\n                                          />\n                                        </Col>\n                                      </Row>\n                                    ))\n                                  : ''}\n                              </>\n                            )}\n                          </FieldArray>\n                        </Col>\n                      </Row>\n                    </div>\n                  </CardBody>\n                  <CardFooter />\n                </Card>\n                <div className=\"custom-form-group form-inline\" style={{ justifyContent: 'flex-end' }}>\n                  <Button\n                    variant=\"info\"\n                    type=\"submit\"\n                    className=\"mr-3\"\n                    onClick={() => {\n                      setNoScroll(false);\n                      if (status === Status.INVOICED || status === Status.INVOICE_CHANGED) {\n                        formikProps.setFieldValue('status', Status.INVOICE_CHANGED);\n                      } else {\n                        formikProps.setFieldValue('status', Status.CREATING);\n                      }\n                      setSubmit(true);\n                    }}\n                  >\n                    保存\n                  </Button>\n                  <Button\n                    variant=\"info\"\n                    type=\"submit\"\n                    onClick={() => {\n                      setNoScroll(false);\n                      formikProps.setFieldValue('status', Status.INVOICED);\n                    }}\n                  >\n                    発行\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </AppLayout>\n  );\n};\nexport default Invoice;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, CardBody, CardHeader, Button, Alert } from 'reactstrap';\nimport { useParams, useLocation } from 'react-router';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Breadcrumb from '../components/common/breadcrumb';\nimport AppLayout from '../components/common/layout';\nimport { formatDate } from '../components/common/formatter/formatter';\nimport { CustomSelect, Input, Textarea } from '../components/common/form-helper';\nimport api from '../utils/api_client';\nimport { WorkReportCreateAttributes, WorkReportUpdateAttributes } from '../api';\nimport { OptionsType } from '../components/common/detail-form-common';\n\ninterface InitialValue {\n  title: string;\n  orderNumber: string;\n  orderName: string;\n  serviceStartDate: string;\n  serviceEndDate: string;\n  clientCode: string;\n  clientName: string;\n  members: string[];\n  workingTime: number;\n  workInfo: string;\n  relatedDocument: string;\n}\n\n/**\n * 初期値\n */\nconst initialValues: InitialValue = {\n  title: '',\n  orderNumber: '',\n  orderName: '',\n  serviceStartDate: '',\n  serviceEndDate: '',\n  clientCode: '',\n  clientName: '',\n  members: [],\n  workingTime: 160,\n  workInfo: '',\n  relatedDocument: '',\n};\n\nconst SchemaValidation = Yup.object().shape({\n  title: Yup.string().nullable().max(267),\n  workingTime: Yup.number().nullable().required(),\n  workInfo: Yup.string().nullable().max(255),\n  relatedDocument: Yup.string().nullable().max(255),\n});\n\nconst WorkReport: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  const location = useLocation();\n  const [savedAlert, setSavedAlert] = useState<{ value: boolean; message: string }>({ value: false, message: '' });\n  const [memberList, setMemberList] = useState<OptionsType[]>([]);\n  const [initialData, setInitialData] = useState<InitialValue>(initialValues);\n\n  const fetchData = async () => {\n    // 開発要員セレクト値取得\n    api.employeeGetAll().then((res) => {\n      const members = res.data.map((member: { employeeCode: string; employeeName: string }) => ({\n        value: member.employeeCode,\n        label: member.employeeName,\n      }));\n      setMemberList(members);\n    });\n  };\n\n  useEffect(() => {\n    fetchData().then();\n\n    // 作業報告データ取得\n    api.getWorkReportById(id).then((res) => {\n      const resData = res.data as any;\n      // 更新\n      if (resData.workReportId) {\n        // タイトルが空なら受注データから件名を作成\n        if (resData.title === null) {\n          resData.orderNumber = resData.orderNumber.trim();\n          resData.orderName = resData.orderName.trim();\n          // 発注書番号と発注書件名が登録されていたら、作成。未登録時は空。\n          if (resData.orderNumber && resData.orderName) {\n            resData.title = `【${resData.orderNumber}】${resData.orderName}`;\n          }\n        }\n\n        // null対策\n        Object.keys(resData).map((key) => {\n          if (resData[key] === null) {\n            resData[key] = '';\n          }\n          return resData;\n        });\n\n        setInitialData({\n          ...initialData,\n          ...resData,\n        });\n\n        // 新規作成\n      } else {\n        const invoiceId: number = location.state as number;\n\n        api.getWorkReportById(invoiceId).then((resInvoice) => {\n          const resInvoiceData = resInvoice.data as any;\n          // 件名を受注データから作成。\n          if (resInvoiceData) {\n            resInvoiceData.orderNumber = resInvoiceData.orderNumber.trim();\n            resInvoiceData.orderName = resInvoiceData.orderName.trim();\n            // 発注書番号と発注書件名が登録済なら作成、未登録で空。\n            if (resInvoiceData.orderNumber && resInvoiceData.orderName) {\n              resInvoiceData.title = `【${resInvoiceData.orderNumber}】${resInvoiceData.orderName}`;\n            }\n\n            // null対策\n            Object.keys(resInvoiceData).map((key) => {\n              if (resInvoiceData[key] === null) {\n                resInvoiceData[key] = '';\n              }\n              return resInvoiceData;\n            });\n\n            setInitialData({\n              ...initialData,\n              ...resInvoiceData,\n              invoiceId,\n            });\n          }\n        });\n      }\n    });\n  }, []);\n\n  // 保存・更新処理\n  const handleSubmit = (values: any) => {\n    // 更新\n    if (values.workReportId) {\n      const updateWorkReportValue: WorkReportUpdateAttributes = {\n        workReportId: values.workReportId,\n        invoiceId: values.invoiceId,\n        title: values.title,\n        workingTime: values.workingTime,\n        workInfo: values.workInfo,\n        relatedDocument: values.relatedDocument,\n      };\n\n      api.workReportUpdate(values.workReportId, updateWorkReportValue).then(() => {\n        window.scrollTo(0, 0);\n        setSavedAlert({ value: true, message: '保存しました' });\n        setTimeout(() => {\n          setSavedAlert({ value: false, message: '' });\n        }, 3000);\n      });\n      // 新規作成\n    } else {\n      // 新規work_report_idはinvoice_codeがベース。\n      const newWorkReportId = values.invoiceId;\n      const createWorkReportValue: WorkReportCreateAttributes = {\n        workReportId: newWorkReportId,\n        invoiceId: values.invoiceId,\n        title: values.title,\n        workingTime: values.workingTime,\n        workInfo: values.workInfo,\n        relatedDocument: values.relatedDocument,\n      };\n\n      api.workReportPost(createWorkReportValue).then(() => {\n        window.scrollTo(0, 0);\n        setSavedAlert({ value: true, message: '保存しました' });\n        setTimeout(() => {\n          setSavedAlert({ value: false, message: '' });\n        }, 3000);\n      });\n    }\n  };\n\n  return (\n    <AppLayout>\n      <Formik\n        initialValues={initialData}\n        onSubmit={(values) => handleSubmit(values)}\n        validationSchema={SchemaValidation}\n        enableReinitialize\n      >\n        {(formikProps) => (\n          <Form>\n            <Breadcrumb\n              parent=\"受注システム\"\n              title=\"作業報告\"\n              bookmarkComponent={\n                <div className=\"bookmark pull-right mr-4\">\n                  <Button id=\"no-print\" variant=\"info\" className=\"mr-3\" onClick={() => window.print()}>\n                    印刷 <i className=\"icofont icofont-printer\" />\n                  </Button>\n                </div>\n              }\n            />\n            <Card id=\"section-to-print\">\n              <CardHeader>\n                <h3>作業報告</h3>\n                <Alert isOpen={savedAlert.value}>{savedAlert.message}</Alert>\n              </CardHeader>\n              <CardBody className=\"tabbed-card\">\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none' }}>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row>\n                        <label className=\"col-sm-3 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          件名\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <Input className=\"w-100\" type=\"text\" name=\"title\" />\n                          {/* <span>\n                            {formikProps.values.orderName}\n                          </span> */}\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row style={{ alignItems: 'center' }}>\n                        <label className=\"col-sm-3 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          期間\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span className=\"col-sm-4 pl-0 pr-4\">{formatDate(formikProps.values.serviceStartDate)}</span>\n                          {formikProps.values.serviceStartDate || formikProps.values.serviceEndDate ? (\n                            <span>~</span>\n                          ) : null}\n                          <span className=\"col-sm-4 pr-0 pl-4\">{formatDate(formikProps.values.serviceEndDate)}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row>\n                        <label className=\"col-sm-3 pl-0 pr-1\" style={{ justifyContent: 'left' }}>\n                          クライアント\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <span>{formikProps.values.clientName}</span>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\">\n                      <Row>\n                        <label className=\"col-sm-3 pl-1 pr-0\" style={{ justifyContent: 'left' }}>\n                          開発要員\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <CustomSelect name=\"members\" options={memberList} isDisabled isMulti />\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                  <Row className=\"custom-form-group form-inline\">\n                    <Col className=\"col-sm-6 col-md-5 col-lg-6 pl-5\">\n                      <Row>\n                        <label className=\"col-sm-3 pl-0 pr-1 required\" style={{ justifyContent: 'left' }}>\n                          作業時間\n                        </label>\n                        <Col className=\"col-sm-8 pl-0\">\n                          <Input className=\"w-100\" type=\"text\" name=\"workingTime\" />\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col className=\"col-sm-6 col-md-5 offset-md-2 col-lg-6 offset-lg-0 pl-5\" />\n                  </Row>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none', marginBottom: 0 }}>\n                  <CardHeader\n                    style={{ padding: '7px', backgroundColor: '#ddd', borderTopLeftRadius: 0, borderTopRightRadius: 0 }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>作業内容</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <Textarea name=\"workInfo\" className=\"custom-textarea\" />\n                  </CardBody>\n                </Card>\n                <Card className=\"b-r-0\" style={{ boxShadow: 'none', marginBottom: 0 }}>\n                  <CardHeader\n                    style={{ padding: '7px', backgroundColor: '#ddd', borderTopLeftRadius: 0, borderTopRightRadius: 0 }}\n                  >\n                    <h6 style={{ marginBottom: '0px' }}>作業成果物・関連資料</h6>\n                  </CardHeader>\n                  <CardBody>\n                    <Textarea name=\"relatedDocument\" className=\"custom-textarea\" />\n                  </CardBody>\n                </Card>\n                <div className=\"custom-form-group form-inline\" style={{ justifyContent: 'flex-end' }}>\n                  <Button variant=\"info\" type=\"submit\" id=\"no-print\">\n                    保存\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </Form>\n        )}\n      </Formik>\n    </AppLayout>\n  );\n};\nexport default WorkReport;\n","import {ADD_COSTOMIZER , ADD_LAYOUT ,ADD_SIDEBAR_TYPES, ADD_SIDEBAR_SETTINGS ,ADD_COLOR ,ADD_MIXlAYOUT} from \"../constant/actionTypes\";\nimport ConfigDB from '../data/customizer/config';\n\nconst initial_state = {\n    customizer : ConfigDB.data,\n    configData:{},\n    layout:'ltr',\n    sidebar_types:{},\n    settings:'',\n    color:{},\n    mix_layout:''\n};\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n        \n        case ADD_COSTOMIZER:\n            return { ...state, loading: false, customizer:ConfigDB.data };\n\n        case ADD_LAYOUT:\n            state.customizer.settings.layout_type = action.payload\n            const layoutUpdate = state.customizer.settings.layout_type;\n            return  { ...state, loading: true ,layout : layoutUpdate };\n        \n        case ADD_SIDEBAR_TYPES:\n            state.customizer.settings.sidebar=action.payload\n            const sidebarTypeUpdate = state.customizer.settings.sidebar;\n            \n            return  { ...state, loading: true ,sidebar_types:sidebarTypeUpdate };\n        \n        case ADD_SIDEBAR_SETTINGS:\n            state.customizer.settings.sidebar_setting=action.payload\n            const settingsUpdate = state.customizer.settings.sidebar_setting;\n            return  { ...state, loading: true , settings: settingsUpdate};\n        \n        case ADD_COLOR : \n            const colors = action.payload;\n            state.customizer.color.primary_color = colors.primary_color;\n            state.customizer.color.secondary_color = colors.secondary_color;\n            state.customizer.color.color = colors.color;\n            state.customizer.color.layout_version = colors.layout_version;\n            \n            return  { ...state, color: colors, loading: true };\n        \n        case ADD_MIXlAYOUT:\n            const mix_layout = action.payload\n            state.customizer.color.mix_layout = mix_layout;\n\n            return  { ...state, mix_layout: mix_layout, loading: true };\n\n        default: return { ...state };\n    }\n}\n","import { combineReducers } from 'redux';\nimport Customizer from './customizer.reducer';\n\nconst reducers = combineReducers({\n    Customizer\n});\n\nexport default reducers;","//CUSTOMIZER \nexport const ADD_COSTOMIZER =\"ADD_COSTOMIZER\";\nexport const ADD_LAYOUT = \"ADD_LAYOUT\";\nexport const ADD_SIDEBAR_TYPES = \"ADD_SIDEBAR_TYPES\";\nexport const ADD_SIDEBAR_SETTINGS =\"ADD_SIDEBAR_SETTINGS\";\nexport const ADD_COLOR = \"ADD_COLOR\";\nexport const ADD_MIXlAYOUT = \"ADD_MIXlAYOUT\";\n\n","import { createStore, applyMiddleware, compose } from 'redux';\n\n// middlewares\nimport thunkMiddleware from 'redux-thunk'\n\n// Import custom components\nimport reducers from '../reducers/index';\n\n\nfunction saveToLocalStorage(state) {\n    try {\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    }catch(e){\n        return undefined\n    }\n}\n\n/**\n * Create a Redux store that holds the app state.\n */\nconst store = createStore(reducers,   compose(\n    applyMiddleware(thunkMiddleware),\n\n    //For working redux dev tools in chrome (https://github.com/zalmoxisus/redux-devtools-extension)\n    window.devToolsExtension ? window.devToolsExtension() : function (f) {\n        return f;\n    }\n));\n\n// eslint-disable-next-line\nconst unsubscribe = store.subscribe(() => {\n    const state = store.getState();\n    saveToLocalStorage(state);\n});\n\n\nexport default store;","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [pathname]);\n\n  return null;\n};\nexport default ScrollToTop;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { initYupLocale } from './constant/locale-ja'; // Don't move this\nimport { Home } from './pages/home';\nimport { ScreenUrl } from './constant/commonConstant';\nimport OrderManagement from './pages/s0010';\nimport Service from './pages/s0011';\nimport Estimate from './pages/s0012';\nimport Order from './pages/s0013';\nimport Invoice from './pages/s0014';\nimport WorkReport from './pages/s0015';\nimport store from './store/index';\nimport ScrollToTop from './components/common/scroll-top-route';\nimport './App.css';\n\ninitYupLocale();\n\nfunction App(): JSX.Element {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <ScrollToTop />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path={ScreenUrl.ORDER_MANAGEMENT} component={OrderManagement} />\n            <Route exact path={ScreenUrl.SERVICE_CREATE} component={Service} />\n            <Route exact path={`${ScreenUrl.SERVICE_UPDATE}:id`} component={Service} />\n            <Route exact path={ScreenUrl.ESTIMATE_CREATE} component={Estimate} />\n            <Route exact path={`${ScreenUrl.ESTIMATE_UPDATE}:id`} component={Estimate} />\n            <Route exact path={ScreenUrl.ORDER_CREATE} component={Order} />\n            <Route exact path={`${ScreenUrl.ORDER_UPDATE}:id`} component={Order} />\n            <Route exact path={ScreenUrl.INVOICE_CREATE} component={Invoice} />\n            <Route exact path={`${ScreenUrl.INVOICE_UPDATE}:id`} component={Invoice} />\n            <Route exact path={`${ScreenUrl.WORK_REPORT}:id`} component={WorkReport} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}